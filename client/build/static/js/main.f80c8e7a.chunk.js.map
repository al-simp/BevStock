{"version":3,"sources":["components/TopSellerChart.js","components/inventory/PDFPredictedOrder.js","components/inventory/PredictedOrderModal.js","components/inventory/ProductAlerts.js","components/stocktaking/DashboardLists.js","components/DashboardStocktaking.js","components/inventory/StockRecords.js","components/Dashboard.js","components/Login.js","components/Landing.js","components/stocktaking/AddList.js","components/stocktaking/AssignList.js","components/stocktaking/ShowLists.js","components/stocktaking/Stocktaking.js","components/team_management/EditTeamMember.js","components/team_management/ShowTeam.js","components/team_management/AddTeamMember.js","components/team_management/TeamManagement.js","components/stocktaking/Dropdown.js","components/stocktaking/CountModal.js","components/stocktaking/Bottle.js","components/stocktaking/QrScan.js","components/stocktaking/Count.js","components/inventory/InventoryBreakdown.js","components/PdfGenerator.js","components/inventory/Inventory.js","user/UserDashboard.js","user/UserShowLists.js","user/UserStocktake.js","components/stocktaking/Product.js","components/stocktaking/ViewEdit.js","components/stocktaking/StocktakeLists.js","components/Nav.js","components/inventory/AddNewProduct.js","components/inventory/ProductsDB.js","components/inventory/ProcessDelivery.js","components/inventory/PreviousStocktakeRecords.js","App.js","index.js","images/beer-bottle.png"],"names":["TopSellerChart","weekData","weekLabels","allTimeData","allTimeLabels","useState","data","setData","labels","setLabels","isAllTime","setIsAllTime","showThisWeek","useEffect","className","role","aria-label","type","onClick","datasets","options","legend","display","title","position","text","scales","yAxes","ticks","beginAtZero","PDFPredictedOrder","levels","doc","jsPDF","autoTable","head","body","map","item","name","size","category","quantity","save","PredictedOrderModal","predictedOrder","filter","el","sum","avg_weekly_sales","id","product_id","product_name","product_size","product_category","Math","abs","Number","data-toggle","data-target","key","_","isEmpty","data-dismiss","ProductAlerts","DashboardLists","stocktake","allLists","setAllLists","getLists","a","fetch","method","headers","token","localStorage","response","json","parseRes","console","error","message","list","stocklist_id","stocklist_name","href","DashBoardStocktaking","StockRecords","stocktakes","setStocktakes","getStoctakes","stocktake_id","date","stocktake_date","format","Dashboard","setAuth","setStocktake","setLevels","graphLabels","setGraphLabels","graphData","setGraphData","setAllTimeLabels","setAllTimeData","stockId","getItem","getLevels","log","getTopSellers","product","sales","getTopSellersAllTime","userType","to","Login","publicVapidKey","email","password","inputs","setInputs","onChange","e","target","value","onSubmitform","preventDefault","JSON","stringify","setItem","checkStocktake","findLastStocktake","getDuties","sendPush","toast","success","length","navigator","send","catch","err","serviceWorker","register","scope","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","base64String","base64","repeat","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","onSubmit","placeholder","Landing","AddList","setListsChange","setStocklistName","onSubmitForm","myHeaders","Headers","append","AssignList","users","setUsers","getTeamMembers","event","user","userMessage","document","getElementById","user_id","setAttribute","modalBackdrops","getElementsByClassName","removeChild","user_name","assignToUser","ShowLists","assignedLists","setAssignedLists","unassignedLists","setUnassignedLists","lists","setLists","stocktakeInstance","setStocktakeInstance","getAssignedLists","getUnassignedLists","unassign","deleteList","stocklist","completed","user_message","Stocklists","listsChange","parseData","removeItem","logout","EditTeamMember","member","setTeamChange","setName","user_email","setEmail","setDetails","username","editDetails","ShowTeam","allTeamMembers","team","setTeamMembers","deleteTeamMember","app_user","AddTeamMember","modal","userRole","TeamManagement","teamChange","getTeam","Dropdown","listId","setQuantityChange","products","setProducts","stocktakeBoo","setStocktakeBoo","getProducts","jsonData","label","selected","setSelected","addItemStocktake","productId","addItem","forEach","labelledBy","CountModal","setProductsChange","stocktakeid","setQuantity","partial","setPartial","tempQuantity","setTempQuantity","setProductQuantity","rows","product_stocklist_id","step","min","max","src","Bottle","alt","height","width","props","bottle","setBottle","result","hasScanned","hasResult","setPairBool","getBottle","QrCodeReader","state","delay","handleScan","bind","this","setState","style","onError","handleError","onScan","Component","Count","scanner","setScanner","quantityChange","match","params","getName","getCountProducts","InventoryBreakdown","breakdown","setBreakdown","getInventoryBreakdown","PdfGenerator","inventory","Inventory","setInventory","search","setSearch","getInventory","filteredInventory","toLowerCase","includes","UserDashboard","hasDuties","setHasDuties","clear","UserShowLists","checkAssignedDuties","completed_message","cols","markComplete","UserStocktake","Product","data-testid","ViewEdit","productsChange","dragging","setDragging","dragItem","useRef","dragNode","dragMode","setDragMode","handleDragEnd","current","removeEventListener","setPosition","productI","deleteProduct","draggable","onDragStart","addEventListener","setTimeout","handleDragStart","onDragEnter","oldProducts","newList","parse","splice","StocktakeLists","allCounted","setAllCounted","distinctProducts","setDistinctProducts","currentStocktake","dateString","Date","toString","productsResponse","productsResult","createRecord","newStocktake","checkAllCounted","getDistinctProducts","getAndWriteSalesNumbers","getSalesData","promise","then","writeSales","prevStocktake","setStocktakeInactive","warning","endStocktake","Nav","setIsAuthenticated","isAuthenticated","latestInventoryId","setLatestInventoryId","isAuth","AddNewProduct","par","productCategory","ProductsDb","filteredProducts","par_level","ProcessDelivery","addNewStock","quantityInput","configure","App","boolean","exact","path","render","Stocktaking","PreviousStocktakeRecords","QrScan","React1","require","ReactDOM","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.f80c8e7a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport _ from \"lodash\";\r\n\r\nconst TopSellerChart = ({\r\n  weekData,\r\n  weekLabels,\r\n  allTimeData,\r\n  allTimeLabels,\r\n}) => {\r\n  const [data, setData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n  const [isAllTime, setIsAllTime] = useState([]);\r\n\r\n  const showThisWeek = () => {\r\n    setData(weekData);\r\n    setLabels(weekLabels);\r\n    setIsAllTime(false);\r\n  };\r\n\r\n  const showAllTime = () => {\r\n    setData(allTimeData);\r\n    setLabels(allTimeLabels);\r\n    setIsAllTime(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    showThisWeek();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"btn-group btn-group-sm float-right\"\r\n        role=\"group\"\r\n        aria-label=\"Basic example\"\r\n      >\r\n        <button type=\"button\" onClick={showThisWeek} className={!isAllTime ? (\"btn btn-primary active\") : (\"btn btn-primary\")}>\r\n          This Week\r\n        </button>\r\n        <button type=\"button\" onClick={showAllTime} className={isAllTime ? (\"btn btn-primary active\") : (\"btn btn-primary\")}>\r\n          All Time\r\n        </button>\r\n      </div>\r\n      <h6>Top Sellers</h6>\r\n      <Bar\r\n        data={{\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              data: data,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            display: false,\r\n            position: \"left\",\r\n            text: \"Top Selling Products\",\r\n          },\r\n          scales: {\r\n            yAxes: [\r\n              {\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSellerChart;\r\n","import React, { PureComponent, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst PDFPredictedOrder = ({ levels }) => {\r\n  // jspdf generator function\r\n  const jsPdfGenerator = () => {\r\n    //new document in jspdf\r\n\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n\r\n    doc.autoTable({\r\n      head: [[\"Product\", \"Size\", \"Category\", \"Quantity\"]],\r\n      body: levels.map((item) => {\r\n          return [\r\n            item.name,\r\n            item.size,\r\n            item.category,\r\n            item.quantity,\r\n          ];\r\n      }),\r\n    });\r\n\r\n    doc.save(\"generated.pdf\");\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-info\" onClick={jsPdfGenerator}>\r\n      Generate PDF Report\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PDFPredictedOrder;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PDFPredictedOrder from \"./PDFPredictedOrder\";\r\nimport _ from \"lodash\";\r\n\r\nconst PredictedOrderModal = ({ levels }) => {\r\n  const filteredItems = levels.filter(function (el) {\r\n    return el.sum - el.avg_weekly_sales < 0;\r\n  });\r\n\r\n  const predictedOrder = filteredItems.map((item) => {\r\n    return {\r\n      id: item.product_id,\r\n      name: item.product_name,\r\n      size: item.product_size,\r\n      category: item.product_category,\r\n      quantity:\r\n        Math.abs(Number(item.sum - item.avg_weekly_sales)) +\r\n        item.avg_weekly_sales,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary btn-sm float-right mb-2\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#predictedOrder\"\r\n      >\r\n        View Predicted Order\r\n      </button>\r\n\r\n      <div className=\"modal\" id=\"predictedOrder\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Predicted Order</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Size</th>\r\n                  <th>Category</th>\r\n                  <th>Quantity</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {predictedOrder.map((item) => {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.size}</td>\r\n                      <td>{item.category}</td>\r\n                      <td>{item.quantity}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"modal-footer\">\r\n              {_.isEmpty(predictedOrder) ? null : (\r\n                <PDFPredictedOrder levels={predictedOrder} />\r\n              )}\r\n              <button className=\"btn btn-success\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PredictedOrderModal;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PredictedOrderModal from \"./PredictedOrderModal\";\r\n\r\nconst ProductAlerts = ({ levels }) => {\r\n  return (\r\n    <div>\r\n      <PredictedOrderModal levels={levels} />\r\n\r\n      <h6 className=\"mb-3\">Low Product Alerts</h6>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Avg Weekly Sales</th>\r\n            <th>Quantity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {levels.map((item) => {\r\n            if (item.avg_weekly_sales > Number(item.sum)) {\r\n              return (\r\n                <tr key={item.product_id}>\r\n                  <td>{item.product_name}</td>\r\n                  <td>{item.avg_weekly_sales}</td>\r\n                  {Number(item.sum) === 0 ? (\r\n                    <td>\r\n                      <span className=\"badge badge-pill badge-danger\">\r\n                        Out Of Stock\r\n                      </span>\r\n                    </td>\r\n                  ) : (\r\n                    <td>\r\n                      <span className=\"badge badge-pill badge-warning\">\r\n                        Running Low: {item.sum}\r\n                      </span>\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductAlerts;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst DashboardLists = ({ stocktake }) => {\r\n  const [allLists, setAllLists] = useState([]);\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      setAllLists(parseRes);\r\n    } catch (error) {\r\n        console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n  }, []);\r\n\r\n  return !stocktake ? (\r\n    <div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Area</th>\r\n            <th>View/Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allLists.map((list) => (\r\n            <tr key={list.stocklist_id}>\r\n              <td>{list.stocklist_name}</td>\r\n              <td>\r\n                <a\r\n                  className=\"badge badge-pill badge-primary\"\r\n                  href={`viewedit/${list.stocklist_id}`}\r\n                >\r\n                  View/Edit\r\n                </a>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  ) : (<div>Stockatke in progress</div>);\r\n};\r\nexport default DashboardLists;\r\n","import React from \"react\";\r\nimport DashboardLists from \"./stocktaking/DashboardLists\";\r\n\r\nconst DashBoardStocktaking = ({ stocktake }) => {\r\n  return (\r\n    <div>\r\n      <h6>Stocktaking</h6>\r\n      <DashboardLists stocktake={stocktake} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashBoardStocktaking;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst StockRecords = () => {\r\n  const [stocktakes, setStocktakes] = useState([]);\r\n  const getStoctakes = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/inventory/stocktakes\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setStocktakes(parseRes);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStoctakes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h6>Previous Stocktake Records</h6>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Stocktake</th>\r\n            <th>ID</th>\r\n            <th>View</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {stocktakes.map((stocktake) => (\r\n                <tr key={stocktake.stocktake_id}>\r\n                    <td><Moment date ={stocktake.stocktake_date} format=\"DD/MM/YYYY HH:mm\"/></td>\r\n                    <td>{stocktake.stocktake_id}</td>\r\n                    <td><a className=\"badge badge-pill badge-primary\" href={`/stocktakerecord/${stocktake.stocktake_id}`}\r\n>View</a></td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default StockRecords;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TopSellerChart from \"../components/TopSellerChart\";\r\nimport ProductAlerts from \"../components/inventory/ProductAlerts\";\r\nimport DashBoardStocktaking from \"./DashboardStocktaking\";\r\nimport StockRecords from \"./inventory/StockRecords\";\r\nimport _ from \"lodash\";\r\n\r\nconst Dashboard = ({ setAuth, name }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [predictedOrder, setPredictedOrder] = useState([]);\r\n  const [levels, setLevels] = useState([]);\r\n  const [graphLabels, setGraphLabels] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [allTimeLabels, setAllTimeLabels] = useState([]);\r\n  const [allTimeData, setAllTimeData] = useState([]);\r\n\r\n  //get id of stocktake if stocktake in progress\r\n  const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n\r\n  //if stock ID exists, set stocktake to true.\r\n  const Stocktake = () => {\r\n    if (stockId !== 0) {\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getPredictedOrder = (levels) => {\r\n    setPredictedOrder(\r\n      levels.map((item) => {\r\n        return {\r\n          name: item.product_name,\r\n          predictedOrder: Number(\r\n            Number(item.sum) - item.avg_weekly_sales + item.par_level\r\n          ),\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  //find levels with pars for product alerts components.\r\n  const getLevels = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/levels/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setLevels(parseRes);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  //get top selling products for chart (week)\r\n  const getTopSellers = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/topsellers/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setGraphLabels(\r\n        parseRes.map((product) => {\r\n          return product.product_name;\r\n        })\r\n      );\r\n      setGraphData(\r\n        parseRes.map((product) => {\r\n          return product.sales;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //get top selling products for chart (all time)\r\n  const getTopSellersAllTime = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/alltimetopsellers/`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setAllTimeLabels(\r\n        parseRes.map((product) => {\r\n          return product.product_name;\r\n        })\r\n      );\r\n      setAllTimeData(\r\n        parseRes.map((product) => {\r\n          return product.sum;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const getPermission = async () => {\r\n    Notification.requestPermission().then(function (result) {\r\n      console.log(result);\r\n    });\r\n  };\r\n\r\n  //get userType for conditional render\r\n  const userType = localStorage.getItem(\"role\");\r\n\r\n  useEffect(() => {\r\n    getLevels();\r\n    getTopSellers();\r\n    Stocktake();\r\n    getTopSellersAllTime();\r\n  }, []);\r\n\r\n  return userType === \"User\" ? (\r\n    <Redirect to=\"/userdashboard\" />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n              <h1 className=\"h2\">Welcome back, {name}!</h1>\r\n              <div className=\"btn-toolbar mb-2 mb-md-0\"></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                {_.isEmpty(graphLabels) || _.isEmpty(graphData) ? (\r\n                  <div>Loading</div>\r\n                ) : (\r\n                  <TopSellerChart\r\n                    weekData={graphData}\r\n                    weekLabels={graphLabels}\r\n                    allTimeData={allTimeData}\r\n                    allTimeLabels={allTimeLabels}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {_.isEmpty(levels) ? (\r\n                  <div>Loading...</div>\r\n                ) : (\r\n                  <ProductAlerts levels={levels} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <StockRecords />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <DashBoardStocktaking stocktake={stocktake} />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  //key for pust notifications API\r\n  const publicVapidKey =\r\n    \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n\r\n      const response = await fetch(`http://localhost:5000/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        localStorage.setItem(\"role\", parseRes.role);\r\n        localStorage.setItem(\"name\", parseRes.name);\r\n        await checkStocktake();\r\n        await findLastStocktake();\r\n        if (\r\n          !_.isEmpty(localStorage.getItem(\"stocktake\")) &&\r\n          localStorage.getItem(\"role\") === \"Admin\"\r\n        ) {\r\n          sendPush();\r\n        } else {\r\n          getDuties();\r\n        }\r\n\r\n        setAuth(true);\r\n\r\n        toast.success(\"Login successful!\");\r\n      } else {\r\n        setAuth(false);\r\n\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  async function getDuties() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/dashboard/duties\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        sendPush();\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  //method to check if there are any active stocktakes within the database.\r\n  async function checkStocktake() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocktake/activestocktake\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      // if a record exists, set the data in local storage.\r\n      if (parseRes.length > 0) {\r\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  //method to find last stocktake for inventory records\r\n  async function findLastStocktake() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/inventory/latest\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      localStorage.setItem(\"laststocktake\", parseRes[0].stocktake_id);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  // method to send push notification\r\n  const sendPush = () => {\r\n    if (\"serviceWorker\" in navigator) {\r\n      send().catch((err) => {\r\n        console.error(err);\r\n      });\r\n    }\r\n  };\r\n\r\n  //register sw, register push, send push\r\n  async function send() {\r\n    //register service worker\r\n    console.log(\"registering service worker...\");\r\n    const register = await navigator.serviceWorker.register(\"worker.js\", {\r\n      scope: \"/\",\r\n    });\r\n\r\n    console.log(\"Service Worker Registered.....\");\r\n\r\n    //register push\r\n    console.log(\"Registering push....\");\r\n\r\n    const subscription = await register.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n\r\n    console.log(\"push registered..\");\r\n\r\n    // Send push notification\r\n\r\n    console.log(\"sending push\");\r\n    await fetch(`http://localhost:5000/subscribe/${localStorage.getItem(\"role\")}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(subscription),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    console.log(\"push sent...\");\r\n  }\r\n\r\n  function urlBase64ToUint8Array(base64String) {\r\n    const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, \"+\")\r\n      .replace(/_/g, \"/\");\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"m-5\">\r\n        <h1 className=\"text-center my-5\">Login</h1>\r\n        <form onSubmit={onSubmitform}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            className=\"form-control my-3\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"form-control my-3\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <button className=\"btn btn-success btn-block\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div className=\"jumbotron mt-5\">\r\n      <h1>Welcome to BevStock</h1>\r\n      <p>Sign In to continue</p>\r\n      <Link to=\"/login\" className=\"btn btn-primary\">\r\n        Login\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React, { Fragment, useState } from \"react\";\r\n\r\nconst AddList = ({ setListsChange }) => {\r\n    const [stocklist_name, setStocklistName] = useState(\"\");\r\n  \r\n    const onSubmitForm = async e => {\r\n      e.preventDefault();\r\n      try {\r\n        const myHeaders = new Headers();\r\n  \r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"token\", localStorage.token);\r\n  \r\n        const body = { stocklist_name };\r\n        const response = await fetch(\"http://localhost:5000/stocklists/add\", {\r\n          method: \"POST\",\r\n          headers: myHeaders,\r\n          body: JSON.stringify(body)\r\n        });\r\n  \r\n        await response.json();\r\n      \r\n        setListsChange(true);\r\n        setStocklistName(\"\");\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n    };\r\n    return (\r\n      <Fragment>       \r\n       <form className=\"d-flex\" onSubmit={onSubmitForm}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"add new stock area\"\r\n            className=\"form-control\"\r\n            value={stocklist_name}\r\n            onChange={e => setStocklistName(e.target.value)}\r\n          />\r\n          <button className=\"btn btn-success \">Add</button>\r\n        </form>\r\n        </Fragment>\r\n\r\n    );\r\n  };\r\n  \r\n  export default AddList;\r\n  ","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nconst AssignList = ({ name, stocklist_id, setListsChange }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const getTeamMembers = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/teammanagement/users\",\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n      setUsers(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  async function assignToUser(event, user) {\r\n    event.preventDefault();\r\n    const userMessage = document.getElementById(user.user_id).value;\r\n    console.log(user, userMessage);\r\n    const id = user.user_id;\r\n\r\n    const modal = document.getElementById(`id${stocklist_id}`);\r\n\r\n    modal.setAttribute(\"style\", \"display: none\");\r\n    const modalBackdrops = document.getElementsByClassName(\"modal-backdrop\");\r\n    document.body.removeChild(modalBackdrops[0]);\r\n\r\n    try {\r\n      const body = { stocklist_id, stocktake_id, id, userMessage };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/assignlist\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json();\r\n      setListsChange(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTeamMembers();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-info\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${stocklist_id}`}\r\n      >\r\n        Assign\r\n      </button>\r\n      <div className=\"modal\" id={`id${stocklist_id}`}>\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{name}</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Message</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map((user) => (\r\n                  <tr key={user.user_id}>\r\n                    <td>{user.user_name}</td>\r\n                    <td>\r\n                      <form\r\n                        onSubmit={(e) => {\r\n                          assignToUser(e, user);\r\n                        }}\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"col-7\">\r\n                            <textarea\r\n                              className=\"form-control\"\r\n                              id={`${user.user_id}`}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <button\r\n                              className=\"btn btn-success float-right\"\r\n                              type=\"submit\"\r\n                            >\r\n                              Assign\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-success\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AssignList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignList from \"./AssignList\";\r\n\r\nconst ShowLists = ({ allLists, setListsChange, stocktake, stocktake_id }) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [unassignedLists, setUnassignedLists] = useState([]);\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to staff\r\n  const getAssignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const assignedLists = await fetch(\r\n        \"http://localhost:5000/stocklists/assignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await assignedLists.json();\r\n      console.log(parseRes);\r\n      setAssignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //get the unassigned lists\r\n  const getUnassignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const unassignedLists = await fetch(\r\n        \"http://localhost:5000/stocklists/unassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await unassignedLists.json();\r\n      setUnassignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const unassign = async (id) => {\r\n    try {\r\n      const body = { id, stocktake_id };\r\n      const unassign = await fetch(\r\n        \"http://localhost:5000/stocklists/unassignuser\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await unassign.json();\r\n      setListsChange(true);\r\n    } catch (error) {}\r\n  };\r\n\r\n  //delete list function\r\n  const deleteList = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      setLists(lists.filter((stocklist) => stocklist.stocklist_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setListsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setLists(allLists);\r\n    setListsChange(false);\r\n    if (stocktake) {\r\n      getAssignedLists();\r\n      getUnassignedLists();\r\n    }\r\n  }, [allLists]);\r\n\r\n  return !stocktake ? (\r\n    <table className=\"table text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>Stock Area</th>\r\n          <th>Delete</th>\r\n          <th>View/Edit Products</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {allLists.map((stocklist) => (\r\n          <tr key={stocklist.stocklist_id}>\r\n            <td>{stocklist.stocklist_name}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteList(stocklist.stocklist_id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <Link\r\n                to={`viewedit/${stocklist.stocklist_id}`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View/Edit\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Unassigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assign to team member</th>\r\n                <th>Count</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {unassignedLists.map((stocklist) => (\r\n                <tr key={stocklist.stocklist_id}>\r\n                  <td>{stocklist.stocklist_name}</td>\r\n                  <td>\r\n                    <AssignList\r\n                      name={stocklist.stocklist_name}\r\n                      stocklist_id={stocklist.stocklist_id}\r\n                      setListsChange={setListsChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${stocklist.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assigned to</th>\r\n                <th>Status</th>\r\n                <th>Message</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>{list.user_name}</td>\r\n                  {list.completed ? (\r\n                    <td><span className=\"badge badge-pill badge-success\">Completed</span></td>\r\n                  ) : (\r\n                    <td>\r\n                    <span className=\"badge badge-pill badge-warning\">In Progress</span>\r\n                      <button href=\"#\" className=\"badge badge-pill badge-danger\" onClick={(e) => unassign(list.stocklist_id)}>\r\n                        Unassign\r\n                      </button>\r\n                    </td>\r\n                  )\r\n                  }\r\n                  <td>{list.user_message}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowLists;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport AddList from \"./AddList\";\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst Stocklists = ({ setAuth }) => {\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n    setListsChange(false);\r\n  }, [listsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stock Areas</h1>\r\n          <div>\r\n            <AddList setListsChange={setListsChange} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists allLists={allLists} setListsChange={setListsChange} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Stocklists;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditTeamMember = ({ member, setTeamChange }) => {\r\n\r\n\r\n  const [name, setName] = useState(member.user_name);\r\n  const [email, setEmail] = useState(member.user_email);\r\n  \r\n  const setDetails = (username, email) => {\r\n    setName(username);\r\n    setEmail(email)\r\n  }\r\n\r\n  const editDetails = async id => {\r\n    try {\r\n      const body = { name, email };\r\n\r\n      \r\n\r\n      const myHeaders = new Headers();\r\n\r\n\r\n      myHeaders.append(\"Content-Type\", \"application/json\");\r\n      myHeaders.append(\"token\", localStorage.token);\r\n\r\n      await fetch(`http://localhost:5000/teammanagement/update/${id}`, {\r\n        method: \"PUT\",\r\n        headers: myHeaders,\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      toast.success(\"Details updated successfully!\")\r\n\r\n      setTeamChange(true);\r\n      \r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${member.user_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n      {}\r\n      <div\r\n        className=\"modal\"\r\n        id={`id${member.user_id}`}\r\n        onClick={() => () => setEmail(member.user_email)}\r\n      >\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Edit Details</h4>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDetails(member.user_name, member.user_email)}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mt-1\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={e => editDetails(member.user_id)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDetails(member.user_email, member.user_name)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTeamMember;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\n//components\r\nimport EditTeamMember from \"./EditTeamMember\";\r\n\r\nconst ShowTeam = ({ allTeamMembers, setTeamChange }) => {\r\n  const [team, setTeamMembers] = useState([]); // assigned to an empty array\r\n\r\n  const deleteTeamMember = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/teammanagement/delete/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      setTeamMembers(team.filter((app_user) => app_user.user_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n    setTeamChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Role</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {}\r\n          {allTeamMembers.map((app_user) => (\r\n            <tr key={app_user.user_id}>\r\n              <td>{app_user.user_name}</td>\r\n              <td>{app_user.role}</td>\r\n              <td>\r\n                <EditTeamMember\r\n                  member={app_user}\r\n                  setTeamChange={setTeamChange}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteTeamMember(app_user.user_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowTeam;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddTeamMember = ({ setTeamChange }) => {\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const { email, password, name } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    const modal = document.getElementById(\"myModal\");\r\n    e.preventDefault();\r\n    modal.setAttribute(\"style\", \"display: none\");\r\n    const modalBackdrops = document.getElementsByClassName(\"modal-backdrop\");\r\n    document.body.removeChild(modalBackdrops[0]);\r\n\r\n    const userRole = document.getElementById(\"userrole\");\r\n    const role = userRole.value;\r\n\r\n    try {\r\n      const body = { email, password, name, role };\r\n\r\n      const response = await fetch(\"http://localhost:5000/teammanagement/add\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      await response.json();\r\n\r\n      toast.success(\"Registered Successfully!\");\r\n\r\n      setInputs({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\",\r\n      });\r\n\r\n      setTeamChange(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-info btn-lg\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#myModal\"\r\n      >\r\n        Add team member\r\n      </button>\r\n\r\n      <div id=\"myModal\" className=\"modal fade\" role=\"dialog\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Add new team member</h4>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={onSubmitForm}>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"email\"\r\n                  className=\"form-control my-3\"\r\n                  value={email}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                  className=\"form-control my-3\"\r\n                  value={password}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"name\"\r\n                  className=\"form-control my-3\"\r\n                  value={name}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <select className=\"form-control my-3\" id=\"userrole\">\r\n                  <option value=\"User\">Bar Staff</option>\r\n                  <option value=\"Admin\">Manager</option>\r\n                </select>\r\n                <button className=\"btn btn-success btn-block\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTeamMember;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ShowTeam from \"./ShowTeam\";\r\nimport AddTeamMember from \"./AddTeamMember\";\r\n\r\n//components\r\n\r\nconst TeamManagement = () => {\r\n    const [allTeamMembers, setTeamMembers] = useState([]);\r\n    const [teamChange, setTeamChange] = useState(false);\r\n\r\n    // get the team members from the db to populate allTeamMembers array\r\n    const getTeam = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/teammanagement/\", {\r\n                method: \"GET\",\r\n                headers: { token: localStorage.token },\r\n            });\r\n\r\n            const parseData = await response.json();\r\n\r\n            setTeamMembers(parseData);\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n      getTeam();\r\n      setTeamChange(false)\r\n    }, [teamChange]);\r\n\r\n    return (\r\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">F\r\n          <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n              <h1 className=\"display-3\">Team Management</h1>\r\n              <AddTeamMember setTeamChange={setTeamChange}/>\r\n            </div>\r\n            \r\n          </div>\r\n          <div>\r\n            <ShowTeam allTeamMembers={allTeamMembers} setTeamChange={setTeamChange} />\r\n          </div>\r\n        </main>\r\n      );\r\n    };\r\n    \r\n    export default TeamManagement;\r\n    \r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MultiSelect from \"react-multi-select-component\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Dropdown = ({ listId, setQuantityChange }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [stocktakeBoo, setStocktakeBoo] = useState(false);\r\n\r\n  const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n\r\n  const checkStocktake = () => {\r\n    if (stockId !== 0) {\r\n      setStocktakeBoo(true);\r\n    }\r\n  };\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/products\");\r\n      const jsonData = await response.json();\r\n\r\n      setProducts(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkStocktake();\r\n    getProducts();\r\n  }, );\r\n\r\n  const options = products.map((product) => ({\r\n    label: product.product_name,\r\n    value: product.product_id,\r\n  }));\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const addItemStocktake = async (item) => {\r\n    let productId = item.value;\r\n    try {\r\n      const body = { productId, listId, stockId };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/addproductstocktake\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json();\r\n      setQuantityChange(true);\r\n      toast.success(\"Products added succesfully\");\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const addItem = async (item) => {\r\n    let productId = item.value;\r\n    try {\r\n      const body = { productId, listId };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/addproduct\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json();\r\n\r\n      toast.success(\"Products Added Successfully!\");\r\n      setQuantityChange(true);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    if (stocktakeBoo) {\r\n      selected.forEach(addItemStocktake);\r\n    } else {\r\n      selected.forEach(addItem);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmitForm}>\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <MultiSelect\r\n              options={options}\r\n              value={selected}\r\n              onChange={setSelected}\r\n              labelledBy={\"Select\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <button className=\"btn btn-success\">Add</button>\r\n            \r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Bottle from \"../../images/beer-bottle.png\";\r\nimport { useEffect } from \"react\";\r\n\r\n//Modal that opens when counting a particular product. Preoduct is passed in as props\r\nconst CountModal = ({ product, setProductsChange, stocktakeid, setQuantity, setQuantityChange }) => {\r\n  const [partial, setPartial] = useState(0);\r\n  const [tempQuantity, setTempQuantity] = useState(0);\r\n  const stocktake = Number(stocktakeid);\r\n\r\n  //Onchange for partial bottle form field\r\n  const onChange = (e) => {\r\n    setPartial(Number(e.target.value));\r\n  };\r\n\r\n  //Adds partial quantity to temporary quantity\r\n  const addPartial = () => {\r\n    setTempQuantity(Number(tempQuantity + partial));\r\n    setPartial(0);\r\n  };\r\n\r\n  //Adds one full bottle to temporary quantity\r\n  const addOne = () => {\r\n    setTempQuantity(Number(tempQuantity + 1));\r\n  };\r\n\r\n  //Subtracts one ful bottle from temporary quantity\r\n  const minusOne = () => {\r\n    setTempQuantity(Number(tempQuantity - 1));\r\n  };\r\n\r\n  // Should set product.quantity to the temp quantity value and zero out temp quantity after\r\n  const setProductQuantity = async (item) => {\r\n    try {\r\n      const body = { item, stocktake, tempQuantity };\r\n      console.log(body);\r\n      const response = await fetch(\"http://localhost:5000/stocktake/count\", {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setQuantity(parseRes.rows[0].quantity);\r\n\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    setTempQuantity(0);\r\n    setProductsChange(true);\r\n    setQuantityChange(true);\r\n    \r\n  };\r\n\r\n  useEffect(() => {}, [tempQuantity]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-info\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${product.product_stocklist_id}`}\r\n      >\r\n        Count\r\n      </button>\r\n\r\n      <div className=\"modal\" id={`id${product.product_stocklist_id}`}>\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{product.product_name}</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <div className=\"container\">\r\n              <h5>Add partial</h5>\r\n              <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                  <form>\r\n                    <input\r\n                      value={partial}\r\n                      onChange={(e) => onChange(e)}\r\n                      name=\"partial\"\r\n                      className=\"form-control mb-4\"\r\n                      type=\"number\"\r\n                      placeholder=\"0.00\"\r\n                      step=\"0.05\"\r\n                      min=\"0\"\r\n                      max=\"1.0\"\r\n                    ></input>\r\n                  </form>\r\n                </div>\r\n\r\n                <div className=\"col-sm\">\r\n                  <button className=\"btn btn-info\" onClick={addPartial}>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <h5>Add full</h5>\r\n              <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                  <button className=\"btn btn-danger\" onClick={minusOne}>\r\n                    <h4>-</h4>\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <img\r\n                    src={Bottle}\r\n                    alt=\"Bottle Image\"\r\n                    height=\"140\"\r\n                    width=\"140\"\r\n    \r\n                />\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  <button className=\"btn btn-success\" onClick={addOne}>\r\n                    <h4>+</h4>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-sm\"></div>\r\n                <div className=\"col-sm\">{tempQuantity}</div>\r\n                <div className=\"col-sm\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn btn-success\"\r\n                data-dismiss=\"modal\"\r\n                onClick={(e) => setProductQuantity(product.product_stocklist_id)}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CountModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport CountModal from \"./CountModal\";\r\n\r\nconst Bottle = (props) => {\r\n  const [bottle, setBottle] = useState({});\r\n\r\n  const {\r\n    result,\r\n    hasScanned,\r\n    hasResult,\r\n    setPairBool,\r\n    setProductsChange,\r\n    setQuantity,\r\n  } = props;\r\n  const stocktake = localStorage.getItem(\"stocktake\");\r\n\r\n  const getBottle = async () => {\r\n    if (result !== null && !hasResult && !hasScanned) {\r\n      console.log(\r\n        \"result\",\r\n        result,\r\n        \"scanned\",\r\n        hasScanned,\r\n        \"hasResult\",\r\n        hasResult\r\n      );\r\n      setPairBool(\"hasScanned\", true);\r\n      try {\r\n        const body = { result, stocktake };\r\n        const response = await fetch(\r\n          \"http://localhost:5000/stocktake/productfromid\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        const parseData = await response.json();\r\n\r\n        console.log(parseData.length);\r\n        setBottle(parseData[0]);\r\n        console.log(parseData);\r\n        setPairBool(\"hasResult\", true);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setPairBool(\"hasScanned\", false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!hasResult) {\r\n      getBottle();\r\n    }\r\n  }, [result, bottle]);\r\n\r\n  return !_.isEmpty(bottle) ? (\r\n    <div>\r\n      <CountModal\r\n        product={bottle}\r\n        stocktakeid={stocktake}\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <h1>No bottle found</h1>\r\n  );\r\n};\r\n\r\nexport default Bottle;\r\n","import React, { Component } from 'react'\r\nimport QrReader from 'react-qr-scanner'\r\nimport Bottle from \"./Bottle\";\r\n \r\nclass QrCodeReader extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      hasResult: false,\r\n      hasScanned: false,\r\n      delay: 100,\r\n      result: null,\r\n    }\r\n \r\n    this.handleScan = this.handleScan.bind(this)\r\n  }\r\n  handleScan(data){\r\n    this.setState({\r\n      result: data,\r\n    })\r\n  }\r\n  handleError(err){\r\n    console.error(err)\r\n  }\r\n\r\n  render(){\r\n    const previewStyle = {\r\n      height: 240,\r\n      width: 320,\r\n    }\r\n\r\n\r\n    const {  result, hasResult, hasScanned } = this.state;\r\n    const setPairBool = (key, value) => {\r\n      this.setState({[key]: value})\r\n    }\r\n \r\n    return(\r\n      <div>\r\n        <QrReader\r\n          delay={this.state.delay}\r\n          style={previewStyle}\r\n          onError={this.handleError}\r\n          onScan={this.handleScan}\r\n          />\r\n          \r\n        <Bottle result={result} hasResult={hasResult} hasScanned={hasScanned} setPairBool={setPairBool} setProductsChange={this.props.setProductsChange} setQuantity={this.props.setQuantity}/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QrCodeReader;","import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CountModal from \"./CountModal\";\r\nimport QrCodeReader from \"./QrScan\";\r\n\r\nconst Count = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [setQuantity] = useState(0);\r\n  const [scanner, setScanner] = useState(false);\r\n  const [quantityChange, setQuantityChange] = useState(false);\r\n\r\n  // get the list id from the url params\r\n  const id = props.match.params.id;\r\n\r\n  //get stocktake id from the url params\r\n  const stocktake = props.match.params.stocktakeid;\r\n\r\n  //get list name using list id\r\n  const getName = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n\r\n      // API call returns an array of length 1,so get 1st value\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list and for stocktake\r\n  const getCountProducts = async (id, stocktake) => {\r\n    try {\r\n      const body = { id, stocktake };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocktake/liststocktake`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName(id);\r\n    getCountProducts(id, stocktake);\r\n    setQuantityChange(false);\r\n  }, [quantityChange]);\r\n\r\n  return !scanner ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={() => setScanner(true)}\r\n        >\r\n          QrScan\r\n        </button>\r\n        <h1 className=\"display-3\">{name}</h1>\r\n        <div>\r\n          <Dropdown listId={id} setQuantityChange={setQuantityChange} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <table className=\"table text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.product_stocklist_id}>\r\n                <td>{product.product_name}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>\r\n                  <CountModal\r\n                    product={product}\r\n                    setProductsChange={setProductsChange}\r\n                    stocktakeid={stocktake}\r\n                    setQuantity={setQuantity}\r\n                    setQuantityChange={setQuantityChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <div>\r\n      <QrCodeReader\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n      <button\r\n        className=\"btn btn-primary float-right\"\r\n        onClick={() => setScanner(false)}\r\n      >\r\n        QrScan\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Count;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nconst InventoryBreakdown = ({ product_id, id, name }) => {\r\n    const [breakdown, setBreakdown] = useState([]);\r\n  const product = product_id;\r\n\r\n\r\n  const getInventoryBreakdown = async () => {\r\n    try {\r\n      const body = { id, product };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/inventory/breakdown\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setBreakdown(parseRes);\r\n      console.log(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getInventoryBreakdown();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-info\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${product_id}`}\r\n      >\r\n        View Breakdown\r\n      </button>\r\n      <div className=\"modal\" id={`id${product_id}`}>\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{name}</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Area</th>\r\n                    <th>Quantity</th>\r\n                </tr>\r\n            </thead>\r\n    <tbody>\r\n        {breakdown.map((list) => (\r\n            <tr key={list.stocklist_name}>\r\n            <td>{list.stocklist_name}</td>\r\n            <td>{list.sum}</td>\r\n            </tr>\r\n        ))}\r\n    </tbody>\r\n    </table>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-success\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InventoryBreakdown;\r\n","import React, { PureComponent, useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst PdfGenerator = ({ inventory }) => {\r\n  // jspdf generator function\r\n  const jsPdfGenerator = () => {\r\n    //new document in jspdf\r\n\r\n    var doc = new jsPDF(\"p\", \"pt\");\r\n\r\n    doc.autoTable({\r\n      head: [[\"Product\",\"Size\", \"Category\", \"Quantity\"]],\r\n      body: inventory.map((item) => {\r\n        return [item.product_name, item.product_size, item.product_category, item.sum];\r\n      }),\r\n    });\r\n\r\n    doc.save(\"generated.pdf\");\r\n  };\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <button className=\"btn btn-success\" onClick={jsPdfGenerator}>\r\n        Generate PDF Report\r\n      </button>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PdfGenerator;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport InventoryBreakdown from \"./InventoryBreakdown\";\r\nimport PdfTest from \"../PdfGenerator\";\r\nimport _ from 'lodash';\r\nimport PdfGenerator from \"../PdfGenerator\";\r\n\r\nconst Inventory = (props) => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //get the latest inventory ID from the params\r\n  const id = props.match.params.id;\r\n\r\n  const getInventory = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:5000/inventory/records/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      }\r\n    );\r\n    const parseData = await response.json();\r\n    setInventory(parseData);\r\n  };\r\n\r\n  const filteredInventory = inventory.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getInventory();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n        <div className=\"jumbotron\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-3\">Inventory</h1>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <table className=\"table text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Inventory</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredInventory.map((item) => (\r\n                <tr key={item.product_id}>\r\n                  <td>{item.product_name}</td>\r\n                  <td>{item.sum}</td>\r\n                  <td>\r\n                    <InventoryBreakdown\r\n                      product_id={item.product_id}\r\n                      id={id}\r\n                      name={item.product_name}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {console.log(inventory)}\r\n        {!_.isEmpty(inventory) ? <PdfGenerator inventory={inventory} /> : null}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\n\r\nconst UserDashboard = ({ setAuth }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [stocktake, setStocktake] = useState({});\r\n  const [hasDuties, setHasDuties] = useState(false);\r\n\r\n  async function checkStocktake() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocktake/activestocktake\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        setStocktake(parseRes);\r\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\r\n      } else {\r\n        console.log(\"no stocktake in progress\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async function getDuties() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/dashboard/duties\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        setHasDuties(true);\r\n      }\r\n      console.log(parseRes);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  async function getName() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/dashboard/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n      localStorage.setItem(\"user\", parseRes.user_id);\r\n      setName(parseRes.user_name);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    console.log(name);\r\n  }\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    setAuth(false);\r\n  };\r\n\r\n  //check if user has been assigned any stocktake duties\r\n\r\n  useEffect(() => {\r\n    getDuties();\r\n    getName();\r\n    checkStocktake();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\">\r\n        <div className=\"jumbotron\">\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={(e) => logout(e)}\r\n          >\r\n            Logout\r\n          </button>\r\n          <div className=\"container\">\r\n            <h1 className=\"display-3\">Hello, {name}!</h1>\r\n            <p>Welcome to your BevStock user dashboard.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <h2>Stocktaking</h2>\r\n              {!_.isEmpty(stocktake) ? (\r\n                <div>\r\n                  <p>\r\n                    Stocktake in progress :{\" \"}\r\n                    {localStorage.getItem(\"stocktakedate\")}\r\n                  </p>\r\n                  {hasDuties ? (\r\n                    <div>\r\n                      <p>You have been assigned stocktaking duties</p>\r\n                      <p>\r\n                        <Link\r\n                          className=\"btn btn-secondary\"\r\n                          to=\"/userstocktaking\"\r\n                        >\r\n                          View\r\n                        </Link>\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <p>You haven't been assigned any stocktakting duties</p>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <p>No stocktake in progress</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserShowLists = ({\r\n  allLists,\r\n  setListsChange,\r\n  stocktake,\r\n  stocktake_id,\r\n}) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to the user\r\n  async function checkAssignedDuties() {\r\n    try {\r\n      const stocktake_id = localStorage.getItem(\"stocktake\");\r\n      const id = localStorage.getItem(\"user\");\r\n      const body = { id, stocktake_id };\r\n      console.log(body);\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/userassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n      setAssignedLists(parseRes);\r\n      if (parseRes.length > 0) {\r\n        setAssignedLists(parseRes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async function markComplete(id) {\r\n    const message = document.getElementById(`${id}`).value;\r\n    try {\r\n      const body = { id, stocktakeInstance, message };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocktake/markascomplete\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json();\r\n      setListsChange(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setListsChange(false);\r\n    checkAssignedDuties();\r\n  }, [allLists]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Your Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Count</th>\r\n                <th>Manager Message</th>\r\n                <th>Your Message</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {console.log(assignedLists)}\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${list.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                  <td>{list.user_message}</td>\r\n                  {list.completed ? (\r\n                    <Fragment>\r\n                      <td>{list.completed_message}</td>\r\n                      <td>Complete</td>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <td>\r\n                        <textarea\r\n                          id={`${list.stocklist_id}`}\r\n                          cols=\"40\"\r\n                          rows=\"2\"\r\n                        ></textarea>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          onClick={(e) => {\r\n                            markComplete(list.stocklist_id);\r\n                          }}\r\n                        >\r\n                          Mark as complete\r\n                        </button>\r\n                      </td>\r\n                    </Fragment>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserShowLists;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport UserShowLists from \"./UserShowLists\";\r\n\r\nconst UserStocktake = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    console.log(\"hello\")\r\n    if (stocktake_id !== null) {\r\n      console.log(\"stocktake in progress\");\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkStocktake();\r\n    getLists();\r\n    setListsChange(false);\r\n  }, [listsChange]);\r\n\r\n  return (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stock Areas</h1>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <UserShowLists allLists={allLists} setListsChange={setListsChange} stocktake={stocktake} stocktake_id={stocktake_id}/>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UserStocktake;\r\n","import React from \"react\";\r\n\r\nconst Product = (props) => {\r\n\r\n  //render the product name\r\n  return (\r\n      <td data-testid=\"product\" className=\"table-light\">{props.name}</td>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Product from \"./Product\";\r\nimport \"../../../src/App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ViewEdit = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const dragItem = useRef();\r\n  const dragNode = useRef();\r\n\r\n  const [dragMode, setDragMode] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n\r\n  //handle drag start\r\n  const handleDragStart = (e, params) => {\r\n    // set current item being dragged\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    //Initialise drag end listener\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    // Intialise drag enter listener\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    //check that index of current item is not the same as target location.\r\n    if (dragItem.current !== params.productI) {\r\n      // use setProducts hook to set state to newly arranged array.\r\n      setProducts((oldProducts) => {\r\n        let newList = JSON.parse(JSON.stringify(oldProducts));\r\n        newList.splice(\r\n          params.productI,\r\n          0,\r\n          newList.splice(dragItem.current.productI, 1)[0]\r\n        );\r\n        dragItem.current = params;\r\n        return newList;\r\n      });\r\n    }\r\n  };\r\n\r\n  //the handle drag end listener.\r\n  const handleDragEnd = () => {\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  //set the positions in the DB\r\n  async function setPosition(id, productI) {\r\n    try {\r\n      const body = { id, productI };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/savepositions`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json;\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  //set the positions of each element in the database under index column\r\n  async function setPositions() {\r\n    if (dragMode) {\r\n      products.map((product, productI) => {\r\n        setPosition(product.product_stocklist_id, productI);\r\n        return null;\r\n      });\r\n      setDragMode(false);\r\n      toast.success(\"Positions updated\");\r\n    } else {\r\n      setDragMode(true);\r\n    }\r\n  }\r\n\r\n  const getStyles = (params) => {\r\n    const currentItem = dragItem.current;\r\n    if (currentItem.productI === params) {\r\n      return \"current dnd-item\";\r\n    }\r\n    return \"dnd-item\";\r\n  };\r\n\r\n  //get list name\r\n  const getName = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/list/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //delete a product from list\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/deleteproduct/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setProductsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName(props.match.params.id);\r\n    getProducts(props.match.params.id);\r\n    setProductsChange(false);\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n            <div className=\"jumbotron\">\r\n              <div className=\"container\">\r\n                <h1 className=\"display-3\">{name}</h1>\r\n                <button\r\n                  className=\"btn btn-primary float-right\"\r\n                  onClick={setPositions}\r\n                >\r\n                  {dragMode ? \"Save Positions\" : \"Change List Order\"}\r\n                </button>\r\n                <div>\r\n                  <Dropdown listId={id} setProductsChange={setProductsChange} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <table className=\"table mt-5 text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  {dragMode ? null : <th>Delete</th>}\r\n                </tr>\r\n              </thead>\r\n              {dragMode ? (\r\n                <tbody>\r\n                  {products.map((product, productI) => (\r\n                    <tr\r\n                      draggable\r\n                      onDragStart={(e) => {\r\n                        handleDragStart(e, { productI });\r\n                      }}\r\n                      onDragEnter={\r\n                        dragging\r\n                          ? (e) => {\r\n                              handleDragEnter(e, { productI });\r\n                            }\r\n                          : null\r\n                      }\r\n                      key={product.product_stocklist_id}\r\n                      className={dragging ? getStyles(productI) : \"dnd-item\"}\r\n                    >\r\n                      <Product\r\n                        key={product.product_stocklist_id}\r\n                        name={product.product_name}\r\n                        id={product.product_stocklist_id}\r\n                      />\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : (\r\n                <tbody>\r\n                  {products.map((product) => (\r\n                    <tr key={product.product_stocklist_id}>\r\n                      <td>{product.product_name}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={(e) =>\r\n                            deleteProduct(product.product_stocklist_id)\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewEdit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [allCounted, setAllCounted] = useState(false);\r\n  const [distinctProducts, setDistinctProducts] = useState([]);\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const dateString = Date().toString();\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const productsResult = await productsResponse.json();\r\n      setProducts(productsResult.rows);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //create a new record for the product passed in as params.\r\n  const createRecord = (id) => {\r\n    try {\r\n      const stockId = localStorage.getItem(\"stocktake\");\r\n      const body = { id, stockId };\r\n\r\n      fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //Creates a new record in the stocktake table, and new stocktake records for each product.\r\n  const newStocktake = async () => {\r\n    //check a stocktake is not already in progress\r\n    if (!stocktake && stocktake_id === null) {\r\n      try {\r\n        //insert new record into stocktake table\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        //set stocktake and stocktakedate in local storage\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        //create a new record for each product\r\n        products.forEach((product) => {\r\n          createRecord(product.product_stocklist_id);\r\n        });\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      //set stocktake boolean to true\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const checkAllCounted = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/inprogress\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseData = await response.json();\r\n\r\n      if (parseData.length > 0) {\r\n        setAllCounted(false);\r\n      } else {\r\n        setAllCounted(true);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n\r\n  //CALCULATING AND WRITING SALES TO THE DATABASE AFTER STOCKTAKE HAS ENDED \r\n\r\n    //get a list of distinct products for caluculating sales\r\n    const getDistinctProducts = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:5000/products/get/distinct\",\r\n          {\r\n            method: \"GET\",\r\n            headers: { token: localStorage.token },\r\n          }\r\n        );\r\n        const parseRes = await response.json();\r\n        setDistinctProducts(parseRes);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n\r\n    //get the sales data, wait for promise to resolve then write to the database in sales_record table\r\n    const getAndWriteSalesNumbers = async (products) => {\r\n      var promises = products.map((product) => {\r\n        return getSalesData(product.product_id, Number(currentStocktake), Number(currentStocktake)+1);\r\n      });\r\n      promises.forEach((promise) => {\r\n        promise.then((result) => {\r\n          writeSales(result.product_id, result.sales, stocktake_id);\r\n        });\r\n      });\r\n    };\r\n\r\n  //write the sales numbers into the db\r\n  const writeSales = (product_id, sales, stocktake) => {\r\n    try {\r\n      const body = { product_id, sales, stocktake };\r\n      fetch(\"http://localhost:5000/inventory/writesales\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //get sales data\r\n  const getSalesData = async (product, prevStocktake, currentStocktake) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //onclick for end stocktake button\r\n  const endStocktake = (e) => {\r\n    setListsChange(true);\r\n    if (allCounted) {\r\n      e.preventDefault();\r\n      setStocktakeInactive();\r\n      localStorage.setItem(\"laststocktake\", localStorage.getItem(\"stocktake\"));\r\n      localStorage.removeItem(\"stocktake\");\r\n      localStorage.removeItem(\"stocktakedate\");\r\n      setStocktake(false);\r\n      toast.success(\"Stocktake ended\");\r\n      getAndWriteSalesNumbers(distinctProducts);\r\n    } else {\r\n      toast.warning(\"Not all counts have been completed\");\r\n    }\r\n  };\r\n\r\n  //set stocktake as inactive in db\r\n  const setStocktakeInactive = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const response = await fetch(\"http://localhost:5000/stocktake/inactive\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //logout onclick\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDistinctProducts();\r\n    checkAllCounted();\r\n    getProducts();\r\n    checkStocktake();\r\n    getLists();\r\n    setListsChange(false);\r\n    if (products.length > 0) {\r\n      console.log(products);\r\n    }\r\n  }, [listsChange]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={newStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>\r\n            Stocktake in progress :{\" \"}\r\n            <Moment\r\n              date={localStorage.getItem(\"stocktakedate\")}\r\n              format=\"DD/MM/YYYY HH:mm\"\r\n            />\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n          stocktake_id={stocktake_id}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AiOutlineHome } from \"react-icons/ai\";\r\nimport { MdLocalBar } from \"react-icons/md\";\r\nimport { RiScales2Fill } from \"react-icons/ri\";\r\nimport { BsCardChecklist } from \"react-icons/bs\";\r\n\r\n//nav bar component for the admin site. \r\n\r\nconst Nav = ({ setIsAuthenticated, isAuthenticated, name, userType }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [latestInventoryId, setLatestInventoryId] = useState(\"\");\r\n\r\n  // check is authenticated, otherwise nav will show when user is logged out. \r\n  async function isAuth() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  //logout method\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    setIsAuthenticated(false);\r\n    toast.success(\"Logged out successfully!\");\r\n  };\r\n\r\n\r\n  async function findLastStocktake() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/inventory/latest\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      setLatestInventoryId(parseRes[0].stocktake_id);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async function checkStocktake() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocktake/activestocktake\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        setStocktake(parseRes);\r\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkStocktake();\r\n    findLastStocktake();\r\n    isAuth();\r\n  }, [isAuthenticated]);\r\n  return isAuthenticated && userType === 'Admin' ? (\r\n    <div>\r\n      <nav className=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\r\n        <a href=\"#\" className=\"navbar-brand col-sm-3 col-md-2 mr-0\">\r\n          BevStock\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap\">\r\n            <a className=\"nav-link\" onClick={(e) => logout(e)} href=\"#\">\r\n              {name} : Sign out\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\r\n        <div className=\"sidebar-sticky\">\r\n          <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/dashboard`}>\r\n                <AiOutlineHome /> Dashboard{\" \"}\r\n                <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/stocktaking`}>\r\n                <MdLocalBar /> View/Edit Stock Areas\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/stocktakelists\">\r\n                <RiScales2Fill />  Stocktaking\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/inventory/${latestInventoryId}`}>\r\n                <BsCardChecklist /> Inventory\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/processdelivery`}>\r\n                <BsCardChecklist /> Process Delivery\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/team`}>\r\n                <BsCardChecklist /> Team Management\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href={`/products`}>\r\n                <BsCardChecklist /> Products Database\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Fragment } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nconst AddNewProduct = ({ setProductsChange }) => {\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    size: \"\",\r\n    par: \"\",\r\n  });\r\n\r\n  const { name, size, par } = inputs;\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Method to fire once the form has been submitted\r\n  const onSubmitForm = async (e) => {\r\n    \r\n    //find the modal and assign to a Javascript const\r\n    const modal = document.getElementById(\"product-modal\");\r\n    e.preventDefault();\r\n\r\n    //close the modal\r\n    modal.setAttribute(\"style\", \"display: none\");\r\n    const modalBackdrops = document.getElementsByClassName(\"modal-backdrop\");\r\n    document.body.removeChild(modalBackdrops[0]);\r\n\r\n    //get the value of category select input.\r\n    const productCategory = document.getElementById(\"category\");\r\n    const category = productCategory.value;\r\n\r\n    try {\r\n\r\n    //fill the request body with the new details\r\n      const body = { name, size, par, category };\r\n\r\n    //make a post request through the /products/ server route\r\n      const response = await fetch(\"http://localhost:5000/products/new\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n    //wait for the response from the server-side\r\n      await response.json();\r\n\r\n    //notifictation displayed \r\n      toast.success(\"Registered Successfully!\");\r\n\r\n      setInputs({\r\n        name: \"\",\r\n        size: \"\",\r\n        par: \"\",\r\n      });\r\n\r\n      //set products change in order to fire useEffect hook\r\n      setProductsChange(true);\r\n\r\n      \r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-sm btn-primary form-control\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#product-modal\"\r\n      >\r\n        Add New Product\r\n      </button>\r\n\r\n      <div id=\"product-modal\" className=\"modal fade\" role=\"dialog\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Add a new Product</h4>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n\r\n              <form onSubmit={onSubmitForm}>\r\n              \r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Product Name\"\r\n                  className=\"form-control my-3\"\r\n                  value={name}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"size\"\r\n                  placeholder=\"Product Size\"\r\n                  className=\"form-control my-3\"\r\n                  value={size}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"par\"\r\n                  placeholder=\"Par Level\"\r\n                  className=\"form-control my-3\"\r\n                  value={par}\r\n                  onChange={(e) => onChange(e)}\r\n                />\r\n                <select className=\"form-control my-3\" id=\"category\">\r\n                  <option value=\"Rum\">Vodka</option>\r\n                  <option value=\"Vodka\">Rum</option>\r\n                </select>\r\n                <button className=\"btn btn-success btn-block\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\n\r\nconst ProductsDb = () => {\r\n  //declare products as an empty array\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //boolean to indicate whether there has been a change in the products array\r\n  const [productsChange, setProductsChange] = useState(false);\r\n\r\n  //get the products and populate products array.\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/products/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      //use set\r\n      setProducts(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const filteredProducts = products.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <h1>Products</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <AddNewProduct setProductsChange={setProductsChange} />\r\n        </div>\r\n      </div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <th>Product</th>\r\n          <th>Size</th>\r\n          <th>Category</th>\r\n          <th>Par Level</th>\r\n        </thead>\r\n        <tbody>\r\n          {filteredProducts.map((product) => (\r\n            <tr key={product.product_id}>\r\n              <td>{product.product_name}</td>\r\n              <td>{product.product_size}</td>\r\n              <td>{product.product_category}</td>\r\n              <td>{product.par_level}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProductsDb;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProcessDelivery = () => {\r\n  //declare products as an empty array\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [quantities, setQuantities] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const dateString = Date().toString();\r\n  //boolean to indicate whether there has been a change in the products array\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const stocktake = localStorage.getItem(\"laststocktake\");\r\n\r\n  const addNewStock = async (event, product) => {\r\n    event.preventDefault();\r\n    const item = product.product_stocklist_id;\r\n    const quantityInput = document.getElementById(product.product_stocklist_id);\r\n    const tempQuantity = quantityInput.value;\r\n    console.log(item, tempQuantity);\r\n    try {\r\n        const body = { item, stocktake, tempQuantity };\r\n        console.log(body);\r\n        const response = await fetch(\"http://localhost:5000/stocktake/count\", {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n  \r\n        await response.json();\r\n        toast.success(\"Added Succesfully\");\r\n  \r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n\r\n\r\n\r\n  //get the products that are under the new stock list\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocktake/processdelivery/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      console.log(\"hello\");\r\n      setProducts(parseRes);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const filteredProducts = products.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <h1>Process Delivery</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Size</th>\r\n            <th>Category</th>\r\n            <th>Quantity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredProducts.map((product) => (\r\n            <tr key={product.product_stocklist_id}>\r\n              <td>{product.product_name}</td>\r\n              <td>{product.product_size}</td>\r\n              <td>{product.product_category}</td>\r\n\r\n              <td>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    addNewStock(e, product);\r\n                  }}\r\n                >\r\n                  <input\r\n                    id={`${product.product_stocklist_id}`}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                  ></input>\r\n                  <button className=\"btn btn-success\">Add</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProcessDelivery;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport InventoryBreakdown from \"./InventoryBreakdown\";\r\nimport _ from \"lodash\";\r\nimport PdfGenerator from \"../PdfGenerator\";\r\n\r\nconst Inventory = (props) => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //get the latest inventory ID from the params\r\n  const id = props.match.params.id;\r\n\r\n  const getInventory = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:5000/inventory/stocktake/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      }\r\n    );\r\n    const parseData = await response.json();\r\n    setInventory(parseData);\r\n  };\r\n\r\n  const filteredInventory = inventory.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getInventory();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n        <div className=\"jumbotron\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-3\">Stocktake : {id}</h1>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <table className=\"table text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Inventory</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredInventory.map((item) => (\r\n                <tr key={item.product_id}>\r\n                  <td>{item.product_name}</td>\r\n                  <td>{item.sum}</td>\r\n                  <td>\r\n                    <InventoryBreakdown\r\n                      product_id={item.product_id}\r\n                      id={id}\r\n                      name={item.product_name}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {console.log(inventory)}\r\n        {!_.isEmpty(inventory) ? <PdfGenerator inventory={inventory} /> : null}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./dashboard.css\";\n\n//components\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Landing from \"./components/Landing\";\nimport Stocktaking from \"./components/stocktaking/Stocktaking\";\nimport TeamManagement from \"./components/team_management/TeamManagement\";\nimport Count from \"./components/stocktaking/Count\";\nimport Inventory from \"./components/inventory/Inventory\";\nimport UserDashboard from \"./user/UserDashboard\";\nimport UserStocktake from \"./user/UserStocktake\";\nimport QrScan from \"./components/stocktaking/QrScan\";\nimport ViewEdit from \"./components/stocktaking/ViewEdit\";\nimport StockTakeLists from \"./components/stocktaking/StocktakeLists\";\nimport Nav from \"./components/Nav\";\nimport ProductsDb from \"./components/inventory/ProductsDB\";\nimport ProcessDelivery from \"./components/inventory/ProcessDelivery\";\nimport PreviousStocktakeRecords from \"./components/inventory/PreviousStocktakeRecords\";\n\ntoast.configure();\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n  const name = localStorage.getItem(\"name\");\n  const userType = localStorage.getItem(\"role\");\n\n  //check if user is authorised\n  async function isAuth() {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n\n      const parseRes = await response.json();\n      console.log(\"isAuth\", parseRes);\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  }, []);\n\n  return (\n    <Fragment>\n      <Nav\n        setIsAuthenticated={setIsAuthenticated}\n        isAuthenticated={isAuthenticated}\n        name={name}\n        userType={userType}\n      />\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) =>\n              !isAuthenticated ? (\n                <Landing {...props} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Redirect to=\"/dashboard\" />\n              ) : (\n                <Login {...props} setAuth={setAuth} />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Dashboard {...props} setAuth={setAuth} name={name} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/stocktaking\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Stocktaking {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/team\"\n            render={(props) =>\n              isAuthenticated ? (\n                <TeamManagement {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/count/:id/:stocktakeid\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Count {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/viewedit/:id\"\n            render={(props) =>\n              isAuthenticated ? (\n                <ViewEdit {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/inventory/:id\"\n            render={(props) =>\n              isAuthenticated ? (\n                <Inventory {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/stocktakelists\"\n            render={(props) =>\n              isAuthenticated ? (\n                <StockTakeLists {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/userdashboard\"\n            render={(props) =>\n              isAuthenticated ? (\n                <UserDashboard {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/userstocktaking\"\n            render={(props) =>\n              isAuthenticated ? (\n                <UserStocktake {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/products\"\n            render={(props) =>\n              isAuthenticated ? (\n                <ProductsDb {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/stocktakerecord/:id\"\n            render={(props) =>\n              isAuthenticated ? (\n                <PreviousStocktakeRecords {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/qrscan\"\n            render={isAuthenticated ? () => <QrScan /> : () => <Login />}\n          />\n          <Route\n            exact\n            path=\"/processdelivery\"\n            render={(props) =>\n              isAuthenticated ? (\n                <ProcessDelivery {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\nwindow.React1 = require('react');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/beer-bottle.183ff331.png\";"],"sourceRoot":""}