{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\test2.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Test2 = () => {\n  const [products, setProducts] = useState([]);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n  const [sales, setSales] = useState([]);\n  const [data, setData] = useState();\n  const [labels, setLabels] = useState([]);\n  const [productsChange, setProductsChange] = useState([]);\n\n  async function getProducts() {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      setProductsChange(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const promiseAll = async sales => {\n    await Promise.all(sales).then(sales.forEach(sale => {\n      console.log(sale);\n    }));\n  };\n\n  const asyncForEach = async (array, callback) => {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index], index, array);\n    }\n  };\n\n  const getSalesNumbers = async products => {\n    var promises = products.map(product => {\n      return getSalesData(product.product_id);\n    });\n    promises.forEach(promise => {\n      promise.then(result => {\n        sales.push(result);\n      }).then(setSales(sales));\n    });\n  };\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      return await response.json();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n\n    if (!_.isEmpty(products)) {\n      Promise.all(products).then(getSalesNumbers(products)).then(sales.forEach(sale => {\n        console.log(sale);\n      })).then(console.log(labels));\n      Promise.all(sales).then(sales.forEach(sale => {\n        console.log(sale);\n      }));\n    }\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"TEST2\", console.log(sales));\n};\n\nexport default Test2;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/test2.js"],"names":["React","useEffect","useState","_","Test2","products","setProducts","prevStocktake","localStorage","getItem","currentStocktake","sales","setSales","data","setData","labels","setLabels","productsChange","setProductsChange","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","promiseAll","Promise","all","then","forEach","sale","log","asyncForEach","array","callback","index","length","getSalesNumbers","promises","map","product","getSalesData","product_id","promise","result","push","body","JSON","stringify","isEmpty"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Test2 = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const [sales, setSales] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [productsChange, setProductsChange] = useState([]);\r\n\r\n  async function getProducts() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/products/get/distinct\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setProducts(parseRes);\r\n      setProductsChange(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  const promiseAll = async (sales) => {\r\n    await Promise.all(sales).then(\r\n      sales.forEach((sale) => {\r\n        console.log(sale);\r\n      })\r\n    );\r\n  };\r\n\r\n  const asyncForEach = async (array, callback) => {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  };\r\n\r\n  const getSalesNumbers = async (products) => {\r\n    var promises = products.map((product) => {\r\n      return getSalesData(product.product_id);\r\n    });\r\n    promises.forEach((promise) => {\r\n      promise.then((result) => {\r\n        sales.push(result)\r\n      }).then(setSales(sales));\r\n    })\r\n  };\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    if (!_.isEmpty(products)) {\r\n      Promise.all(products)\r\n        .then(getSalesNumbers(products))\r\n        .then(sales.forEach((sale) => {\r\n            console.log(sale);\r\n        }))\r\n        .then(console.log(labels));\r\n      Promise.all(sales).then(\r\n        sales.forEach((sale) => {\r\n          console.log(sale);\r\n        })\r\n      );\r\n    }\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      TEST2\r\n      {console.log(sales)}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}