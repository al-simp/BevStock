{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\Count.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport CountModal from \"./CountModal\";\nimport QrCodeReader from \"./QrScan\";\n\nconst Count = props => {\n  const [name, setName] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productsChange, setProductsChange] = useState(false);\n  const [quantity, setQuantity] = useState(0);\n  const [scanner, setScanner] = useState(false);\n  const [quantityChange, setQuantityChange] = useState(false); // get the list id from the url params\n\n  const id = props.match.params.id; //get stocktake id from the url params\n\n  const stocktake = props.match.params.stocktakeid; //get list name using list id\n\n  const getName = async id => {\n    console.log(\"AM I RUNNING BEFORE REFRESH: \", id);\n\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/get/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json(); // API call returns an array of length 1,so get 1st value\n\n      setName(parseRes.rows[0].stocklist_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //get products on list and for stocktake\n\n\n  const getCountProducts = async (id, stocktake) => {\n    try {\n      const body = {\n        id,\n        stocktake\n      };\n      const response = await fetch(`http://localhost:5000/stocktake/liststocktake`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      console.log(parseRes);\n      setProducts(parseRes);\n      setProductsChange(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getName(id);\n    getCountProducts(id, stocktake);\n    setProductsChange(false);\n    setQuantityChange(false);\n  }, [quantityChange]);\n  return !scanner ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: () => setScanner(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"QrScan\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    listId: id,\n    setProductsChange: setProductsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Count\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CountModal, {\n    product: product,\n    setProductsChange: setProductsChange,\n    stocktakeid: stocktake,\n    setQuantity: setQuantity,\n    setQuantityChange: setQuantityChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  })))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QrCodeReader, {\n    setProductsChange: setProductsChange,\n    setQuantity: setQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: () => setScanner(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"QrScan\"));\n};\n\nexport default Count;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/Count.js"],"names":["React","useState","useEffect","Dropdown","CountModal","QrCodeReader","Count","props","name","setName","products","setProducts","productsChange","setProductsChange","quantity","setQuantity","scanner","setScanner","quantityChange","setQuantityChange","id","match","params","stocktake","stocktakeid","getName","console","log","response","fetch","method","headers","token","localStorage","parseRes","json","rows","stocklist_name","err","error","message","getCountProducts","body","JSON","stringify","map","product","product_stocklist_id","product_name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CountModal from \"./CountModal\";\r\nimport QrCodeReader from \"./QrScan\";\r\n\r\nconst Count = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [scanner, setScanner] = useState(false);\r\n  const [quantityChange, setQuantityChange] = useState(false);\r\n\r\n  // get the list id from the url params\r\n  const id = props.match.params.id;\r\n\r\n  //get stocktake id from the url params\r\n  const stocktake = props.match.params.stocktakeid;\r\n\r\n  //get list name using list id\r\n  const getName = async (id) => {\r\n    console.log(\"AM I RUNNING BEFORE REFRESH: \", id);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n\r\n      // API call returns an array of length 1,so get 1st value\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list and for stocktake\r\n  const getCountProducts = async (id, stocktake) => {\r\n    try {\r\n      const body = { id, stocktake };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocktake/liststocktake`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      console.log(parseRes);\r\n      setProducts(parseRes);\r\n      setProductsChange(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName(id);\r\n    getCountProducts(id, stocktake);\r\n    setProductsChange(false);\r\n    setQuantityChange(false);\r\n  }, [quantityChange]);\r\n\r\n  return !scanner ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={() => setScanner(true)}\r\n        >\r\n          QrScan\r\n        </button>\r\n        <h1 className=\"display-3\">{name}</h1>\r\n        <div>\r\n          <Dropdown listId={id} setProductsChange={setProductsChange} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <table className=\"table text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.product_stocklist_id}>\r\n                <td>{product.product_name}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>\r\n                  <CountModal\r\n                    product={product}\r\n                    setProductsChange={setProductsChange}\r\n                    stocktakeid={stocktake}\r\n                    setQuantity={setQuantity}\r\n                    setQuantityChange={setQuantityChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <div>\r\n      <QrCodeReader\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n      <button\r\n        className=\"btn btn-primary float-right\"\r\n        onClick={() => setScanner(false)}\r\n      >\r\n        QrScan\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Count;\r\n"]},"metadata":{},"sourceType":"module"}