{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\user\\\\UserShowLists.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AssignList from \"../components/stocktaking/AssignList\";\n\nconst UserShowLists = ({\n  allLists,\n  setListsChange,\n  stocktake,\n  stocktake_id\n}) => {\n  const [assignedLists, setAssignedLists] = useState([]);\n  const [lists, setLists] = useState([]); //assigned to an empty array\n\n  const [stocktakeInstance, setStocktakeInstance] = useState([]); //get the lists that have been assigned to the user\n\n  async function checkAssignedDuties() {\n    try {\n      const stocktake_id = localStorage.getItem(\"stocktake\");\n      const id = localStorage.getItem(\"user\");\n      const body = {\n        id,\n        stocktake_id\n      };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/stocklists/userassignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      console.log(parseRes);\n      setAssignedLists(parseRes);\n\n      if (parseRes.length > 0) {\n        setAssignedLists(parseRes);\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  useEffect(() => {\n    setStocktakeInstance(stocktake_id);\n    setLists(allLists);\n    setListsChange(false);\n    checkAssignedDuties();\n  }, [allLists]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Your Assigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Count\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Complete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, assignedLists.map(list => /*#__PURE__*/React.createElement(\"tr\", {\n    key: list.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, list.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `count/${list.stocklist_id}/${stocktakeInstance}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Count\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Mark as complete\")))))))));\n};\n\nexport default UserShowLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/user/UserShowLists.js"],"names":["React","Fragment","useState","useEffect","Link","AssignList","UserShowLists","allLists","setListsChange","stocktake","stocktake_id","assignedLists","setAssignedLists","lists","setLists","stocktakeInstance","setStocktakeInstance","checkAssignedDuties","localStorage","getItem","id","body","console","log","response","fetch","method","headers","JSON","stringify","parseRes","json","length","error","message","map","list","stocklist_id","stocklist_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignList from \"../components/stocktaking/AssignList\";\r\n\r\nconst UserShowLists = ({\r\n  allLists,\r\n  setListsChange,\r\n  stocktake,\r\n  stocktake_id,\r\n}) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to the user\r\n  async function checkAssignedDuties() {\r\n    try {\r\n      const stocktake_id = localStorage.getItem(\"stocktake\");\r\n      const id = localStorage.getItem(\"user\");\r\n      const body = { id, stocktake_id };\r\n      console.log(body);\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/userassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n      setAssignedLists(parseRes);\r\n      if (parseRes.length > 0) {\r\n        setAssignedLists(parseRes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setLists(allLists);\r\n    setListsChange(false);\r\n      checkAssignedDuties();\r\n  }, [allLists]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Your Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Count</th>\r\n                <th>Complete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${list.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                  <td>\r\n                    <button className=\"btn btn-success\">Mark as complete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserShowLists;\r\n"]},"metadata":{},"sourceType":"module"}