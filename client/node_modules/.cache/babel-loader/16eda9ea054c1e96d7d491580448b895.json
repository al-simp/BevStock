{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\Test.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\n\nconst Test = () => {\n  const publicVapidKey = \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\"; //check for service worker\n\n  const sendPush = () => {\n    if (\"serviceWorker\" in navigator) {\n      send().catch(err => {\n        console.error(err);\n      });\n    }\n  }; //register sw, register push, send push\n\n\n  async function send() {\n    //register service worker\n    console.log(\"registering service worker...\");\n    const register = await navigator.serviceWorker.register('worker.js', {\n      scope: \"/\"\n    });\n    console.log(\"Service Worker Registered.....\"); //register push\n\n    console.log(\"Registering push....\");\n    const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    });\n    console.log(\"push registered..\"); // Send push notification\n\n    console.log(\"sending push\");\n    await fetch(\"/pushnotification/subscribe\", {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    console.log(subscription);\n    console.log(\"push sent...\");\n  }\n\n  function urlBase64ToUint8Array(base64String) {\n    const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"TEST\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: sendPush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Send Notification\"))));\n};\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/Test.js"],"names":["React","useEffect","Test","publicVapidKey","sendPush","navigator","send","catch","err","console","error","log","register","serviceWorker","scope","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","fetch","method","body","JSON","stringify","headers","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Test = () => {\r\n  const publicVapidKey =\r\n    \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";\r\n\r\n  //check for service worker\r\n\r\n  const sendPush = () => {\r\n    if (\"serviceWorker\" in navigator) {\r\n      send().catch((err) => {\r\n        console.error(err);\r\n      });\r\n    }\r\n  };\r\n\r\n  //register sw, register push, send push\r\n  async function send() {\r\n    //register service worker\r\n    console.log(\"registering service worker...\");\r\n    const register = await navigator.serviceWorker.register('worker.js', {\r\n      scope: \"/\",\r\n    });\r\n\r\n    console.log(\"Service Worker Registered.....\");\r\n\r\n    //register push\r\n    console.log(\"Registering push....\");\r\n\r\n    const subscription = await register.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n\r\n    console.log(\"push registered..\");\r\n\r\n    // Send push notification\r\n\r\n    console.log(\"sending push\");\r\n    await fetch(\"/pushnotification/subscribe\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(subscription),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    console.log(subscription);\r\n\r\n    console.log(\"push sent...\");\r\n  }\r\n\r\n  function urlBase64ToUint8Array(base64String) {\r\n    const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, \"+\")\r\n      .replace(/_/g, \"/\");\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n          <h1>TEST</h1>\r\n          <button className=\"btn btn-success\" onClick={sendPush}>Send Notification</button>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}