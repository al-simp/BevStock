{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Dropdown from\"./Dropdown\";import CountModal from\"./CountModal\";import QrCodeReader from\"./QrScan\";var Count=function Count(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),products=_useState4[0],setProducts=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),productsChange=_useState6[0],setProductsChange=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,1),setQuantity=_useState8[0];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),scanner=_useState10[0],setScanner=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),quantityChange=_useState12[0],setQuantityChange=_useState12[1];// get the list id from the url params\nvar id=props.match.params.id;//get stocktake id from the url params\nvar stocktake=props.match.params.stocktakeid;//get list name using list id\nvar getName=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response,parseRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/stocklists/get/\".concat(id),{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context.sent;_context.next=6;return response.json();case 6:parseRes=_context.sent;// API call returns an array of length 1,so get 1st value\nsetName(parseRes.rows[0].stocklist_name);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getName(_x){return _ref.apply(this,arguments);};}();//get products on list and for stocktake\nvar getCountProducts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,stocktake){var body,response,parseRes;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;body={id:id,stocktake:stocktake};_context2.next=4;return fetch(\"/stocktake/liststocktake\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(body)});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:parseRes=_context2.sent;setProducts(parseRes);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0.message);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function getCountProducts(_x2,_x3){return _ref2.apply(this,arguments);};}();useEffect(function(){getName(id);getCountProducts(id,stocktake);setQuantityChange(false);},[quantityChange]);return!scanner?/*#__PURE__*/React.createElement(\"main\",{role:\"main\",className:\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary float-right\",onClick:function onClick(){return setScanner(true);}},\"QrScan\"),/*#__PURE__*/React.createElement(\"h1\",{className:\"display-3\"},name),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dropdown,{listId:id,setQuantityChange:setQuantityChange}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"table\",{className:\"table text-center\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Product\"),/*#__PURE__*/React.createElement(\"th\",null,\"Quantity\"),/*#__PURE__*/React.createElement(\"th\",null,\"Count\"))),/*#__PURE__*/React.createElement(\"tbody\",null,products.map(function(product){return/*#__PURE__*/React.createElement(\"tr\",{key:product.product_stocklist_id},/*#__PURE__*/React.createElement(\"td\",null,product.product_name),/*#__PURE__*/React.createElement(\"td\",null,product.quantity),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CountModal,{product:product,setProductsChange:setProductsChange,stocktakeid:stocktake,setQuantity:setQuantity,setQuantityChange:setQuantityChange})));}))))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrCodeReader,{setProductsChange:setProductsChange,setQuantity:setQuantity}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary float-right\",onClick:function onClick(){return setScanner(false);}},\"QrScan\"));};export default Count;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/Count.js"],"names":["React","useState","useEffect","Dropdown","CountModal","QrCodeReader","Count","props","name","setName","products","setProducts","productsChange","setProductsChange","setQuantity","scanner","setScanner","quantityChange","setQuantityChange","id","match","params","stocktake","stocktakeid","getName","fetch","method","headers","token","localStorage","response","json","parseRes","rows","stocklist_name","console","error","message","getCountProducts","body","JSON","stringify","map","product","product_stocklist_id","product_name","quantity"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,UAAzB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,eACCN,QAAQ,CAAC,EAAD,CADT,wCAChBO,IADgB,eACVC,OADU,8BAESR,QAAQ,CAAC,EAAD,CAFjB,yCAEhBS,QAFgB,eAENC,WAFM,8BAGqBV,QAAQ,CAAC,KAAD,CAH7B,yCAGhBW,cAHgB,eAGAC,iBAHA,8BAIDZ,QAAQ,CAAC,CAAD,CAJP,yCAIhBa,WAJgB,8BAKOb,QAAQ,CAAC,KAAD,CALf,0CAKhBc,OALgB,gBAKPC,UALO,gCAMqBf,QAAQ,CAAC,KAAD,CAN7B,2CAMhBgB,cANgB,gBAMAC,iBANA,gBAQvB;AACA,GAAMC,CAAAA,EAAE,CAAGZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B,CAEA;AACA,GAAMG,CAAAA,SAAS,CAAGf,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBE,WAArC,CAEA;AACA,GAAMC,CAAAA,OAAO,0FAAG,iBAAOL,EAAP,8KAEWM,CAAAA,KAAK,2BACPN,EADO,EAE1B,CACEO,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CAAEC,KAAK,CAAEC,YAAY,CAACD,KAAtB,CAFX,CAF0B,CAFhB,QAENE,QAFM,qCASWA,CAAAA,QAAQ,CAACC,IAAT,EATX,QASNC,QATM,eAWZ;AACAvB,OAAO,CAACuB,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,cAAlB,CAAP,CAZY,iFAcZC,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB,EAdY,qEAAH,kBAAPb,CAAAA,OAAO,4CAAb,CAkBA;AACA,GAAMc,CAAAA,gBAAgB,2FAAG,kBAAOnB,EAAP,CAAWG,SAAX,kKAEfiB,IAFe,CAER,CAAEpB,EAAE,CAAFA,EAAF,CAAMG,SAAS,CAATA,SAAN,CAFQ,wBAGEG,CAAAA,KAAK,4BAE1B,CACEC,MAAM,CAAE,MADV,CAEEC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFX,CAGEY,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAHR,CAF0B,CAHP,QAGfT,QAHe,uCAYEA,CAAAA,QAAQ,CAACC,IAAT,EAZF,QAYfC,QAZe,gBAcrBrB,WAAW,CAACqB,QAAD,CAAX,CAdqB,qFAgBrBG,OAAO,CAACC,KAAR,CAAc,aAAIC,OAAlB,EAhBqB,uEAAH,kBAAhBC,CAAAA,gBAAgB,kDAAtB,CAoBApC,SAAS,CAAC,UAAM,CACdsB,OAAO,CAACL,EAAD,CAAP,CACAmB,gBAAgB,CAACnB,EAAD,CAAKG,SAAL,CAAhB,CACAJ,iBAAiB,CAAC,KAAD,CAAjB,CACD,CAJQ,CAIN,CAACD,cAAD,CAJM,CAAT,CAMA,MAAO,CAACF,OAAD,cACL,4BAAM,IAAI,CAAC,MAAX,CAAkB,SAAS,CAAC,yCAA5B,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,8BACE,SAAS,CAAC,6BADZ,CAEE,OAAO,CAAE,yBAAMC,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAFX,WADF,cAOE,0BAAI,SAAS,CAAC,WAAd,EAA2BR,IAA3B,CAPF,cAQE,4CACE,oBAAC,QAAD,EAAU,MAAM,CAAEW,EAAlB,CAAsB,iBAAiB,CAAED,iBAAzC,EADF,CARF,CADF,cAaE,4CACE,6BAAO,SAAS,CAAC,mBAAjB,eACE,8CACE,2CACE,wCADF,cAEE,yCAFF,cAGE,sCAHF,CADF,CADF,cAQE,iCACGR,QAAQ,CAACgC,GAAT,CAAa,SAACC,OAAD,qBACZ,0BAAI,GAAG,CAAEA,OAAO,CAACC,oBAAjB,eACE,8BAAKD,OAAO,CAACE,YAAb,CADF,cAEE,8BAAKF,OAAO,CAACG,QAAb,CAFF,cAGE,2CACE,oBAAC,UAAD,EACE,OAAO,CAAEH,OADX,CAEE,iBAAiB,CAAE9B,iBAFrB,CAGE,WAAW,CAAES,SAHf,CAIE,WAAW,CAAER,WAJf,CAKE,iBAAiB,CAAEI,iBALrB,EADF,CAHF,CADY,EAAb,CADH,CARF,CADF,CAbF,CADK,cA4CL,4CACE,oBAAC,YAAD,EACE,iBAAiB,CAAEL,iBADrB,CAEE,WAAW,CAAEC,WAFf,EADF,cAKE,8BACE,SAAS,CAAC,6BADZ,CAEE,OAAO,CAAE,yBAAME,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAFX,WALF,CA5CF,CAyDD,CArHD,CAsHA,cAAeV,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport CountModal from \"./CountModal\";\r\nimport QrCodeReader from \"./QrScan\";\r\n\r\nconst Count = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [setQuantity] = useState(0);\r\n  const [scanner, setScanner] = useState(false);\r\n  const [quantityChange, setQuantityChange] = useState(false);\r\n\r\n  // get the list id from the url params\r\n  const id = props.match.params.id;\r\n\r\n  //get stocktake id from the url params\r\n  const stocktake = props.match.params.stocktakeid;\r\n\r\n  //get list name using list id\r\n  const getName = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n\r\n      // API call returns an array of length 1,so get 1st value\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list and for stocktake\r\n  const getCountProducts = async (id, stocktake) => {\r\n    try {\r\n      const body = { id, stocktake };\r\n      const response = await fetch(\r\n        `/stocktake/liststocktake`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName(id);\r\n    getCountProducts(id, stocktake);\r\n    setQuantityChange(false);\r\n  }, [quantityChange]);\r\n\r\n  return !scanner ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={() => setScanner(true)}\r\n        >\r\n          QrScan\r\n        </button>\r\n        <h1 className=\"display-3\">{name}</h1>\r\n        <div>\r\n          <Dropdown listId={id} setQuantityChange={setQuantityChange} />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <table className=\"table text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Quantity</th>\r\n              <th>Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.product_stocklist_id}>\r\n                <td>{product.product_name}</td>\r\n                <td>{product.quantity}</td>\r\n                <td>\r\n                  <CountModal\r\n                    product={product}\r\n                    setProductsChange={setProductsChange}\r\n                    stocktakeid={stocktake}\r\n                    setQuantity={setQuantity}\r\n                    setQuantityChange={setQuantityChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <div>\r\n      <QrCodeReader\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n      <button\r\n        className=\"btn btn-primary float-right\"\r\n        onClick={() => setScanner(false)}\r\n      >\r\n        QrScan\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Count;\r\n"]},"metadata":{},"sourceType":"module"}