{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\test2.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Test2 = () => {\n  const [products, setProducts] = useState([]);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n  const [sales] = useState([]);\n  const [data, setData] = useState();\n  const [labels, setLabels] = useState([]);\n  const [productsChange, setProductsChange] = useState([]);\n\n  async function getProducts() {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      setProductsChange(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const asyncForEach = async (array, callback) => {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index], index, array);\n    }\n  };\n\n  const getSalesNumbers = async products => {\n    await asyncForEach(products, async product => {\n      var sale = await getSalesData(product.product_id);\n      sales.push(sale);\n    });\n  };\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      return await response.json();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n\n    if (!_.isEmpty(products)) {\n      Promise.all(products).then().then(getSalesNumbers(products)).then(console.log(sales));\n      Promise.all(sales).then(sales.forEach(sale => {\n        console.log(sale);\n      }));\n    }\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"TEST2\", console.log(data));\n};\n\nexport default Test2;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/test2.js"],"names":["React","useEffect","useState","_","Test2","products","setProducts","prevStocktake","localStorage","getItem","currentStocktake","sales","data","setData","labels","setLabels","productsChange","setProductsChange","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","asyncForEach","array","callback","index","length","getSalesNumbers","product","sale","getSalesData","product_id","push","body","JSON","stringify","isEmpty","Promise","all","then","log","forEach"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Test2 = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const [sales] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [productsChange, setProductsChange] = useState([]);\r\n\r\n  async function getProducts() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/products/get/distinct\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setProducts(parseRes);\r\n      setProductsChange(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  const asyncForEach = async (array, callback) => {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  };\r\n\r\n  const getSalesNumbers = async (products) => {\r\nawait asyncForEach(products, async (product) => {\r\n    var sale = await getSalesData(product.product_id);\r\n    sales.push(sale);\r\n})\r\n  }\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    if (!_.isEmpty(products)) {\r\n        Promise.all(products).then(\r\n        ).then(getSalesNumbers(products)).then(console.log(sales));\r\n        Promise.all(sales).then(sales.forEach(sale => {\r\n            console.log(sale)\r\n        }))\r\n    }\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      TEST2\r\n      {console.log(data)}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}