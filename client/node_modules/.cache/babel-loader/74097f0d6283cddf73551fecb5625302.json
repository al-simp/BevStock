{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\test2.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Test2 = () => {\n  const [products, setProducts] = useState([]);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n  const [sales] = useState([]);\n  const [data, setData] = useState();\n  const [labels, setLabels] = useState([]);\n  const [productsChange, setProductsChange] = useState([]);\n\n  async function getProducts() {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      setProductsChange(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      sales.push(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }; // method to map through the products array, finding a sales figure for each product.\n\n\n  const getSales = async () => {\n    //mapping through the array performing getSalesData function for each product.\n    var promises = products.map(async function (product) {\n      return getSalesData(product.product_id).then(function (results) {\n        product.rows = results;\n        return product;\n      });\n    }); // use promise.all to return resolved values\n\n    Promise.all(promises).then(function (results) {\n      //set products to top 5 sorted from highest to lowest.\n      setProducts(results.sort((a, b) => {\n        if (Number(a.rows.sales) < Number(b.rows.sales)) {\n          return 1;\n        } else if (Number(a.rows.sales) > Number(b.rows.sales)) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }).slice(0, 5));\n      setLabels(products.map(result => {\n        return result.rows.product_name;\n      }));\n      setData(products.map(result => {\n        return result.rows.sales;\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getProducts();\n\n    if (!_.isEmpty(products)) {\n      Promise.all(products).then(products.forEach(product => {\n        console.log(product.product_id);\n      }));\n    }\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, \"TEST2\", console.log(data));\n};\n\nexport default Test2;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/test2.js"],"names":["React","useEffect","useState","_","Test2","products","setProducts","prevStocktake","localStorage","getItem","currentStocktake","sales","data","setData","labels","setLabels","productsChange","setProductsChange","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","getSalesData","product","body","JSON","stringify","push","getSales","promises","map","product_id","then","results","rows","Promise","all","sort","a","b","Number","slice","result","product_name","isEmpty","forEach","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Test2 = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const [sales] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [productsChange, setProductsChange] = useState([]);\r\n\r\n  async function getProducts() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/products/get/distinct\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setProducts(parseRes);\r\n      setProductsChange(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const parseRes = await response.json();\r\n      sales.push(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  // method to map through the products array, finding a sales figure for each product.\r\n  const getSales = async () => {\r\n    //mapping through the array performing getSalesData function for each product.\r\n    var promises = products.map(async function (product) {\r\n      return getSalesData(product.product_id).then(function (results) {\r\n        product.rows = results;\r\n        return product;\r\n      });\r\n    });\r\n    // use promise.all to return resolved values\r\n    Promise.all(promises).then(function (results) {\r\n      //set products to top 5 sorted from highest to lowest.\r\n      setProducts(\r\n        results\r\n          .sort((a, b) => {\r\n            if (Number(a.rows.sales) < Number(b.rows.sales)) {\r\n              return 1;\r\n            } else if (Number(a.rows.sales) > Number(b.rows.sales)) {\r\n              return -1;\r\n            } else {\r\n              return 0;\r\n            }\r\n          })\r\n          .slice(0, 5)\r\n      );\r\n\r\n      setLabels(\r\n        products.map((result) => {\r\n          return result.rows.product_name;\r\n        })\r\n      );\r\n      setData(\r\n        products.map((result) => {\r\n          return result.rows.sales;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    if (!_.isEmpty(products)) {\r\n        Promise.all(products).then(products.forEach(product => {\r\n          console.log(product.product_id);  \r\n        }));\r\n    }\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      TEST2\r\n      {console.log(data)}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}