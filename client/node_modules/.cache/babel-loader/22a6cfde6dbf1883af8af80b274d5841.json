{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\PreviousStocktakeRecords.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport InventoryBreakdown from \"./InventoryBreakdown\";\nimport _ from \"lodash\";\nimport PdfGenerator from \"../PdfGenerator\";\n\nconst Inventory = props => {\n  const [inventory, setInventory] = useState([]);\n  const [search, setSearch] = useState(\"\"); //get the latest inventory ID from the params\n\n  const id = props.match.params.id;\n\n  const getInventory = async () => {\n    const response = await fetch(`http://localhost:5000/inventory/stocktake/${id}`, {\n      method: \"GET\",\n      headers: {\n        token: localStorage.token\n      }\n    });\n    const parseData = await response.json();\n    setInventory(parseData);\n  };\n\n  const filteredInventory = inventory.filter(item => {\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\n  });\n  useEffect(() => {\n    getInventory();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Stocktake : $\", id), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, filteredInventory.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.product_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, item.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, item.sum), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(InventoryBreakdown, {\n    product_id: item.product_id,\n    id: id,\n    name: item.product_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))))))), console.log(inventory), !_.isEmpty(inventory) ? /*#__PURE__*/React.createElement(PdfGenerator, {\n    inventory: inventory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 34\n    }\n  }) : null));\n};\n\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/PreviousStocktakeRecords.js"],"names":["React","Fragment","useState","useEffect","InventoryBreakdown","_","PdfGenerator","Inventory","props","inventory","setInventory","search","setSearch","id","match","params","getInventory","response","fetch","method","headers","token","localStorage","parseData","json","filteredInventory","filter","item","product_name","toLowerCase","includes","e","target","value","map","product_id","sum","console","log","isEmpty"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport InventoryBreakdown from \"./InventoryBreakdown\";\r\nimport _ from \"lodash\";\r\nimport PdfGenerator from \"../PdfGenerator\";\r\n\r\nconst Inventory = (props) => {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  //get the latest inventory ID from the params\r\n  const id = props.match.params.id;\r\n\r\n  const getInventory = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:5000/inventory/stocktake/${id}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      }\r\n    );\r\n    const parseData = await response.json();\r\n    setInventory(parseData);\r\n  };\r\n\r\n  const filteredInventory = inventory.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getInventory();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n        <div className=\"jumbotron\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-3\">Stocktake : ${id}</h1>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <table className=\"table text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Inventory</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredInventory.map((item) => (\r\n                <tr key={item.product_id}>\r\n                  <td>{item.product_name}</td>\r\n                  <td>{item.sum}</td>\r\n                  <td>\r\n                    <InventoryBreakdown\r\n                      product_id={item.product_id}\r\n                      id={id}\r\n                      name={item.product_name}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {console.log(inventory)}\r\n        {!_.isEmpty(inventory) ? <PdfGenerator inventory={inventory} /> : null}\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"]},"metadata":{},"sourceType":"module"}