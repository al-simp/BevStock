{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\test2.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Test2 = () => {\n  const [products, setProducts] = useState([]);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n  const [sales, setSales] = useState([]);\n  const [data, setData] = useState();\n  const [labels, setLabels] = useState([]);\n  const [productsChange, setProductsChange] = useState([]);\n\n  async function getProducts() {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      setProductsChange(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const writeSales = (product_id, sales) => {\n    console.log(product_id, sales);\n    /* try {\r\n        const body = { product_id, sales, currentStocktake };\r\n        fetch(\"http://localhost:5000/inventory/writesales\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }*/\n  };\n\n  const getSalesNumbers = async products => {\n    var promises = products.map(product => {\n      return getSalesData(product.product_id);\n    });\n    promises.forEach(promise => {\n      promise.then(result => {\n        writeSales(result.product_id, result.sales);\n      });\n    });\n  };\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      return await response.json();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n\n    if (!_.isEmpty(products)) {\n      Promise.all(products).then(getSalesNumbers(products)).then(sales.forEach(sale => {\n        console.log(sale);\n      })).then(console.log(labels));\n      Promise.all(sales).then(sales.forEach(sale => {\n        console.log(sale);\n      }));\n    }\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"TEST2\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: writeSales(6, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"CLICK\"));\n};\n\nexport default Test2;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/test2.js"],"names":["React","useEffect","useState","_","Test2","products","setProducts","prevStocktake","localStorage","getItem","currentStocktake","sales","setSales","data","setData","labels","setLabels","productsChange","setProductsChange","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","writeSales","product_id","log","getSalesNumbers","promises","map","product","getSalesData","forEach","promise","then","result","body","JSON","stringify","isEmpty","Promise","all","sale"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Test2 = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const [sales, setSales] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n  const [productsChange, setProductsChange] = useState([]);\r\n\r\n  async function getProducts() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/products/get/distinct\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setProducts(parseRes);\r\n      setProductsChange(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n  const writeSales = (product_id, sales) => {\r\n      console.log(product_id, sales);\r\n  /* try {\r\n      const body = { product_id, sales, currentStocktake };\r\n      fetch(\"http://localhost:5000/inventory/writesales\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }*/ \r\n  };\r\n  const getSalesNumbers = async (products) => {\r\n    var promises = products.map((product) => {\r\n      return getSalesData(product.product_id);\r\n    });\r\n    promises.forEach((promise) => {\r\n      promise.then((result) => {\r\n        writeSales(result.product_id, result.sales);\r\n      });\r\n    });\r\n  };\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    if (!_.isEmpty(products)) {\r\n      Promise.all(products)\r\n        .then(getSalesNumbers(products))\r\n        .then(\r\n          sales.forEach((sale) => {\r\n            console.log(sale);\r\n          })\r\n        )\r\n        .then(console.log(labels));\r\n      Promise.all(sales).then(\r\n        sales.forEach((sale) => {\r\n          console.log(sale);\r\n        })\r\n      );\r\n    }\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      TEST2\r\n      <button onClick={writeSales(6, 0)}>CLICK</button>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}