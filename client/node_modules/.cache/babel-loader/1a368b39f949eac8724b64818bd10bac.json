{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import AssignList from\"./AssignList\";var ShowLists=function ShowLists(_ref){var allLists=_ref.allLists,setListsChange=_ref.setListsChange,stocktake=_ref.stocktake,stocktake_id=_ref.stocktake_id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),assignedLists=_useState2[0],setAssignedLists=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),unassignedLists=_useState4[0],setUnassignedLists=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),lists=_useState6[0],setLists=_useState6[1];//assigned to an empty array\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),stocktakeInstance=_useState8[0],setStocktakeInstance=_useState8[1];//get the lists that have been assigned to staff\nvar getAssignedLists=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var body,_assignedLists,parseRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;body={stocktake_id:stocktake_id};_context.next=4;return fetch(\"/stocklists/assignedlists\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 4:_assignedLists=_context.sent;_context.next=7;return _assignedLists.json();case 7:parseRes=_context.sent;console.log(parseRes);setAssignedLists(parseRes);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function getAssignedLists(){return _ref2.apply(this,arguments);};}();//get the unassigned lists\nvar getUnassignedLists=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var body,_unassignedLists,parseRes;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;body={stocktake_id:stocktake_id};_context2.next=4;return fetch(\"/stocklists/unassignedlists\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 4:_unassignedLists=_context2.sent;_context2.next=7;return _unassignedLists.json();case 7:parseRes=_context2.sent;setUnassignedLists(parseRes);_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0.message);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function getUnassignedLists(){return _ref3.apply(this,arguments);};}();var unassign=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var body,_unassign;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;body={id:id,stocktake_id:stocktake_id};_context3.next=4;return fetch(\"/stocklists/unassignuser\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 4:_unassign=_context3.sent;_context3.next=7;return _unassign.json();case 7:setListsChange(true);_context3.next=12;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function unassign(_x){return _ref4.apply(this,arguments);};}();//delete list function\nvar deleteList=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"/stocklists/delete/\".concat(id),{method:\"DELETE\",headers:{token:localStorage.token}});case 3:setLists(lists.filter(function(stocklist){return stocklist.stocklist_id!==id;}));_context4.next=9;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0.message);case 9:setListsChange(true);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return function deleteList(_x2){return _ref5.apply(this,arguments);};}();useEffect(function(){setStocktakeInstance(stocktake_id);setLists(allLists);setListsChange(false);if(stocktake){getAssignedLists();getUnassignedLists();}},[allLists]);return!stocktake?/*#__PURE__*/React.createElement(\"table\",{className:\"table text-center\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Stock Area\"),/*#__PURE__*/React.createElement(\"th\",null,\"Delete\"),/*#__PURE__*/React.createElement(\"th\",null,\"View/Edit Products\"))),/*#__PURE__*/React.createElement(\"tbody\",null,allLists.map(function(stocklist){return/*#__PURE__*/React.createElement(\"tr\",{key:stocklist.stocklist_id},/*#__PURE__*/React.createElement(\"td\",null,stocklist.stocklist_name),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return deleteList(stocklist.stocklist_id);}},\"Delete\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"viewedit/\".concat(stocklist.stocklist_id),className:\"btn btn-primary\"},\"View/Edit\")));}))):/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Unassigned Stock Areas\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table table-bordered\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Stock Area\"),/*#__PURE__*/React.createElement(\"th\",null,\"Assign to team member\"),/*#__PURE__*/React.createElement(\"th\",null,\"Count\"))),/*#__PURE__*/React.createElement(\"tbody\",null,unassignedLists.map(function(stocklist){return/*#__PURE__*/React.createElement(\"tr\",{key:stocklist.stocklist_id},/*#__PURE__*/React.createElement(\"td\",null,stocklist.stocklist_name),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(AssignList,{name:stocklist.stocklist_name,stocklist_id:stocklist.stocklist_id,setListsChange:setListsChange})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Link,{to:\"count/\".concat(stocklist.stocklist_id,\"/\").concat(stocktakeInstance),className:\"btn btn-primary\"},\"Count\")));})))),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Assigned Stock Areas\"),/*#__PURE__*/React.createElement(\"table\",{className:\"table table-bordered\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Stock Area\"),/*#__PURE__*/React.createElement(\"th\",null,\"Assigned to\"),/*#__PURE__*/React.createElement(\"th\",null,\"Status\"),/*#__PURE__*/React.createElement(\"th\",null,\"Message\"))),/*#__PURE__*/React.createElement(\"tbody\",null,assignedLists.map(function(list){return/*#__PURE__*/React.createElement(\"tr\",{key:list.stocklist_id},/*#__PURE__*/React.createElement(\"td\",null,list.stocklist_name),/*#__PURE__*/React.createElement(\"td\",null,list.user_name),list.completed?/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-pill badge-success\"},\"Completed\")):/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"badge badge-pill badge-warning\"},\"In Progress\"),/*#__PURE__*/React.createElement(\"button\",{href:\"#\",className:\"badge badge-pill badge-danger\",onClick:function onClick(e){return unassign(list.stocklist_id);}},\"Unassign\")),/*#__PURE__*/React.createElement(\"td\",null,list.user_message));}))))));};export default ShowLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/ShowLists.js"],"names":["React","useState","useEffect","Link","AssignList","ShowLists","allLists","setListsChange","stocktake","stocktake_id","assignedLists","setAssignedLists","unassignedLists","setUnassignedLists","lists","setLists","stocktakeInstance","setStocktakeInstance","getAssignedLists","body","fetch","method","headers","JSON","stringify","json","parseRes","console","log","error","message","getUnassignedLists","unassign","id","deleteList","token","localStorage","filter","stocklist","stocklist_id","map","stocklist_name","list","user_name","completed","e","user_message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignList from \"./AssignList\";\r\n\r\nconst ShowLists = ({ allLists, setListsChange, stocktake, stocktake_id }) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [unassignedLists, setUnassignedLists] = useState([]);\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to staff\r\n  const getAssignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const assignedLists = await fetch(\r\n        \"/stocklists/assignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await assignedLists.json();\r\n      console.log(parseRes);\r\n      setAssignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //get the unassigned lists\r\n  const getUnassignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const unassignedLists = await fetch(\r\n        \"/stocklists/unassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await unassignedLists.json();\r\n      setUnassignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const unassign = async (id) => {\r\n    try {\r\n      const body = { id, stocktake_id };\r\n      const unassign = await fetch(\r\n        \"/stocklists/unassignuser\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await unassign.json();\r\n      setListsChange(true);\r\n    } catch (error) {}\r\n  };\r\n\r\n  //delete list function\r\n  const deleteList = async (id) => {\r\n    try {\r\n      await fetch(`/stocklists/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      setLists(lists.filter((stocklist) => stocklist.stocklist_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setListsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setLists(allLists);\r\n    setListsChange(false);\r\n    if (stocktake) {\r\n      getAssignedLists();\r\n      getUnassignedLists();\r\n    }\r\n  }, [allLists]);\r\n\r\n  return !stocktake ? (\r\n    <table className=\"table text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>Stock Area</th>\r\n          <th>Delete</th>\r\n          <th>View/Edit Products</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {allLists.map((stocklist) => (\r\n          <tr key={stocklist.stocklist_id}>\r\n            <td>{stocklist.stocklist_name}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteList(stocklist.stocklist_id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <Link\r\n                to={`viewedit/${stocklist.stocklist_id}`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View/Edit\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Unassigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assign to team member</th>\r\n                <th>Count</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {unassignedLists.map((stocklist) => (\r\n                <tr key={stocklist.stocklist_id}>\r\n                  <td>{stocklist.stocklist_name}</td>\r\n                  <td>\r\n                    <AssignList\r\n                      name={stocklist.stocklist_name}\r\n                      stocklist_id={stocklist.stocklist_id}\r\n                      setListsChange={setListsChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${stocklist.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assigned to</th>\r\n                <th>Status</th>\r\n                <th>Message</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>{list.user_name}</td>\r\n                  {list.completed ? (\r\n                    <td><span className=\"badge badge-pill badge-success\">Completed</span></td>\r\n                  ) : (\r\n                    <td>\r\n                    <span className=\"badge badge-pill badge-warning\">In Progress</span>\r\n                      <button href=\"#\" className=\"badge badge-pill badge-danger\" onClick={(e) => unassign(list.stocklist_id)}>\r\n                        Unassign\r\n                      </button>\r\n                    </td>\r\n                  )\r\n                  }\r\n                  <td>{list.user_message}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowLists;\r\n"]},"metadata":{},"sourceType":"module"}