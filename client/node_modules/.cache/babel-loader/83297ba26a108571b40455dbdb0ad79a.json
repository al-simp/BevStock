{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\PredictedOrder.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst PredictedOrder = () => {\n  //declare products as an empty array\n  const [products, setProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Predicted Order\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })), levels.map(item => {\n    if (item.sum - item.avg_weekly_sales < 0) {\n      console.log(item.product_name, Math.abs(Number(item.sum - item.avg_weekly_sales)) + item.avg_weekly_sales);\n    } else {\n      console.log(item.product_name, item.avg_weekly_sales, item.sum);\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Quantity\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PredictedOrder;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/PredictedOrder.js"],"names":["React","useEffect","useState","PredictedOrder","products","setProducts","search","setSearch","e","target","value","levels","map","item","sum","avg_weekly_sales","console","log","product_name","Math","abs","Number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,sBACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,yCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAGM,CAAD,IAAOD,SAAS,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASGC,MAAM,CAACC,GAAP,CAAYC,IAAD,IAAU;AACpB,QAAIA,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,gBAAhB,GAAmC,CAAvC,EAA0C;AACxCC,MAAAA,OAAO,CAACC,GAAR,CACEJ,IAAI,CAACK,YADP,EAEEC,IAAI,CAACC,GAAL,CAASC,MAAM,CAACR,IAAI,CAACC,GAAL,GAAWD,IAAI,CAACE,gBAAjB,CAAf,IACEF,IAAI,CAACE,gBAHT;AAKD,KAND,MAMO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,YAAjB,EAA+BL,IAAI,CAACE,gBAApC,EAAsDF,IAAI,CAACC,GAA3D;AACD;AACF,GAVA,CATH,eAoBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAFF,eAwBE;AAAO,IAAA,SAAS,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAxBF,CADF;AAoCD,CAzCD;;AA2CA,eAAeX,cAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PredictedOrder = () => {\r\n  //declare products as an empty array\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <h1>Predicted Order</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        {levels.map((item) => {\r\n          if (item.sum - item.avg_weekly_sales < 0) {\r\n            console.log(\r\n              item.product_name,\r\n              Math.abs(Number(item.sum - item.avg_weekly_sales)) +\r\n                item.avg_weekly_sales\r\n            );\r\n          } else {\r\n            console.log(item.product_name, item.avg_weekly_sales, item.sum);\r\n          }\r\n        })}\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <th>Product</th>\r\n          <th>Size</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </thead>\r\n        <tbody></tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PredictedOrder;\r\n"]},"metadata":{},"sourceType":"module"}