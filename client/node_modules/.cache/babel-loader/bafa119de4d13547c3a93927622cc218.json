{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\Bottle.js\";\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport CountModal from \"./CountModal\";\n\nconst Bottle = props => {\n  const [bottle, setBottle] = useState({});\n  const {\n    result,\n    hasScanned,\n    hasResult,\n    setPairBool,\n    setProductsChange,\n    setQuantity\n  } = props;\n  const stocktake = localStorage.getItem(\"stocktake\");\n\n  const getBottle = async () => {\n    if (result !== null && !hasResult && !hasScanned) {\n      console.log(\"result\", result, \"scanned\", hasScanned, \"hasResult\", hasResult);\n      setPairBool(\"hasScanned\", true);\n\n      try {\n        const body = {\n          result,\n          stocktake\n        };\n        const response = await fetch(\"http://localhost:5000/stocktake/productfromid\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        const parseData = await response.json();\n        console.log(parseData.length);\n        setBottle(parseData[0]);\n        console.log(parseData);\n        setPairBool(\"hasResult\", true);\n      } catch (err) {\n        console.error(err.message);\n        setPairBool(\"hasScanned\", false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!hasResult) {\n      getBottle();\n    }\n  }, [result, bottle]);\n  return !_.isEmpty(bottle) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CountModal, {\n    product: bottle,\n    stocktakeid: stocktake,\n    setProductsChange: setProductsChange,\n    setQuantity: setQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, \"No bottle found\");\n};\n\nexport default Bottle;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/Bottle.js"],"names":["React","useEffect","useState","_","CountModal","Bottle","props","bottle","setBottle","result","hasScanned","hasResult","setPairBool","setProductsChange","setQuantity","stocktake","localStorage","getItem","getBottle","console","log","body","response","fetch","method","headers","JSON","stringify","parseData","json","length","err","error","message","isEmpty"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AACJO,IAAAA,MADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA;AANI,MAOFR,KAPJ;AAQA,QAAMS,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5B,QAAIT,MAAM,KAAK,IAAX,IAAmB,CAACE,SAApB,IAAiC,CAACD,UAAtC,EAAkD;AAChDS,MAAAA,OAAO,CAACC,GAAR,CACE,QADF,EAEEX,MAFF,EAGE,SAHF,EAIEC,UAJF,EAKE,WALF,EAMEC,SANF;AAQAC,MAAAA,WAAW,CAAC,YAAD,EAAe,IAAf,CAAX;;AACA,UAAI;AACF,cAAMS,IAAI,GAAG;AAAEZ,UAAAA,MAAF;AAAUM,UAAAA;AAAV,SAAb;AACA,cAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFX;AAGEJ,UAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHR,SAF0B,CAA5B;AASA,cAAMO,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAxB;AAEAV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACE,MAAtB;AACAtB,QAAAA,SAAS,CAACoB,SAAS,CAAC,CAAD,CAAV,CAAT;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ;AACAhB,QAAAA,WAAW,CAAC,WAAD,EAAc,IAAd,CAAX;AACD,OAjBD,CAiBE,OAAOmB,GAAP,EAAY;AACZZ,QAAAA,OAAO,CAACa,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACArB,QAAAA,WAAW,CAAC,YAAD,EAAe,KAAf,CAAX;AACD;AACF;AACF,GAjCD;;AAmCAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,SAAL,EAAgB;AACdO,MAAAA,SAAS;AACV;AACF,GAJQ,EAIN,CAACT,MAAD,EAASF,MAAT,CAJM,CAAT;AAMA,SAAO,CAACJ,CAAC,CAAC+B,OAAF,CAAU3B,MAAV,CAAD,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEA,MADX;AAEE,IAAA,WAAW,EAAEQ,SAFf;AAGE,IAAA,iBAAiB,EAAEF,iBAHrB;AAIE,IAAA,WAAW,EAAEC,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,gBAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVF;AAYD,CAlED;;AAoEA,eAAeT,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport CountModal from \"./CountModal\";\r\n\r\nconst Bottle = (props) => {\r\n  const [bottle, setBottle] = useState({});\r\n\r\n  const {\r\n    result,\r\n    hasScanned,\r\n    hasResult,\r\n    setPairBool,\r\n    setProductsChange,\r\n    setQuantity,\r\n  } = props;\r\n  const stocktake = localStorage.getItem(\"stocktake\");\r\n\r\n  const getBottle = async () => {\r\n    if (result !== null && !hasResult && !hasScanned) {\r\n      console.log(\r\n        \"result\",\r\n        result,\r\n        \"scanned\",\r\n        hasScanned,\r\n        \"hasResult\",\r\n        hasResult\r\n      );\r\n      setPairBool(\"hasScanned\", true);\r\n      try {\r\n        const body = { result, stocktake };\r\n        const response = await fetch(\r\n          \"http://localhost:5000/stocktake/productfromid\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        const parseData = await response.json();\r\n\r\n        console.log(parseData.length);\r\n        setBottle(parseData[0]);\r\n        console.log(parseData);\r\n        setPairBool(\"hasResult\", true);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setPairBool(\"hasScanned\", false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!hasResult) {\r\n      getBottle();\r\n    }\r\n  }, [result, bottle]);\r\n\r\n  return !_.isEmpty(bottle) ? (\r\n    <div>\r\n      <CountModal\r\n        product={bottle}\r\n        stocktakeid={stocktake}\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <h1>No bottle found</h1>\r\n  );\r\n};\r\n\r\nexport default Bottle;\r\n"]},"metadata":{},"sourceType":"module"}