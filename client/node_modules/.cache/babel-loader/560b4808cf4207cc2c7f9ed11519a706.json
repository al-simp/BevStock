{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport TopSellerChart from \"../components/TopSellerChart\";\nimport ProductAlerts from \"../components/inventory/ProductAlerts\";\nimport DashBoardStocktaking from \"./DashboardStocktaking\";\nimport StockRecords from \"./inventory/StockRecords\";\nimport _ from \"lodash\";\n\nconst Dashboard = ({\n  setAuth,\n  name\n}) => {\n  const [stocktake, setStocktake] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [graphLabels, setGraphLabels] = useState([]);\n  const [graphData, setGraphData] = useState([]);\n  const [allTimeLabels, setAllTimeLabels] = useState([]);\n  const [allTimeData, setAllTimeData] = useState([]); //get id of stocktake if stocktake in progress\n\n  const stockId = Number(localStorage.getItem(\"stocktake\")); //if stock ID exists, set stocktake to true.\n\n  const Stocktake = () => {\n    if (stockId !== 0) {\n      setStocktake(true);\n    }\n  }; //find levels with pars for product alerts components.\n\n\n  const getLevels = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/inventory/levels/${localStorage.getItem(\"laststocktake\")}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setLevels(parseRes);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }; //get top selling products for chart (week)\n\n\n  const getTopSellers = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/inventory/topsellers/${localStorage.getItem(\"laststocktake\")}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setGraphLabels(parseRes.map(product => {\n        return product.product_name;\n      }));\n      setGraphData(parseRes.map(product => {\n        return product.sales;\n      }));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }; //get top selling products for chart (all time)\n\n\n  const getTopSellersAllTime = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/inventory/alltimetopsellers/`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setAllTimeData(parseRes.map(product => {\n        return product.product_name;\n      }));\n      setAllTimeLabels(parseRes.map(product => {\n        return product.sum;\n      }));\n    } catch (error) {\n      console.log(error.message);\n    }\n  }; //get userType for conditional render\n\n\n  const userType = localStorage.getItem(\"role\");\n  useEffect(() => {\n    getLevels();\n    getTopSellers();\n    Stocktake();\n    getTopSellersAllTime;\n  }, []);\n  return userType === \"User\" ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/userdashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Welcome back, \", name, \"!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-toolbar mb-2 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, _.isEmpty(graphLabels) || _.isEmpty(graphData) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(TopSellerChart, {\n    weekData: graphData,\n    weekLabels: graphLabels,\n    allTimeData: allTimeData,\n    allTimeLabels: allTimeLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, _.isEmpty(levels) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(ProductAlerts, {\n    levels: levels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StockRecords, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DashBoardStocktaking, {\n    stocktake: stocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/Dashboard.js"],"names":["React","Fragment","useState","useEffect","Redirect","TopSellerChart","ProductAlerts","DashBoardStocktaking","StockRecords","_","Dashboard","setAuth","name","stocktake","setStocktake","products","setProducts","levels","setLevels","graphLabels","setGraphLabels","graphData","setGraphData","allTimeLabels","setAllTimeLabels","allTimeData","setAllTimeData","stockId","Number","localStorage","getItem","Stocktake","getLevels","response","fetch","method","headers","token","parseRes","json","err","console","log","message","getTopSellers","map","product","product_name","sales","error","getTopSellersAllTime","sum","userType","isEmpty"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport TopSellerChart from \"../components/TopSellerChart\";\r\nimport ProductAlerts from \"../components/inventory/ProductAlerts\";\r\nimport DashBoardStocktaking from \"./DashboardStocktaking\";\r\nimport StockRecords from \"./inventory/StockRecords\";\r\nimport _ from \"lodash\";\r\n\r\nconst Dashboard = ({ setAuth, name }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [levels, setLevels] = useState([]);\r\n  const [graphLabels, setGraphLabels] = useState([]);\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [allTimeLabels, setAllTimeLabels] = useState([]);\r\n  const [allTimeData, setAllTimeData] = useState([]);\r\n\r\n  //get id of stocktake if stocktake in progress\r\n  const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n\r\n  //if stock ID exists, set stocktake to true.\r\n  const Stocktake = () => {\r\n    if (stockId !== 0) {\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  //find levels with pars for product alerts components.\r\n  const getLevels = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/levels/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setLevels(parseRes);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  //get top selling products for chart (week)\r\n  const getTopSellers = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/topsellers/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setGraphLabels(\r\n        parseRes.map((product) => {\r\n          return product.product_name;\r\n        })\r\n      );\r\n      setGraphData(\r\n        parseRes.map((product) => {\r\n          return product.sales;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //get top selling products for chart (all time)\r\n  const getTopSellersAllTime = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/alltimetopsellers/`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setAllTimeData(\r\n        parseRes.map((product) => {\r\n          return product.product_name;\r\n        })\r\n      );\r\n      setAllTimeLabels(\r\n        parseRes.map((product) => {\r\n          return product.sum;\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //get userType for conditional render\r\n  const userType = localStorage.getItem(\"role\");\r\n\r\n  useEffect(() => {\r\n    getLevels();\r\n    getTopSellers();\r\n    Stocktake();\r\n    getTopSellersAllTime;\r\n  }, []);\r\n\r\n  return userType === \"User\" ? (\r\n    <Redirect to=\"/userdashboard\" />\r\n  ) : (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n              <h1 className=\"h2\">Welcome back, {name}!</h1>\r\n              <div className=\"btn-toolbar mb-2 mb-md-0\"></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                {_.isEmpty(graphLabels) || _.isEmpty(graphData) ? (\r\n                  <div>Loading</div>\r\n                ) : (\r\n                  <TopSellerChart\r\n                    weekData={graphData}\r\n                    weekLabels={graphLabels}\r\n                    allTimeData={allTimeData}\r\n                    allTimeLabels={allTimeLabels}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {_.isEmpty(levels) ? (\r\n                  <div>Loading...</div>\r\n                ) : (\r\n                  <ProductAlerts levels={levels} />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <StockRecords />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <DashBoardStocktaking stocktake={stocktake} />\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}