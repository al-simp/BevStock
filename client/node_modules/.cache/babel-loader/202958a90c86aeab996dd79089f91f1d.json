{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\TopSellerChart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TopSellerChart = ({\n  products,\n  currentStocktake,\n  prevStocktake,\n  setProducts\n}) => {\n  const [topSellers, setTopSellers] = useState([]);\n  const [data, setData] = useState();\n  const [labels, setLabels] = useState([]);\n\n  const getSales = async () => {\n    var promises = products.map(function (product) {\n      return getSalesData(product.product_id).then(function (results) {\n        product.rows = results;\n        return product;\n      });\n    });\n    Promise.all(promises).then(function (results) {\n      setProducts(results.sort((a, b) => {\n        if (Number(a.rows.sales) < Number(b.rows.sales)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }));\n      console.log(results);\n      setLabels(products.map(result => {\n        return result.rows.product_name;\n      }));\n      setData(products.map(result => {\n        return result.rows.sales;\n      }));\n    });\n  };\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      return parseRes;\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (products.length > 0) {\n      getSales();\n    }\n  }, [products]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Top Sellers\"), /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: labels,\n      datasets: [{\n        data: data\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: false,\n        position: \"left\",\n        text: \"Top Selling Products\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), console.log(products));\n};\n\nexport default TopSellerChart;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/TopSellerChart.js"],"names":["React","useEffect","useState","Bar","TopSellerChart","products","currentStocktake","prevStocktake","setProducts","topSellers","setTopSellers","data","setData","labels","setLabels","getSales","promises","map","product","getSalesData","product_id","then","results","rows","Promise","all","sort","a","b","Number","sales","console","log","result","product_name","body","response","fetch","method","headers","JSON","stringify","parseRes","json","error","message","length","datasets","legend","display","title","position","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst TopSellerChart = ({\r\n  products,\r\n  currentStocktake,\r\n  prevStocktake,\r\n  setProducts,\r\n}) => {\r\n  const [topSellers, setTopSellers] = useState([]);\r\n  const [data, setData] = useState();\r\n  const [labels, setLabels] = useState([]);\r\n\r\n  const getSales = async () => {\r\n    var promises = products.map(function (product) {\r\n      return getSalesData(product.product_id).then(function (results) {\r\n        product.rows = results;\r\n        return product;\r\n      });\r\n    });\r\n\r\n    Promise.all(promises).then(function (results) {\r\n      setProducts(\r\n        results.sort((a, b) => {\r\n          if (Number(a.rows.sales) < Number(b.rows.sales)) {\r\n            return 1;\r\n          } else {\r\n            return -1;\r\n          }\r\n        }));\r\n        console.log(results);\r\n      setLabels(\r\n        products.map((result) => {\r\n          return result.rows.product_name;\r\n        })\r\n      );\r\n      setData(\r\n        products.map((result) => {\r\n          return result.rows.sales;\r\n        })\r\n      );\r\n    });\r\n  };\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const parseRes = await response.json();\r\n      return parseRes;\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      getSales();\r\n    }\r\n  }, [products]);\r\n\r\n  return (\r\n    <div>\r\n      <h6>Top Sellers</h6>\r\n      <Bar\r\n        data={{\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              data: data,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            display: false,\r\n            position: \"left\",\r\n            text: \"Top Selling Products\",\r\n          },\r\n        }}\r\n      />\r\n      {console.log(products)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSellerChart;\r\n"]},"metadata":{},"sourceType":"module"}