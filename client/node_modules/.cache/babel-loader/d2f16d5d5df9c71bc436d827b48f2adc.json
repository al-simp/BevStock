{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import _ from\"lodash\";import{toast}from\"react-toastify\";var Login=function Login(_ref){var setAuth=_ref.setAuth;//key for pust notifications API\nvar publicVapidKey=\"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),inputs=_useState2[0],setInputs=_useState2[1];var email=inputs.email,password=inputs.password;var _onChange=function onChange(e){setInputs(_objectSpread(_objectSpread({},inputs),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmitform=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var body,response,parseRes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();_context.prev=1;body={email:email,password:password};_context.next=5;return fetch(\"/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 5:response=_context.sent;_context.next=8;return response.json();case 8:parseRes=_context.sent;if(!parseRes.token){_context.next=22;break;}localStorage.setItem(\"token\",parseRes.token);localStorage.setItem(\"role\",parseRes.role);localStorage.setItem(\"name\",parseRes.name);_context.next=15;return checkStocktake();case 15:_context.next=17;return findLastStocktake();case 17:if(!_.isEmpty(localStorage.getItem(\"stocktake\"))&&localStorage.getItem(\"role\")===\"Admin\"){sendPush();}else{getDuties();}setAuth(true);toast.success(\"Login successful!\");_context.next=24;break;case 22:setAuth(false);toast.error(parseRes);case 24:_context.next=29;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](1);console.error(_context.t0.message);case 29:case\"end\":return _context.stop();}}},_callee,null,[[1,26]]);}));return function onSubmitform(_x){return _ref2.apply(this,arguments);};}();function getDuties(){return _getDuties.apply(this,arguments);}//method to check if there are any active stocktakes within the database.\nfunction _getDuties(){_getDuties=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,parseRes;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"/dashboard/duties\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:parseRes=_context2.sent;if(parseRes.length>0){sendPush();}_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return _getDuties.apply(this,arguments);}function checkStocktake(){return _checkStocktake.apply(this,arguments);}//method to find last stocktake for inventory records\nfunction _checkStocktake(){_checkStocktake=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,parseRes;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"/stocktake/activestocktake\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:parseRes=_context3.sent;// if a record exists, set the data in local storage.\nif(parseRes.length>0){localStorage.setItem(\"stocktake\",parseRes[0].stocktake_id);localStorage.setItem(\"stocktakedate\",parseRes[0].stocktake_date);}else{}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0.message);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return _checkStocktake.apply(this,arguments);}function findLastStocktake(){return _findLastStocktake.apply(this,arguments);}// method to send push notification\nfunction _findLastStocktake(){_findLastStocktake=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response,parseRes;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"/inventory/latest\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:parseRes=_context4.sent;localStorage.setItem(\"laststocktake\",parseRes[0].stocktake_id);_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0.message);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return _findLastStocktake.apply(this,arguments);}var sendPush=function sendPush(){if(\"serviceWorker\"in navigator){send().catch(function(err){console.error(err);});}};//register sw, register push, send push\nfunction send(){return _send.apply(this,arguments);}function _send(){_send=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var register,subscription;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0://register service worker\nconsole.log(\"registering service worker...\");_context5.next=3;return navigator.serviceWorker.register(\"worker.js\",{scope:\"/\"});case 3:register=_context5.sent;console.log(\"Service Worker Registered.....\");//register push\nconsole.log(\"Registering push....\");_context5.next=8;return register.pushManager.subscribe({userVisibleOnly:true,applicationServerKey:urlBase64ToUint8Array(publicVapidKey)});case 8:subscription=_context5.sent;console.log(\"push registered..\");// Send push notification\nconsole.log(\"sending push\");_context5.next=13;return fetch(\"/subscribe/\".concat(localStorage.getItem(\"role\")),{method:\"POST\",body:JSON.stringify(subscription),headers:{\"content-type\":\"application/json\"}});case 13:console.log(\"push sent...\");case 14:case\"end\":return _context5.stop();}}},_callee5);}));return _send.apply(this,arguments);}function urlBase64ToUint8Array(base64String){var padding=\"=\".repeat((4-base64String.length%4)%4);var base64=(base64String+padding).replace(/-/g,\"+\").replace(/_/g,\"/\");var rawData=window.atob(base64);var outputArray=new Uint8Array(rawData.length);for(var i=0;i<rawData.length;++i){outputArray[i]=rawData.charCodeAt(i);}return outputArray;}return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"m-5\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"text-center my-5\"},\"Login\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmitform},/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",placeholder:\"email\",className:\"form-control my-3\",value:email,onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",placeholder:\"password\",className:\"form-control my-3\",onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-success btn-block\"},\"Submit\"))));};export default Login;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/Login.js"],"names":["React","Fragment","useState","_","toast","Login","setAuth","publicVapidKey","email","password","inputs","setInputs","onChange","e","target","name","value","onSubmitform","preventDefault","body","fetch","method","headers","JSON","stringify","response","json","parseRes","token","localStorage","setItem","role","checkStocktake","findLastStocktake","isEmpty","getItem","sendPush","getDuties","success","error","console","message","length","log","stocktake_id","stocktake_date","navigator","send","catch","err","serviceWorker","register","scope","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","base64String","padding","repeat","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  //key for pust notifications API\r\n  const publicVapidKey =\r\n    \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n\r\n      const response = await fetch(`/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        localStorage.setItem(\"role\", parseRes.role);\r\n        localStorage.setItem(\"name\", parseRes.name);\r\n        await checkStocktake();\r\n        await findLastStocktake();\r\n        if (\r\n          !_.isEmpty(localStorage.getItem(\"stocktake\")) &&\r\n          localStorage.getItem(\"role\") === \"Admin\"\r\n        ) {\r\n          sendPush();\r\n        } else {\r\n          getDuties();\r\n        }\r\n\r\n        setAuth(true);\r\n\r\n        toast.success(\"Login successful!\");\r\n      } else {\r\n        setAuth(false);\r\n\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  async function getDuties() {\r\n    try {\r\n      const response = await fetch(\"/dashboard/duties\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        sendPush();\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  //method to check if there are any active stocktakes within the database.\r\n  async function checkStocktake() {\r\n    try {\r\n      const response = await fetch(\r\n        \"/stocktake/activestocktake\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      // if a record exists, set the data in local storage.\r\n      if (parseRes.length > 0) {\r\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  //method to find last stocktake for inventory records\r\n  async function findLastStocktake() {\r\n    try {\r\n      const response = await fetch(\"/inventory/latest\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      localStorage.setItem(\"laststocktake\", parseRes[0].stocktake_id);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  // method to send push notification\r\n  const sendPush = () => {\r\n    if (\"serviceWorker\" in navigator) {\r\n      send().catch((err) => {\r\n        console.error(err);\r\n      });\r\n    }\r\n  };\r\n\r\n  //register sw, register push, send push\r\n  async function send() {\r\n    //register service worker\r\n    console.log(\"registering service worker...\");\r\n    const register = await navigator.serviceWorker.register(\"worker.js\", {\r\n      scope: \"/\",\r\n    });\r\n\r\n    console.log(\"Service Worker Registered.....\");\r\n\r\n    //register push\r\n    console.log(\"Registering push....\");\r\n\r\n    const subscription = await register.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n\r\n    console.log(\"push registered..\");\r\n\r\n    // Send push notification\r\n\r\n    console.log(\"sending push\");\r\n    await fetch(`/subscribe/${localStorage.getItem(\"role\")}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(subscription),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    console.log(\"push sent...\");\r\n  }\r\n\r\n  function urlBase64ToUint8Array(base64String) {\r\n    const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, \"+\")\r\n      .replace(/_/g, \"/\");\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"m-5\">\r\n        <h1 className=\"text-center my-5\">Login</h1>\r\n        <form onSubmit={onSubmitform}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            className=\"form-control my-3\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"form-control my-3\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <button className=\"btn btn-success btn-block\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}