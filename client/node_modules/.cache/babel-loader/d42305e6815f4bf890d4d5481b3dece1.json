{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\test2.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst Test2 = () => {\n  const [sales, setSales] = useState([]);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      sales.push(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getProducts = () => {\n    try {\n      fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        return data.forEach(product => {\n          getSalesData(product);\n        });\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"TEST2\", console.log(sales));\n};\n\nexport default Test2;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/test2.js"],"names":["React","useEffect","useState","Test2","sales","setSales","prevStocktake","localStorage","getItem","currentStocktake","getSalesData","product","body","response","fetch","method","headers","JSON","stringify","parseRes","json","push","error","console","message","getProducts","token","then","data","forEach","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMI,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAtB;AACA,QAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAzB;;AAEA,QAAME,YAAY,GAAG,MAAOC,OAAP,IAAmB;AACtC,QAAI;AACF,YAAMC,IAAI,GAAG;AAAEN,QAAAA,aAAF;AAAiBG,QAAAA,gBAAjB;AAAmCE,QAAAA;AAAnC,OAAb;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAF,EAA0C;AACpEC,QAAAA,MAAM,EAAE,MAD4D;AAEpEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF2D;AAGpEJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAH8D,OAA1C,CAA5B;AAKA,YAAMO,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACAhB,MAAAA,KAAK,CAACiB,IAAN,CAAWF,QAAX;AACD,KATD,CASE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACF,GAbD;;AAeA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAI;AACFX,MAAAA,KAAK,CAAC,6CAAD,EAAgD;AACnDC,QAAAA,MAAM,EAAE,KAD2C;AAEnDC,QAAAA,OAAO,EAAE;AAAEU,UAAAA,KAAK,EAAEnB,YAAY,CAACmB;AAAtB;AAF0C,OAAhD,CAAL,CAIGC,IAJH,CAISd,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,OANH,EAOGO,IAPH,CAOSC,IAAD,IAAU;AACd,eAAOA,IAAI,CAACC,OAAL,CAAclB,OAAD,IAAa;AAC/BD,UAAAA,YAAY,CAACC,OAAD,CAAZ;AACD,SAFM,CAAP;AAGD,OAXH;AAYD,KAbD,CAaE,OAAOW,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACF,GAjBD;;AAmBAvB,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,SAAS,EAAC,yCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEGF,OAAO,CAACO,GAAR,CAAY1B,KAAZ,CAFH,CADF;AAMD,CAjDD;;AAmDA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Test2 = () => {\r\n  const [sales, setSales] = useState([]);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const parseRes = await response.json();\r\n      sales.push(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const getProducts = () => {\r\n    try {\r\n      fetch(\"http://localhost:5000/products/get/distinct\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          return data.forEach((product) => {\r\n            getSalesData(product);\r\n          });\r\n        });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      TEST2\r\n      {console.log(sales)}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Test2;\r\n"]},"metadata":{},"sourceType":"module"}