{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\StocktakeLists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\"; //components\n\nimport ShowLists from \"./ShowLists\";\n\nconst StocktakeLists = ({\n  setAuth\n}) => {\n  const [stocktake, setStocktake] = useState(false);\n  const [allLists, setLists] = useState([]);\n  const [listsChange, setListsChange] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [allCounted, setAllCounted] = useState(false);\n  const dateString = Date().toString();\n  const stocktake_id = localStorage.getItem(\"stocktake\");\n\n  const checkStocktake = () => {\n    if (stocktake_id !== null) {\n      console.log(\"stocktake in progress\");\n      setStocktake(true);\n    }\n  };\n\n  const getProducts = async id => {\n    try {\n      const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const productsResult = await productsResponse.json();\n      console.log(productsResult);\n      setProducts(productsResult.rows);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createRecord = id => {\n    try {\n      const stockId = localStorage.getItem(\"stocktake\");\n      const body = {\n        id,\n        stockId\n      };\n      console.log(JSON.stringify(body));\n      const response = fetch(\"http://localhost:5000/stocktake/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const newStocktake = async () => {\n    if (!stocktake && stocktake_id === null) {\n      console.log(\"hello\");\n\n      try {\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\n          method: \"POST\",\n          headers: {\n            token: localStorage.token\n          }\n        });\n        const result = await response.json();\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\n        console.log(products);\n        products.forEach(product => {\n          createRecord(product.product_stocklist_id);\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      setStocktake(true);\n    }\n  };\n\n  const getLists = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await response.json();\n      setLists(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const checkAllCounted = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stocklists/inprogress\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await response.json();\n\n      if (parseData.length > 0) {\n        setAllCounted(false);\n      } else {\n        setAllCounted(true);\n      }\n    } catch (error) {}\n  };\n\n  const endStocktake = e => {\n    if (allCounted) {\n      e.preventDefault();\n      setStocktakeInactive();\n      localStorage.removeItem(\"stocktake\");\n      localStorage.removeItem(\"stocktakedate\");\n      setStocktake(false);\n      toast.success(\"Stocktake ended\");\n    } else {\n      toast.warning(\"Not all counts have been completed\");\n    }\n  };\n\n  const setStocktakeInactive = async () => {\n    try {\n      const body = {\n        stocktake_id\n      };\n      const response = await fetch(\"http://localhost:5000/stocktake/inactive\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setAuth(false);\n    toast.success(\"Logged out succsessfully!\");\n  };\n\n  useEffect(() => {\n    getProducts();\n    checkStocktake();\n    getLists();\n    setListsChange(false);\n\n    if (products.length > 0) {\n      console.log(products);\n    }\n  }, [listsChange]);\n  return !stocktake_id ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: e => logout(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Create a new stocktaking record for \", dateString, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: newStocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Start Stocktake\")))) : /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger float-right\",\n    onClick: e => endStocktake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"End Stocktake\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Stocktake in progress : \", localStorage.getItem(\"stocktakedate\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowLists, {\n    allLists: allLists,\n    setListsChange: setListsChange,\n    stocktake: stocktake,\n    stocktake_id: stocktake_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StocktakeLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/StocktakeLists.js"],"names":["React","useState","useEffect","toast","ShowLists","StocktakeLists","setAuth","stocktake","setStocktake","allLists","setLists","listsChange","setListsChange","products","setProducts","allCounted","setAllCounted","dateString","Date","toString","stocktake_id","localStorage","getItem","checkStocktake","console","log","getProducts","id","productsResponse","fetch","method","headers","token","productsResult","json","rows","error","message","createRecord","stockId","body","JSON","stringify","response","newStocktake","result","setItem","stocktake_date","forEach","product","product_stocklist_id","err","getLists","parseData","checkAllCounted","length","endStocktake","e","preventDefault","setStocktakeInactive","removeItem","success","warning","parseRes","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [allCounted, setAllCounted] = useState(false);\r\n\r\n  const dateString = Date().toString();\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      console.log(\"stocktake in progress\");\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const productsResult = await productsResponse.json();\r\n      console.log(productsResult);\r\n      setProducts(productsResult.rows);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const createRecord = (id) => {\r\n    try {\r\n      const stockId = localStorage.getItem(\"stocktake\");\r\n      const body = { id, stockId };\r\n\r\n      console.log(JSON.stringify(body));\r\n\r\n      const response = fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const newStocktake = async () => {\r\n    if (!stocktake && stocktake_id === null) {\r\n      console.log(\"hello\");\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        console.log(products);\r\n        products.forEach((product) => {\r\n          createRecord(product.product_stocklist_id);\r\n        });\r\n\r\n    \r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const checkAllCounted = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/inprogress\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n\r\n      if (parseData.length > 0) {\r\n        setAllCounted(false);\r\n      } else {\r\n        setAllCounted(true);\r\n      }\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  const endStocktake = (e) => {\r\n    if (allCounted) {\r\n    e.preventDefault();\r\n    setStocktakeInactive();\r\n    localStorage.removeItem(\"stocktake\");\r\n    localStorage.removeItem(\"stocktakedate\");\r\n    setStocktake(false);\r\n    toast.success(\"Stocktake ended\");\r\n    } else {\r\n      toast.warning(\"Not all counts have been completed\")\r\n    }\r\n  };\r\n\r\n  const setStocktakeInactive = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const response = await fetch(\"http://localhost:5000/stocktake/inactive\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      })\r\n      const parseRes = await response.json();\r\n    } catch (error) {\r\n      console.error(error.message)\r\n    }\r\n  }\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    checkStocktake();\r\n    getLists();\r\n    setListsChange(false);\r\n    if (products.length > 0) {\r\n      console.log(products);\r\n    }\r\n  }, [listsChange]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={newStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>\r\n            Stocktake in progress : {localStorage.getItem(\"stocktakedate\")}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n          stocktake_id={stocktake_id}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n"]},"metadata":{},"sourceType":"module"}