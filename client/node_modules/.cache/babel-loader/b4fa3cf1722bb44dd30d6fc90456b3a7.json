{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Fragment, useState } from \"react\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nconst Login = ({\n  setAuth\n}) => {\n  //key for pust notifications API\n  const publicVapidKey = \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = inputs;\n\n  const onChange = e => {\n    setInputs({ ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitform = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        email,\n        password\n      };\n      const response = await fetch(`https://192.168.0.15:5000/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n\n      if (parseRes.token) {\n        localStorage.setItem(\"token\", parseRes.token);\n        localStorage.setItem(\"role\", parseRes.role);\n        localStorage.setItem(\"name\", parseRes.name);\n        await checkStocktake();\n        await findLastStocktake();\n\n        if (!_.isEmpty(localStorage.getItem(\"stocktake\")) && localStorage.getItem(\"role\") === \"Admin\") {\n          sendPush();\n        } else {\n          getDuties();\n        }\n\n        setAuth(true);\n        toast.success(\"Login successful!\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  async function getDuties() {\n    try {\n      const response = await fetch(\"https://192.168.0.15:5000/dashboard/duties\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n\n      if (parseRes.length > 0) {\n        sendPush();\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n  } //method to check if there are any active stocktakes within the database.\n\n\n  async function checkStocktake() {\n    try {\n      const response = await fetch(\"https://192.168.0.15:5000/stocktake/activestocktake\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json(); // if a record exists, set the data in local storage.\n\n      if (parseRes.length > 0) {\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\n      } else {}\n    } catch (error) {\n      console.error(error.message);\n    }\n  } //method to find last stocktake for inventory records\n\n\n  async function findLastStocktake() {\n    try {\n      const response = await fetch(\"https://192.168.0.15:5000/inventory/latest\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      localStorage.setItem(\"laststocktake\", parseRes[0].stocktake_id);\n    } catch (error) {\n      console.error(error.message);\n    }\n  } // method to send push notification\n\n\n  const sendPush = () => {\n    if (\"serviceWorker\" in navigator) {\n      send().catch(err => {\n        console.error(err);\n      });\n    }\n  }; //register sw, register push, send push\n\n\n  async function send() {\n    //register service worker\n    console.log(\"registering service worker...\");\n    const register = await navigator.serviceWorker.register(\"worker.js\", {\n      scope: \"/\"\n    });\n    console.log(\"Service Worker Registered.....\"); //register push\n\n    console.log(\"Registering push....\");\n    const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    });\n    console.log(\"push registered..\"); // Send push notification\n\n    console.log(\"sending push\");\n    await fetch(`https://192.168.0.15:5000/subscribe/${localStorage.getItem(\"role\")}`, {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    console.log(\"push sent...\");\n  }\n\n  function urlBase64ToUint8Array(base64String) {\n    const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center my-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    className: \"form-control my-3\",\n    value: email,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    className: \"form-control my-3\",\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/Login.js"],"names":["React","Fragment","useState","_","toast","Login","setAuth","publicVapidKey","inputs","setInputs","email","password","onChange","e","target","name","value","onSubmitform","preventDefault","body","response","fetch","method","headers","JSON","stringify","parseRes","json","token","localStorage","setItem","role","checkStocktake","findLastStocktake","isEmpty","getItem","sendPush","getDuties","success","error","err","console","message","length","log","stocktake_id","stocktake_date","navigator","send","catch","register","serviceWorker","scope","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","base64String","padding","repeat","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Login = ({ setAuth }) => {\r\n  //key for pust notifications API\r\n  const publicVapidKey =\r\n    \"BKsYaIk2PtD5vOgyAPKMdbAZjRxO_Ob6uh9pexmSN0B47Ju4R1zW1rJuWhTlTd0A6w8visaRHoznpODDxSInlw0\";\r\n  const [inputs, setInputs] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = inputs;\r\n\r\n  const onChange = (e) => {\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmitform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { email, password };\r\n\r\n      const response = await fetch(`https://192.168.0.15:5000/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.token) {\r\n        localStorage.setItem(\"token\", parseRes.token);\r\n        localStorage.setItem(\"role\", parseRes.role);\r\n        localStorage.setItem(\"name\", parseRes.name);\r\n        await checkStocktake();\r\n        await findLastStocktake();\r\n        if (\r\n          !_.isEmpty(localStorage.getItem(\"stocktake\")) &&\r\n          localStorage.getItem(\"role\") === \"Admin\"\r\n        ) {\r\n          sendPush();\r\n        } else {\r\n          getDuties();\r\n        }\r\n\r\n        setAuth(true);\r\n\r\n        toast.success(\"Login successful!\");\r\n      } else {\r\n        setAuth(false);\r\n\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  async function getDuties() {\r\n    try {\r\n      const response = await fetch(\"https://192.168.0.15:5000/dashboard/duties\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.length > 0) {\r\n        sendPush();\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  }\r\n\r\n  //method to check if there are any active stocktakes within the database.\r\n  async function checkStocktake() {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://192.168.0.15:5000/stocktake/activestocktake\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      // if a record exists, set the data in local storage.\r\n      if (parseRes.length > 0) {\r\n        localStorage.setItem(\"stocktake\", parseRes[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", parseRes[0].stocktake_date);\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  //method to find last stocktake for inventory records\r\n  async function findLastStocktake() {\r\n    try {\r\n      const response = await fetch(\"https://192.168.0.15:5000/inventory/latest\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      localStorage.setItem(\"laststocktake\", parseRes[0].stocktake_id);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  // method to send push notification\r\n  const sendPush = () => {\r\n    if (\"serviceWorker\" in navigator) {\r\n      send().catch((err) => {\r\n        console.error(err);\r\n      });\r\n    }\r\n  };\r\n\r\n  //register sw, register push, send push\r\n  async function send() {\r\n    //register service worker\r\n    console.log(\"registering service worker...\");\r\n    const register = await navigator.serviceWorker.register(\"worker.js\", {\r\n      scope: \"/\",\r\n    });\r\n\r\n    console.log(\"Service Worker Registered.....\");\r\n\r\n    //register push\r\n    console.log(\"Registering push....\");\r\n\r\n    const subscription = await register.pushManager.subscribe({\r\n      userVisibleOnly: true,\r\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n    });\r\n\r\n    console.log(\"push registered..\");\r\n\r\n    // Send push notification\r\n\r\n    console.log(\"sending push\");\r\n    await fetch(`https://192.168.0.15:5000/subscribe/${localStorage.getItem(\"role\")}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(subscription),\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    });\r\n    console.log(\"push sent...\");\r\n  }\r\n\r\n  function urlBase64ToUint8Array(base64String) {\r\n    const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/-/g, \"+\")\r\n      .replace(/_/g, \"/\");\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"m-5\">\r\n        <h1 className=\"text-center my-5\">Login</h1>\r\n        <form onSubmit={onSubmitform}>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            className=\"form-control my-3\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"password\"\r\n            className=\"form-control my-3\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <button className=\"btn btn-success btn-block\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}