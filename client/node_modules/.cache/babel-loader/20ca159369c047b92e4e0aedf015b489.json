{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\ProcessDelivery.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst ProcessDelivery = () => {\n  //declare products as an empty array\n  const [products, setProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [quantities, setQuantities] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false); //boolean to indicate whether there has been a change in the products array\n\n  const [productsChange, setProductsChange] = useState(false);\n\n  const addNewStock = async (event, product) => {\n    event.preventDefault();\n    const item = product.product_id;\n    const quantityInput = document.getElementById(product.product_id);\n    const tempQuantity = quantityInput.value;\n    const stocktake = localStorage.getItem(\"stocktake\");\n  }; //get the products and populate products array.\n\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json(); //use set\n\n      setProducts(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const filteredProducts = products.filter(item => {\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\n  });\n  useEffect(() => {\n    getProducts();\n  }, [productsChange]);\n  return !isProcessing ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Process a new delivery for \", dateString, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: e => {\n      setIsProcessing(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Start Stocktake\")))) : /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Process Delivery\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Quantity\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, filteredProducts.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, product.product_size), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, product.product_category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      addNewStock(e, product);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: `${product.product_id}`,\n    className: \"form-control\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, \"Add\"))))))));\n};\n\nexport default ProcessDelivery;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/ProcessDelivery.js"],"names":["React","useEffect","useState","_","ProcessDelivery","products","setProducts","search","setSearch","quantities","setQuantities","isProcessing","setIsProcessing","productsChange","setProductsChange","addNewStock","event","product","preventDefault","item","product_id","quantityInput","document","getElementById","tempQuantity","value","stocktake","localStorage","getItem","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","filteredProducts","filter","product_name","toLowerCase","includes","dateString","e","target","map","product_size","product_category"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst ProcessDelivery = () => {\r\n  //declare products as an empty array\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [quantities, setQuantities] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  //boolean to indicate whether there has been a change in the products array\r\n  const [productsChange, setProductsChange] = useState(false);\r\n\r\n  const addNewStock = async (event, product) => {\r\n    event.preventDefault();\r\n    const item = product.product_id;\r\n    const quantityInput = document.getElementById(product.product_id);\r\n    const tempQuantity = quantityInput.value;\r\n    const stocktake = localStorage.getItem(\"stocktake\");\r\n  };\r\n\r\n  //get the products and populate products array.\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/products/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const parseRes = await response.json();\r\n      //use set\r\n      setProducts(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const filteredProducts = products.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [productsChange]);\r\n\r\n  return !isProcessing ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Process a new delivery for {dateString}?</h4>\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={(e) => {\r\n              setIsProcessing(true);\r\n            }}\r\n          >\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <h1>Process Delivery</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <th>Product</th>\r\n          <th>Size</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </thead>\r\n        <tbody>\r\n          {filteredProducts.map((product) => (\r\n            <tr key={product.product_id}>\r\n              <td>{product.product_name}</td>\r\n              <td>{product.product_size}</td>\r\n              <td>{product.product_category}</td>\r\n\r\n              <td>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    addNewStock(e, product);\r\n                  }}\r\n                >\r\n                  <input\r\n                    id={`${product.product_id}`}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                  ></input>\r\n                  <button className=\"btn btn-success\">Add</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProcessDelivery;\r\n"]},"metadata":{},"sourceType":"module"}