{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\ProcessDelivery.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\nconst ProcessDelivery = () => {\n  //declare products as an empty array\n  const [products, setProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [quantities, setQuantities] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const dateString = Date().toString(); //boolean to indicate whether there has been a change in the products array\n\n  const [productsChange, setProductsChange] = useState(false);\n  const stocktake = localStorage.getItem(\"laststocktake\");\n\n  const addNewStock = async (event, product) => {\n    event.preventDefault();\n    const item = product.product_stocklist_id;\n    const quantityInput = document.getElementById(product.product_stocklist_id);\n    const tempQuantity = quantityInput.value;\n    console.log(item, tempQuantity);\n\n    try {\n      const body = {\n        item,\n        stocktake,\n        tempQuantity\n      };\n      console.log(body);\n      const response = await fetch(\"/stocktake/count\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      await response.json();\n      toast.success(\"Added Succesfully\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  }; //get the products that are under the new stock list\n\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(`/stocktake/processdelivery/${localStorage.getItem(\"laststocktake\")}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      console.log(\"hello\");\n      setProducts(parseRes);\n    } catch (error) {}\n  };\n\n  const filteredProducts = products.filter(item => {\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\n  });\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Process Delivery\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Quantity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, filteredProducts.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, product.product_size), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, product.product_category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => {\n      addNewStock(e, product);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: `${product.product_stocklist_id}`,\n    className: \"form-control\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, \"Add\"))))))));\n};\n\nexport default ProcessDelivery;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/ProcessDelivery.js"],"names":["React","useEffect","useState","_","toast","ProcessDelivery","products","setProducts","search","setSearch","quantities","setQuantities","isProcessing","setIsProcessing","dateString","Date","toString","productsChange","setProductsChange","stocktake","localStorage","getItem","addNewStock","event","product","preventDefault","item","product_stocklist_id","quantityInput","document","getElementById","tempQuantity","value","console","log","body","response","fetch","method","headers","JSON","stringify","json","success","error","message","getProducts","token","parseRes","filteredProducts","filter","product_name","toLowerCase","includes","e","target","map","product_size","product_category"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProcessDelivery = () => {\r\n  //declare products as an empty array\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [quantities, setQuantities] = useState([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const dateString = Date().toString();\r\n  //boolean to indicate whether there has been a change in the products array\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const stocktake = localStorage.getItem(\"laststocktake\");\r\n\r\n  const addNewStock = async (event, product) => {\r\n    event.preventDefault();\r\n    const item = product.product_stocklist_id;\r\n    const quantityInput = document.getElementById(product.product_stocklist_id);\r\n    const tempQuantity = quantityInput.value;\r\n    console.log(item, tempQuantity);\r\n    try {\r\n        const body = { item, stocktake, tempQuantity };\r\n        console.log(body);\r\n        const response = await fetch(\"/stocktake/count\", {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        });\r\n  \r\n        await response.json();\r\n        toast.success(\"Added Succesfully\");\r\n  \r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n\r\n\r\n\r\n  //get the products that are under the new stock list\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `/stocktake/processdelivery/${localStorage.getItem(\r\n          \"laststocktake\"\r\n        )}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      console.log(\"hello\");\r\n      setProducts(parseRes);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const filteredProducts = products.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <h1>Process Delivery</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"col-2\"></div>\r\n      </div>\r\n      <table className=\"table table-striped table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Size</th>\r\n            <th>Category</th>\r\n            <th>Quantity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredProducts.map((product) => (\r\n            <tr key={product.product_stocklist_id}>\r\n              <td>{product.product_name}</td>\r\n              <td>{product.product_size}</td>\r\n              <td>{product.product_category}</td>\r\n\r\n              <td>\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    addNewStock(e, product);\r\n                  }}\r\n                >\r\n                  <input\r\n                    id={`${product.product_stocklist_id}`}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                  ></input>\r\n                  <button className=\"btn btn-success\">Add</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProcessDelivery;\r\n"]},"metadata":{},"sourceType":"module"}