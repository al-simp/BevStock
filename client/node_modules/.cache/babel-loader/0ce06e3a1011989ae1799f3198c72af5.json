{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\Bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\Bottle.js\";\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Bottle = props => {\n  const [bottle, setBottle] = useState([]);\n  const {\n    result,\n    hasScanned,\n    hasResult,\n    setPairBool\n  } = props;\n\n  const getBottle = async () => {\n    if (result !== null && !hasResult && !hasScanned) {\n      setPairBool(\"hasScanned\", true);\n\n      try {\n        const response = await fetch(`http://localhost:5000/products/${result}`, {\n          method: \"GET\",\n          headers: {\n            token: localStorage.token\n          }\n        });\n        const parseData = await response.json();\n        console.log(parseData.length);\n\n        if (parseData.length < 0) {\n          setBottle(parseData);\n        }\n\n        setPairBool(\"hasResult\", true);\n        console.log(parseData);\n      } catch (err) {\n        console.error(err.message);\n        setPairBool(\"hasScanned\", false);\n      }\n    } else {\n      console.log(\"result not defined\");\n    }\n  };\n\n  useEffect(() => {\n    if (!hasResult) {\n      getBottle();\n    }\n  }, [result]);\n\n  if (bottle.length < 0) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, bottle);\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    }, \"No bottle found\");\n  }\n};\n\nexport default Bottle;","map":{"version":3,"sources":["C:/Users/alans/Bevstock/client/src/components/stocktaking/Bottle.js"],"names":["React","useEffect","useState","_","Bottle","props","bottle","setBottle","result","hasScanned","hasResult","setPairBool","getBottle","response","fetch","method","headers","token","localStorage","parseData","json","console","log","length","err","error","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA;AAAjC,MAAiDN,KAAvD;;AAGA,QAAMO,SAAS,GAAG,YAAY;AAE5B,QAAIJ,MAAM,KAAK,IAAX,IAAmB,CAACE,SAApB,IAAiC,CAACD,UAAtC,EAAkD;AAC9CE,MAAAA,WAAW,CAAC,YAAD,EAAe,IAAf,CAAX;;AACF,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,kCAAiCN,MAAO,EADf,EAE1B;AACEO,UAAAA,MAAM,EAAE,KADV;AAEEC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAFX,SAF0B,CAA5B;AAQA,cAAME,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,MAAtB;;AACA,YAAIJ,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;AAC1BhB,UAAAA,SAAS,CAACY,SAAD,CAAT;AACC;;AACDR,QAAAA,WAAW,CAAC,WAAD,EAAc,IAAd,CAAX;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,OAhBD,CAgBE,OAAOK,GAAP,EAAY;AACZH,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACAf,QAAAA,WAAW,CAAC,YAAD,EAAe,KAAf,CAAX;AACD;AACF,KAtBD,MAsBO;AACLU,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,GA3BD;;AA6BArB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,SAAL,EAAgB;AAClBE,MAAAA,SAAS;AACN;AACJ,GAJQ,EAIN,CAACJ,MAAD,CAJM,CAAT;;AAMA,MAAIF,MAAM,CAACiB,MAAP,GAAgB,CAApB,EAAuB;AAEvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjB,MAAL,CAAP;AAEC,GAJD,MAIO;AAEL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAED;AACF,CAlDD;;AAoDA,eAAeF,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Bottle = (props) => {\r\n  const [bottle, setBottle] = useState([]);\r\n\r\n  const { result, hasScanned, hasResult, setPairBool } = props;\r\n  \r\n\r\n  const getBottle = async () => {\r\n    \r\n    if (result !== null && !hasResult && !hasScanned) {\r\n        setPairBool(\"hasScanned\", true);\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/products/${result}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { token: localStorage.token },\r\n          }\r\n        );\r\n\r\n        const parseData = await response.json();\r\n        console.log(parseData.length);\r\n        if (parseData.length < 0) {\r\n        setBottle(parseData);\r\n        }\r\n        setPairBool(\"hasResult\", true);\r\n        console.log(parseData);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setPairBool(\"hasScanned\", false);\r\n      }\r\n    } else {\r\n      console.log(\"result not defined\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n      if (!hasResult) {\r\n    getBottle();\r\n      }\r\n  }, [result]);\r\n\r\n  if (bottle.length < 0) {\r\n\r\n  return <h1>{bottle}</h1>;\r\n\r\n  } else { \r\n\r\n    return <h1>No bottle found</h1>\r\n\r\n  }\r\n};\r\n\r\nexport default Bottle;\r\n"]},"metadata":{},"sourceType":"module"}