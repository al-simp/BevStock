{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\PredictedOrderModal.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport PDFPredictedOrder from \"./PDFPredictedOrder\";\nimport _ from \"lodash\";\n\nconst PredictedOrderModal = ({\n  levels\n}) => {\n  const filteredItems = levels.filter(function (el) {\n    return el.sum - el.avg_weekly_sales < 0;\n  });\n  const predictedOrder = filteredItems.map(item => {\n    return {\n      name: item.product_name,\n      size: item.product_size,\n      category: item.product_category,\n      quantity: Math.abs(Number(item.sum - item.avg_weekly_sales)) + item.avg_weekly_sales\n    };\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-sm float-right mb-2\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#predictedOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"View Predicted Order\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    id: \"predictedOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Predicted Order\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, \"Quantity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, predictedOrder.map(item => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, item.size), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, item.category), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, item.quantity));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, _.isEmpty(predictedOrder) ? null : /*#__PURE__*/React.createElement(PDFPredictedOrder, {\n    levels: predictedOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Close\"))))));\n};\n\nexport default PredictedOrderModal;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/PredictedOrderModal.js"],"names":["React","Fragment","useState","useEffect","PDFPredictedOrder","_","PredictedOrderModal","levels","filteredItems","filter","el","sum","avg_weekly_sales","predictedOrder","map","item","name","product_name","size","product_size","category","product_category","quantity","Math","abs","Number","isEmpty"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PDFPredictedOrder from \"./PDFPredictedOrder\";\r\nimport _ from \"lodash\";\r\n\r\nconst PredictedOrderModal = ({ levels }) => {\r\n  const filteredItems = levels.filter(function (el) {\r\n    return el.sum - el.avg_weekly_sales < 0;\r\n  });\r\n\r\n  const predictedOrder = filteredItems.map((item) => {\r\n    return {\r\n      name: item.product_name,\r\n      size: item.product_size,\r\n      category: item.product_category,\r\n      quantity:\r\n        Math.abs(Number(item.sum - item.avg_weekly_sales)) +\r\n        item.avg_weekly_sales,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary btn-sm float-right mb-2\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#predictedOrder\"\r\n      >\r\n        View Predicted Order\r\n      </button>\r\n\r\n      <div className=\"modal\" id=\"predictedOrder\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Predicted Order</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Size</th>\r\n                  <th>Category</th>\r\n                  <th>Quantity</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {predictedOrder.map((item) => {\r\n                  return (\r\n                    <tr key={item.name}>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.size}</td>\r\n                      <td>{item.category}</td>\r\n                      <td>{item.quantity}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div className=\"modal-footer\">\r\n              {_.isEmpty(predictedOrder) ? null : (\r\n                <PDFPredictedOrder levels={predictedOrder} />\r\n              )}\r\n              <button className=\"btn btn-success\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PredictedOrderModal;\r\n"]},"metadata":{},"sourceType":"module"}