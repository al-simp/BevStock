{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\ViewEdit.js\";\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport Product from \"./Product\";\nimport \"../../../src/App.css\";\nimport { toast } from \"react-toastify\";\n\nconst ViewEdit = props => {\n  const [name, setName] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productsChange, setProductsChange] = useState(false);\n  const [stocktake, setStocktake] = useState(false);\n  const stockId = Number(localStorage.getItem(\"stocktake\"));\n\n  const checkStocktake = () => {\n    if (stockId !== null) {\n      console.log(\"stocktake in progress\");\n      setStocktake(true);\n    }\n  };\n\n  const id = props.match.params.id;\n\n  const handleDragStart = (e, params) => {\n    console.log(\"drag start\", params);\n    dragItem.current = params;\n    dragNode.current = e.target;\n    setOriginalIndex(params);\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, params) => {\n    const currentItem = dragItem.current;\n\n    if (originalIndex.productI !== params.productI) {\n      console.log(\"Target is not the same\");\n      setProducts(oldProducts => {\n        let newList = JSON.parse(JSON.stringify(oldProducts));\n        newList.splice(params.productI, 0, newList.splice(currentItem.productI, 1)[0]);\n        dragItem.current = params;\n        return newList;\n      });\n      products.map((product, productI) => {\n        console.log(product.product_stocklist_id, productI);\n      });\n    }\n  };\n\n  const handleDragEnd = () => {\n    console.log(\"Ending Drag\");\n    setDragging(false);\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  };\n\n  async function setPosition(id, productI) {\n    try {\n      const body = {\n        id,\n        productI\n      };\n      const response = await fetch(`http://localhost:5000/stocklists/savepositions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json;\n    } catch (error) {}\n  }\n\n  async function setPositions() {\n    products.map((product, productI) => {\n      setPosition(product.product_stocklist_id, productI);\n    });\n    toast.success(\"Updated succesfully\");\n  }\n\n  const getStyles = params => {\n    const currentItem = dragItem.current;\n\n    if (currentItem.productI === params) {\n      return \"current dnd-item\";\n    }\n\n    return \"dnd-item\";\n  }; //get list name\n\n\n  const getName = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/get/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setName(parseRes.rows[0].stocklist_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //get products on list\n\n\n  const getProducts = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/list/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //delete a product from list\n\n\n  const deleteProduct = async id => {\n    try {\n      await fetch(`http://localhost:5000/stocklists/deleteproduct/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    setProductsChange(true);\n  };\n\n  useEffect(() => {\n    checkStocktake();\n    getName(id);\n    getProducts(id);\n    setProductsChange(false);\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saveButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setPositions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Save List Positions\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    listId: id,\n    setProductsChange: setProductsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, products.map((product, productI) => /*#__PURE__*/React.createElement(Product, {\n    key: product.product_stocklist_id,\n    name: product.product_name,\n    id: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default ViewEdit;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/ViewEdit.js"],"names":["React","Fragment","useState","useEffect","useRef","Dropdown","Product","toast","ViewEdit","props","name","setName","products","setProducts","productsChange","setProductsChange","stocktake","setStocktake","stockId","Number","localStorage","getItem","checkStocktake","console","log","id","match","params","handleDragStart","e","dragItem","current","dragNode","target","setOriginalIndex","addEventListener","handleDragEnd","setTimeout","setDragging","handleDragEnter","currentItem","originalIndex","productI","oldProducts","newList","JSON","parse","stringify","splice","map","product","product_stocklist_id","removeEventListener","setPosition","body","response","fetch","method","headers","parseRes","json","error","setPositions","success","getStyles","getName","token","rows","stocklist_name","err","message","getProducts","deleteProduct","product_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,MAA/C,QAA6D,OAA7D;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,sBAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMgB,OAAO,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAD,CAAtB;;AAEA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIJ,OAAO,KAAK,IAAhB,EAAsB;AACpBK,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAP,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GALD;;AAOA,QAAMQ,EAAE,GAAGhB,KAAK,CAACiB,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;;AAEA,QAAMG,eAAe,GAAG,CAACC,CAAD,EAAIF,MAAJ,KAAe;AACrCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BG,MAA1B;AACAG,IAAAA,QAAQ,CAACC,OAAT,GAAmBJ,MAAnB;AACAK,IAAAA,QAAQ,CAACD,OAAT,GAAmBF,CAAC,CAACI,MAArB;AACAC,IAAAA,gBAAgB,CAACP,MAAD,CAAhB;AACAK,IAAAA,QAAQ,CAACD,OAAT,CAAiBI,gBAAjB,CAAkC,SAAlC,EAA6CC,aAA7C;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GATD;;AAWA,QAAMC,eAAe,GAAG,CAACV,CAAD,EAAIF,MAAJ,KAAe;AACrC,UAAMa,WAAW,GAAGV,QAAQ,CAACC,OAA7B;;AACA,QAAIU,aAAa,CAACC,QAAd,KAA2Bf,MAAM,CAACe,QAAtC,EAAgD;AAC9CnB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAX,MAAAA,WAAW,CAAE8B,WAAD,IAAiB;AAC3B,YAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,WAAf,CAAX,CAAd;AACAC,QAAAA,OAAO,CAACI,MAAR,CACErB,MAAM,CAACe,QADT,EAEE,CAFF,EAGEE,OAAO,CAACI,MAAR,CAAeR,WAAW,CAACE,QAA3B,EAAqC,CAArC,EAAwC,CAAxC,CAHF;AAKAZ,QAAAA,QAAQ,CAACC,OAAT,GAAmBJ,MAAnB;AACA,eAAOiB,OAAP;AACD,OATU,CAAX;AAUAhC,MAAAA,QAAQ,CAACqC,GAAT,CAAa,CAACC,OAAD,EAAUR,QAAV,KAAuB;AAClCnB,QAAAA,OAAO,CAACC,GAAR,CAAY0B,OAAO,CAACC,oBAApB,EAA0CT,QAA1C;AACD,OAFD;AAGD;AACF,GAlBD;;AAoBA,QAAMN,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAc,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAN,IAAAA,QAAQ,CAACD,OAAT,CAAiBqB,mBAAjB,CAAqC,SAArC,EAAgDhB,aAAhD;AACAN,IAAAA,QAAQ,CAACC,OAAT,GAAmB,IAAnB;AACAC,IAAAA,QAAQ,CAACD,OAAT,GAAmB,IAAnB;AACD,GAND;;AAQA,iBAAesB,WAAf,CAA2B5B,EAA3B,EAA+BiB,QAA/B,EAAyC;AACvC,QAAI;AACF,YAAMY,IAAI,GAAG;AAAE7B,QAAAA,EAAF;AAAMiB,QAAAA;AAAN,OAAb;AACA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CACzB,gDADyB,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEJ,QAAAA,IAAI,EAAET,IAAI,CAACE,SAAL,CAAeO,IAAf;AAHR,OAF0B,CAA5B;AAQA,YAAMK,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAhC;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc,CAAE;AACnB;;AAED,iBAAeC,YAAf,GAA8B;AAC5BlD,IAAAA,QAAQ,CAACqC,GAAT,CAAa,CAACC,OAAD,EAAUR,QAAV,KAAuB;AAClCW,MAAAA,WAAW,CAACH,OAAO,CAACC,oBAAT,EAA+BT,QAA/B,CAAX;AACD,KAFD;AAGAnC,IAAAA,KAAK,CAACwD,OAAN,CAAc,qBAAd;AACD;;AAED,QAAMC,SAAS,GAAIrC,MAAD,IAAY;AAC5B,UAAMa,WAAW,GAAGV,QAAQ,CAACC,OAA7B;;AACA,QAAIS,WAAW,CAACE,QAAZ,KAAyBf,MAA7B,EAAqC;AACnC,aAAO,kBAAP;AACD;;AACD,WAAO,UAAP;AACD,GAND,CA9E0B,CAsF1B;;;AACA,QAAMsC,OAAO,GAAG,MAAOxC,EAAP,IAAc;AAC5B,QAAI;AACF,YAAM8B,QAAQ,GAAG,MAAMC,KAAK,CACzB,wCAAuC/B,EAAG,EADjB,EAE1B;AACEgC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAE9C,YAAY,CAAC8C;AAAtB;AAFX,OAF0B,CAA5B;AAQA,YAAMP,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AAEAjD,MAAAA,OAAO,CAACgD,QAAQ,CAACQ,IAAT,CAAc,CAAd,EAAiBC,cAAlB,CAAP;AACD,KAZD,CAYE,OAAOC,GAAP,EAAY;AACZ9C,MAAAA,OAAO,CAACsC,KAAR,CAAcQ,GAAG,CAACC,OAAlB;AACD;AACF,GAhBD,CAvF0B,CAyG1B;;;AACA,QAAMC,WAAW,GAAG,MAAO9C,EAAP,IAAc;AAChC,QAAI;AACF,YAAM8B,QAAQ,GAAG,MAAMC,KAAK,CACzB,yCAAwC/B,EAAG,EADlB,EAE1B;AACEgC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAE9C,YAAY,CAAC8C;AAAtB;AAFX,OAF0B,CAA5B;AAQA,YAAMP,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;AAEA/C,MAAAA,WAAW,CAAC8C,QAAD,CAAX;AACD,KAZD,CAYE,OAAOU,GAAP,EAAY;AACZ9C,MAAAA,OAAO,CAACsC,KAAR,CAAcQ,GAAG,CAACC,OAAlB;AACD;AACF,GAhBD,CA1G0B,CA4H1B;;;AACA,QAAME,aAAa,GAAG,MAAO/C,EAAP,IAAc;AAClC,QAAI;AACF,YAAM+B,KAAK,CAAE,kDAAiD/B,EAAG,EAAtD,EAAyD;AAClEgC,QAAAA,MAAM,EAAE,QAD0D;AAElEC,QAAAA,OAAO,EAAE;AAAEQ,UAAAA,KAAK,EAAE9C,YAAY,CAAC8C;AAAtB;AAFyD,OAAzD,CAAX;AAID,KALD,CAKE,OAAOG,GAAP,EAAY;AACZ9C,MAAAA,OAAO,CAACsC,KAAR,CAAcQ,GAAG,CAACC,OAAlB;AACD;;AAEDvD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAXD;;AAaAZ,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc;AACd2C,IAAAA,OAAO,CAACxC,EAAD,CAAP;AACA8C,IAAAA,WAAW,CAAC9C,EAAD,CAAX;AACAV,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GALQ,EAKN,CAACD,cAAD,CALM,CAAT;AAOA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEgD,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADA,eAIE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BpD,IAA3B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEe,EAAlB;AAAsB,IAAA,iBAAiB,EAAEV,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,eAUE;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,CAACqC,GAAT,CAAa,CAACC,OAAD,EAAUR,QAAV,kBACZ,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEQ,OAAO,CAACC,oBADf;AAEE,IAAA,IAAI,EAAED,OAAO,CAACuB,YAFhB;AAGE,IAAA,EAAE,EAAEvB,OAAO,CAACC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAPF,CAVF,CADF,CADF;AAgCD,CAjLD;;AAmLA,eAAe3C,QAAf","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Product from \"./Product\";\r\nimport \"../../../src/App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ViewEdit = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [stocktake, setStocktake] = useState(false);\r\n\r\n  const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n\r\n  const checkStocktake = () => {\r\n    if (stockId !== null) {\r\n      console.log(\"stocktake in progress\");\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const id = props.match.params.id;\r\n\r\n  const handleDragStart = (e, params) => {\r\n    console.log(\"drag start\", params);\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    setOriginalIndex(params);\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    const currentItem = dragItem.current;\r\n    if (originalIndex.productI !== params.productI) {\r\n      console.log(\"Target is not the same\");\r\n      setProducts((oldProducts) => {\r\n        let newList = JSON.parse(JSON.stringify(oldProducts));\r\n        newList.splice(\r\n          params.productI,\r\n          0,\r\n          newList.splice(currentItem.productI, 1)[0]\r\n        );\r\n        dragItem.current = params;\r\n        return newList;\r\n      });\r\n      products.map((product, productI) => {\r\n        console.log(product.product_stocklist_id, productI);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log(\"Ending Drag\");\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  async function setPosition(id, productI) {\r\n    try {\r\n      const body = { id, productI };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/savepositions`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json;\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function setPositions() {\r\n    products.map((product, productI) => {\r\n      setPosition(product.product_stocklist_id, productI);\r\n    });\r\n    toast.success(\"Updated succesfully\");\r\n  }\r\n\r\n  const getStyles = (params) => {\r\n    const currentItem = dragItem.current;\r\n    if (currentItem.productI === params) {\r\n      return \"current dnd-item\";\r\n    }\r\n    return \"dnd-item\";\r\n  };\r\n\r\n  //get list name\r\n  const getName = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/list/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //delete a product from list\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/deleteproduct/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setProductsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkStocktake();\r\n    getName(id);\r\n    getProducts(id);\r\n    setProductsChange(false);\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\">\r\n        <div className=\"container\">\r\n        <div className=\"saveButton\">\r\n          <button onClick={setPositions}>Save List Positions</button>\r\n        </div>\r\n          <h1 className=\"display-3\">{name}</h1>\r\n          <div>\r\n            <Dropdown listId={id} setProductsChange={setProductsChange} />\r\n          </div>\r\n        </div>\r\n        <table className=\"table mt-5 text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product, productI) => (\r\n              <Product\r\n                key={product.product_stocklist_id}\r\n                name={product.product_name}\r\n                id={product.product_stocklist_id}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewEdit;\r\n"]},"metadata":{},"sourceType":"module"}