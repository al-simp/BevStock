{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\user\\\\UserShowLists.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AssignList from \"../components/stocktaking/AssignList\";\n\nconst UserShowLists = ({\n  allLists,\n  setListsChange,\n  stocktake,\n  stocktake_id\n}) => {\n  const [assignedLists, setAssignedLists] = useState([]);\n  const [unassignedLists, setUnassignedLists] = useState([]);\n  const [lists, setLists] = useState([]); //assigned to an empty array\n\n  const [stocktakeInstance, setStocktakeInstance] = useState([]); //get the lists that have been assigned to the user\n\n  async function checkAssignedDuties() {\n    try {\n      const stocktake_id = localStorage.getItem(\"stocktake\");\n      const id = localStorage.getItem(\"user\");\n      const body = {\n        id,\n        stocktake_id\n      };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/stocklists/userassignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n\n      if (parseRes.length > 0) {\n        setAssignedLists(parseRes);\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  } //get the unassigned lists\n\n\n  const getUnassignedLists = async () => {\n    try {\n      const body = {\n        stocktake_id\n      };\n      const unassignedLists = await fetch(\"http://localhost:5000/stocklists/unassignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await unassignedLists.json();\n      setUnassignedLists(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    setStocktakeInstance(stocktake_id);\n    setLists(allLists);\n    setListsChange(false);\n\n    if (stocktake) {\n      getUnassignedLists();\n    }\n  }, [allLists]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Unassigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Count\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, unassignedLists.map(stocklist => /*#__PURE__*/React.createElement(\"tr\", {\n    key: stocklist.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, stocklist.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `count/${stocklist.stocklist_id}/${stocktakeInstance}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Count\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Assigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Assigned to\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, assignedLists.map(list => /*#__PURE__*/React.createElement(\"tr\", {\n    key: list.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, list.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, list.user_name))))))));\n};\n\nexport default UserShowLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/user/UserShowLists.js"],"names":["React","Fragment","useState","useEffect","Link","AssignList","UserShowLists","allLists","setListsChange","stocktake","stocktake_id","assignedLists","setAssignedLists","unassignedLists","setUnassignedLists","lists","setLists","stocktakeInstance","setStocktakeInstance","checkAssignedDuties","localStorage","getItem","id","body","console","log","response","fetch","method","headers","JSON","stringify","parseRes","json","length","error","message","getUnassignedLists","map","stocklist","stocklist_id","stocklist_name","list","user_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignList from \"../components/stocktaking/AssignList\";\r\n\r\nconst UserShowLists = ({ allLists, setListsChange, stocktake, stocktake_id }) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [unassignedLists, setUnassignedLists] = useState([]);\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to the user\r\n  async function checkAssignedDuties() {\r\n    try {\r\n      const stocktake_id = localStorage.getItem(\"stocktake\");\r\n      const id = localStorage.getItem(\"user\");\r\n      const body = { id, stocktake_id };\r\n      console.log(body);\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/userassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      if (parseRes.length > 0) {\r\n        setAssignedLists(parseRes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n\r\n  //get the unassigned lists\r\n  const getUnassignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const unassignedLists = await fetch(\r\n        \"http://localhost:5000/stocklists/unassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await unassignedLists.json();\r\n      setUnassignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setLists(allLists);\r\n    setListsChange(false);\r\n    if (stocktake) {\r\n      getUnassignedLists();\r\n    }\r\n  }, [allLists]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Unassigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Count</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {unassignedLists.map((stocklist) => (\r\n                <tr key={stocklist.stocklist_id}>\r\n                  <td>{stocklist.stocklist_name}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${stocklist.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assigned to</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>{list.user_name}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserShowLists;\r\n"]},"metadata":{},"sourceType":"module"}