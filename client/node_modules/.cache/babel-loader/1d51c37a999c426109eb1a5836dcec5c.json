{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\ViewEdit.js\";\nimport React, { Fragment, useState, useEffect, useRef } from \"react\";\nimport Dropdown from \"./Dropdown\";\nimport Product from \"./Product\";\nimport \"../../../src/App.css\";\nimport { toast } from \"react-toastify\";\n\nconst ViewEdit = props => {\n  const [name, setName] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [productsChange, setProductsChange] = useState(false);\n  const [dragging, setDragging] = useState(false);\n  const dragItem = useRef();\n  const dragNode = useRef();\n  const [dragMode, setDragMode] = useState(false);\n  const id = props.match.params.id; //handle drag start\n\n  const handleDragStart = (e, params) => {\n    // set current item being dragged\n    dragItem.current = params;\n    dragNode.current = e.target; //Initialise drag end listener\n\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd); // Intialise drag enter listener\n\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, params) => {\n    //check that index of current item is not the same as target location.\n    if (dragItem.current !== params.productI) {\n      // use setProducts hook to set state to newly arranged array.\n      setProducts(oldProducts => {\n        let newList = JSON.parse(JSON.stringify(oldProducts));\n        newList.splice(params.productI, 0, newList.splice(dragItem.current.productI, 1)[0]);\n        dragItem.current = params;\n        return newList;\n      });\n    }\n  }; //the handle drag end listener.\n\n\n  const handleDragEnd = () => {\n    setDragging(false);\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  }; //set the positions in the DB\n\n\n  async function setPosition(id, productI) {\n    try {\n      const body = {\n        id,\n        productI\n      };\n      const response = await fetch(`http://localhost:5000/stocklists/savepositions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      await response.json;\n    } catch (error) {\n      console.error(error.message);\n    }\n  } //set the positions of each element in the database under index column\n\n\n  async function setPositions() {\n    if (dragMode) {\n      products.map((product, productI) => {\n        setPosition(product.product_stocklist_id, productI);\n        return null;\n      });\n      setDragMode(false);\n      toast.success(\"Positions updated\");\n    } else {\n      setDragMode(true);\n    }\n  }\n\n  const getStyles = params => {\n    const currentItem = dragItem.current;\n\n    if (currentItem.productI === params) {\n      return \"current dnd-item\";\n    }\n\n    return \"dnd-item\";\n  }; //get list name\n\n\n  const getName = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/get/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setName(parseRes.rows[0].stocklist_name);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //get products on list\n\n\n  const getProducts = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/list/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; //delete a product from list\n\n\n  const deleteProduct = async id => {\n    try {\n      await fetch(`http://localhost:5000/stocklists/deleteproduct/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    setProductsChange(true);\n  };\n\n  useEffect(() => {\n    getName(props.match.params.id);\n    getProducts(props.match.params.id);\n    setProductsChange(false);\n  }, [productsChange]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, name), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: setPositions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, dragMode ? \"Save Positions\" : \"Change List Order\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    listId: id,\n    setProductsChange: setProductsChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, \"Product\"), dragMode ? null : /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 38\n    }\n  }, \"Delete\"))), dragMode ? /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, products.map((product, productI) => /*#__PURE__*/React.createElement(\"tr\", {\n    draggable: true,\n    onDragStart: e => {\n      handleDragStart(e, {\n        productI\n      });\n    },\n    onDragEnter: dragging ? e => {\n      handleDragEnter(e, {\n        productI\n      });\n    } : null,\n    key: product.product_stocklist_id,\n    className: dragging ? getStyles(productI) : \"dnd-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Product, {\n    key: product.product_stocklist_id,\n    name: product.product_name,\n    id: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 23\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: e => deleteProduct(product.product_stocklist_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"Delete\"))))))))));\n};\n\nexport default ViewEdit;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/ViewEdit.js"],"names":["React","Fragment","useState","useEffect","useRef","Dropdown","Product","toast","ViewEdit","props","name","setName","products","setProducts","productsChange","setProductsChange","dragging","setDragging","dragItem","dragNode","dragMode","setDragMode","id","match","params","handleDragStart","e","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","productI","oldProducts","newList","JSON","parse","stringify","splice","removeEventListener","setPosition","body","response","fetch","method","headers","json","error","console","message","setPositions","map","product","product_stocklist_id","success","getStyles","currentItem","getName","token","localStorage","parseRes","rows","stocklist_name","err","getProducts","deleteProduct","product_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Product from \"./Product\";\r\nimport \"../../../src/App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ViewEdit = (props) => {\r\n  const [name, setName] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  const dragItem = useRef();\r\n  const dragNode = useRef();\r\n\r\n  const [dragMode, setDragMode] = useState(false);\r\n\r\n  const id = props.match.params.id;\r\n\r\n  //handle drag start\r\n  const handleDragStart = (e, params) => {\r\n    // set current item being dragged\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    //Initialise drag end listener\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    // Intialise drag enter listener\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    //check that index of current item is not the same as target location.\r\n    if (dragItem.current !== params.productI) {\r\n      // use setProducts hook to set state to newly arranged array.\r\n      setProducts((oldProducts) => {\r\n        let newList = JSON.parse(JSON.stringify(oldProducts));\r\n        newList.splice(\r\n          params.productI,\r\n          0,\r\n          newList.splice(dragItem.current.productI, 1)[0]\r\n        );\r\n        dragItem.current = params;\r\n        return newList;\r\n      });\r\n    }\r\n  };\r\n\r\n  //the handle drag end listener.\r\n  const handleDragEnd = () => {\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  //set the positions in the DB\r\n  async function setPosition(id, productI) {\r\n    try {\r\n      const body = { id, productI };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/savepositions`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json;\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  //set the positions of each element in the database under index column\r\n  async function setPositions() {\r\n    if (dragMode) {\r\n      products.map((product, productI) => {\r\n        setPosition(product.product_stocklist_id, productI);\r\n        return null;\r\n      });\r\n      setDragMode(false);\r\n      toast.success(\"Positions updated\");\r\n    } else {\r\n      setDragMode(true);\r\n    }\r\n  }\r\n\r\n  const getStyles = (params) => {\r\n    const currentItem = dragItem.current;\r\n    if (currentItem.productI === params) {\r\n      return \"current dnd-item\";\r\n    }\r\n    return \"dnd-item\";\r\n  };\r\n\r\n  //get list name\r\n  const getName = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/get/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setName(parseRes.rows[0].stocklist_name);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //get products on list\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/list/${id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  //delete a product from list\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/deleteproduct/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setProductsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getName(props.match.params.id);\r\n    getProducts(props.match.params.id);\r\n    setProductsChange(false);\r\n  }, [productsChange]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n            <div className=\"jumbotron\">\r\n              <div className=\"container\">\r\n                <h1 className=\"display-3\">{name}</h1>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={setPositions}\r\n                >\r\n                  {dragMode ? \"Save Positions\" : \"Change List Order\"}\r\n                </button>\r\n                <div>\r\n                  <Dropdown listId={id} setProductsChange={setProductsChange} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <table className=\"table mt-5 text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  {dragMode ? null : <th>Delete</th>}\r\n                </tr>\r\n              </thead>\r\n              {dragMode ? (\r\n                <tbody>\r\n                  {products.map((product, productI) => (\r\n                    <tr\r\n                      draggable\r\n                      onDragStart={(e) => {\r\n                        handleDragStart(e, { productI });\r\n                      }}\r\n                      onDragEnter={\r\n                        dragging\r\n                          ? (e) => {\r\n                              handleDragEnter(e, { productI });\r\n                            }\r\n                          : null\r\n                      }\r\n                      key={product.product_stocklist_id}\r\n                      className={dragging ? getStyles(productI) : \"dnd-item\"}\r\n                    >\r\n                      <Product\r\n                        key={product.product_stocklist_id}\r\n                        name={product.product_name}\r\n                        id={product.product_stocklist_id}\r\n                      />\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              ) : (\r\n                <tbody>\r\n                  {products.map((product) => (\r\n                    <tr key={product.product_stocklist_id}>\r\n                      <td>{product.product_name}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-danger\"\r\n                          onClick={(e) =>\r\n                            deleteProduct(product.product_stocklist_id)\r\n                          }\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              )}\r\n            </table>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ViewEdit;\r\n"]},"metadata":{},"sourceType":"module"}