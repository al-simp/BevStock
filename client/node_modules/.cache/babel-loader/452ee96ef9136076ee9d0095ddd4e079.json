{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\ShowLists.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AssignList from \"./AssignList\";\n\nconst ShowLists = ({\n  allLists,\n  setListsChange,\n  stocktake,\n  stocktake_id\n}) => {\n  const [assignedLists, setAssignedLists] = useState([]);\n  const [unassignedLists, setUnassignedLists] = useState([]);\n  const [lists, setLists] = useState([]); //assigned to an empty array\n\n  const [stocktakeInstance, setStocktakeInstance] = useState([]); //get the lists that have been assigned to staff\n\n  const getAssignedLists = async () => {\n    try {\n      const body = {\n        stocktake_id\n      };\n      const assignedLists = await fetch(\"http://localhost:5000/stocklists/assignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await assignedLists.json();\n      setAssignedLists(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }; //get the unassigned lists\n\n\n  const getUnassignedLists = async () => {\n    try {\n      const body = {\n        stocktake_id\n      };\n      const unassignedLists = await fetch(\"http://localhost:5000/stocklists/unassignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await unassignedLists.json();\n      setUnassignedLists(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const unassign = async id => {\n    try {\n      const body = {\n        id,\n        stocktake_id\n      };\n      const unassign = await fetch(\"http://localhost:5000/stocklists/unassignuser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      await unassign.json();\n      setListsChange(true);\n    } catch (error) {}\n  }; //delete list function\n\n\n  const deleteList = async id => {\n    try {\n      await fetch(`http://localhost:5000/stocklists/delete/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      setLists(lists.filter(stocklist => stocklist.stocklist_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    setListsChange(true);\n  };\n\n  useEffect(() => {\n    setStocktakeInstance(stocktake_id);\n    setLists(allLists);\n    setListsChange(false);\n\n    if (stocktake) {\n      getAssignedLists();\n      getUnassignedLists();\n    }\n  }, [allLists]);\n  return !stocktake ? /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"View/Edit Products\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, allLists.map(stocklist => /*#__PURE__*/React.createElement(\"tr\", {\n    key: stocklist.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, stocklist.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteList(stocklist.stocklist_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Delete\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `viewedit/${stocklist.stocklist_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"View/Edit\")))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Unassigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Assign to team member\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Count\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, unassignedLists.map(stocklist => /*#__PURE__*/React.createElement(\"tr\", {\n    key: stocklist.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, stocklist.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AssignList, {\n    name: stocklist.stocklist_name,\n    stocklist_id: stocklist.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `count/${stocklist.stocklist_id}/${stocktakeInstance}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Count\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Assigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Unassign\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, assignedLists.map(list => /*#__PURE__*/React.createElement(\"tr\", {\n    key: list.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }, list.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, list.user_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: e => unassign(list.stocklist_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Unassign\")))))))));\n};\n\nexport default ShowLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/ShowLists.js"],"names":["React","Fragment","useState","useEffect","Link","AssignList","ShowLists","allLists","setListsChange","stocktake","stocktake_id","assignedLists","setAssignedLists","unassignedLists","setUnassignedLists","lists","setLists","stocktakeInstance","setStocktakeInstance","getAssignedLists","body","fetch","method","headers","JSON","stringify","parseRes","json","error","console","message","getUnassignedLists","unassign","id","deleteList","token","localStorage","filter","stocklist","stocklist_id","err","map","stocklist_name","list","user_name","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA,SAA5B;AAAuCC,EAAAA;AAAvC,CAAD,KAA2D;AAC3E,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAH2E,CAGnC;;AACxC,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D,CAJ2E,CAM3E;;AACA,QAAMiB,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAMC,IAAI,GAAG;AAAEV,QAAAA;AAAF,OAAb;AACA,YAAMC,aAAa,GAAG,MAAMU,KAAK,CAC/B,gDAD+B,EAE/B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEH,QAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHR,OAF+B,CAAjC;AAQA,YAAMM,QAAQ,GAAG,MAAMf,aAAa,CAACgB,IAAd,EAAvB;AACAf,MAAAA,gBAAgB,CAACc,QAAD,CAAhB;AACD,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACF,GAhBD,CAP2E,CAyB3E;;;AACA,QAAMC,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMX,IAAI,GAAG;AAAEV,QAAAA;AAAF,OAAb;AACA,YAAMG,eAAe,GAAG,MAAMQ,KAAK,CACjC,kDADiC,EAEjC;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEH,QAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHR,OAFiC,CAAnC;AAQA,YAAMM,QAAQ,GAAG,MAAMb,eAAe,CAACc,IAAhB,EAAvB;AACAb,MAAAA,kBAAkB,CAACY,QAAD,CAAlB;AACD,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACF,GAhBD;;AAkBA,QAAME,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC7B,QAAI;AACF,YAAMb,IAAI,GAAG;AAAEa,QAAAA,EAAF;AAAMvB,QAAAA;AAAN,OAAb;AACA,YAAMsB,QAAQ,GAAG,MAAMX,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEH,QAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHR,OAF0B,CAA5B;AAQA,YAAMY,QAAQ,CAACL,IAAT,EAAN;AACAnB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAZD,CAYE,OAAOoB,KAAP,EAAc,CAAE;AACnB,GAdD,CA5C2E,CA4D3E;;;AACA,QAAMM,UAAU,GAAG,MAAOD,EAAP,IAAc;AAC/B,QAAI;AACF,YAAMZ,KAAK,CAAE,2CAA0CY,EAAG,EAA/C,EAAkD;AAC3DX,QAAAA,MAAM,EAAE,QADmD;AAE3DC,QAAAA,OAAO,EAAE;AAAEY,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAFkD,OAAlD,CAAX;AAKAnB,MAAAA,QAAQ,CAACD,KAAK,CAACsB,MAAN,CAAcC,SAAD,IAAeA,SAAS,CAACC,YAAV,KAA2BN,EAAvD,CAAD,CAAR;AACD,KAPD,CAOE,OAAOO,GAAP,EAAY;AACZX,MAAAA,OAAO,CAACD,KAAR,CAAcY,GAAG,CAACV,OAAlB;AACD;;AAEDtB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAbD;;AAeAL,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,oBAAoB,CAACR,YAAD,CAApB;AACAM,IAAAA,QAAQ,CAACT,QAAD,CAAR;AACAC,IAAAA,cAAc,CAAC,KAAD,CAAd;;AACA,QAAIC,SAAJ,EAAe;AACbU,MAAAA,gBAAgB;AAChBY,MAAAA,kBAAkB;AACnB;AACF,GARQ,EAQN,CAACxB,QAAD,CARM,CAAT;AAUA,SAAO,CAACE,SAAD,gBACL;AAAO,IAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACkC,GAAT,CAAcH,SAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,SAAS,CAACC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACI,cAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MAAMR,UAAU,CAACI,SAAS,CAACC,YAAX,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAG,YAAWD,SAAS,CAACC,YAAa,EADzC;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAVF,CADD,CADH,CARF,CADK,gBAkCL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,eAAe,CAAC4B,GAAhB,CAAqBH,SAAD,iBACnB;AAAI,IAAA,GAAG,EAAEA,SAAS,CAACC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACI,cAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEJ,SAAS,CAACI,cADlB;AAEE,IAAA,YAAY,EAAEJ,SAAS,CAACC,YAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAG,SAAQD,SAAS,CAACC,YAAa,IAAGtB,iBAAkB,EAD3D;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CARF,CADD,CADH,CARF,CAFF,CADF,eAkCE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aAAa,CAAC8B,GAAd,CAAmBE,IAAD,iBACjB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACJ,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,IAAI,CAACD,cAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,SAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAGC,CAAD,IAAOb,QAAQ,CAACW,IAAI,CAACJ,YAAN,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAHF,CADD,CADH,CARF,CAFF,CAlCF,CADF,CAlCF;AAoGD,CA1LD;;AA4LA,eAAejC,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AssignList from \"./AssignList\";\r\n\r\nconst ShowLists = ({ allLists, setListsChange, stocktake, stocktake_id }) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [unassignedLists, setUnassignedLists] = useState([]);\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to staff\r\n  const getAssignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const assignedLists = await fetch(\r\n        \"http://localhost:5000/stocklists/assignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await assignedLists.json();\r\n      setAssignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //get the unassigned lists\r\n  const getUnassignedLists = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const unassignedLists = await fetch(\r\n        \"http://localhost:5000/stocklists/unassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await unassignedLists.json();\r\n      setUnassignedLists(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const unassign = async (id) => {\r\n    try {\r\n      const body = { id, stocktake_id };\r\n      const unassign = await fetch(\r\n        \"http://localhost:5000/stocklists/unassignuser\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await unassign.json();\r\n      setListsChange(true);\r\n    } catch (error) {}\r\n  };\r\n\r\n  //delete list function\r\n  const deleteList = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      setLists(lists.filter((stocklist) => stocklist.stocklist_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setListsChange(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setLists(allLists);\r\n    setListsChange(false);\r\n    if (stocktake) {\r\n      getAssignedLists();\r\n      getUnassignedLists();\r\n    }\r\n  }, [allLists]);\r\n\r\n  return !stocktake ? (\r\n    <table className=\"table text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>Stock Area</th>\r\n          <th>Delete</th>\r\n          <th>View/Edit Products</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {allLists.map((stocklist) => (\r\n          <tr key={stocklist.stocklist_id}>\r\n            <td>{stocklist.stocklist_name}</td>\r\n            <td>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => deleteList(stocklist.stocklist_id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n            <td>\r\n              <Link\r\n                to={`viewedit/${stocklist.stocklist_id}`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View/Edit\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Unassigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assign to team member</th>\r\n                <th>Count</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {unassignedLists.map((stocklist) => (\r\n                <tr key={stocklist.stocklist_id}>\r\n                  <td>{stocklist.stocklist_name}</td>\r\n                  <td>\r\n                    <AssignList\r\n                      name={stocklist.stocklist_name}\r\n                      stocklist_id={stocklist.stocklist_id}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${stocklist.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Assigned to</th>\r\n                <th>Unassign</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>{list.user_name}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={(e) => unassign(list.stocklist_id)}\r\n                    >\r\n                      Unassign\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowLists;\r\n"]},"metadata":{},"sourceType":"module"}