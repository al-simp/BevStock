{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\ProductsDB.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport AddNewProduct from \"./AddNewProduct\";\n\nconst ProductsDb = () => {\n  const [products, setProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const filteredProducts = products.filter(item => {\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\n  });\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddNewProduct, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Par Level\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }, filteredProducts.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, product.product_size), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, product.product_category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, product.par_level))))));\n};\n\nexport default ProductsDb;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/ProductsDB.js"],"names":["React","useEffect","useState","AddNewProduct","ProductsDb","products","setProducts","search","setSearch","getProducts","response","fetch","method","headers","token","localStorage","parseRes","json","error","console","message","filteredProducts","filter","item","product_name","toLowerCase","includes","e","target","value","map","product","product_id","product_size","product_category","par_level"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\n\r\nconst ProductsDb = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const getProducts = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/products/\", {\r\n              method: \"GET\",\r\n              headers: { token: localStorage.token },\r\n            });\r\n            const parseRes = await response.json();\r\n            setProducts(parseRes);\r\n          } catch (error) {\r\n              console.error(error.message);\r\n          }\r\n    }\r\n\r\n    \r\n  const filteredProducts = products.filter((item) => {\r\n    return item.product_name.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n\r\n    useEffect(() => {\r\n        getProducts();\r\n    }, [])\r\n\r\n    return (\r\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n            <h1>Products</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <AddNewProduct />\r\n            <table className=\"table table-striped table-sm\">\r\n<thead>\r\n    <th>Product</th>\r\n    <th>Size</th>\r\n    <th>Category</th>\r\n    <th>Par Level</th>\r\n</thead>\r\n<tbody>\r\n    {filteredProducts.map((product) => (\r\n        <tr key={product.product_id}>\r\n            <td>{product.product_name}</td>\r\n            <td>{product.product_size}</td>\r\n            <td>{product.product_category}</td>\r\n            <td>{product.par_level}</td>\r\n        </tr>\r\n    ))}\r\n</tbody>\r\n            </table>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default ProductsDb;"]},"metadata":{},"sourceType":"module"}