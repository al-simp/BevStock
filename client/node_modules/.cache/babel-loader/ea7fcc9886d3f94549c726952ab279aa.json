{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //components\n\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Landing from \"./components/Landing\";\nimport Stocktaking from \"./components/stocktaking/Stocktaking\";\nimport TeamManagement from \"./components/team_management/TeamManagement\";\nimport Count from \"./components/stocktaking/Count\";\nimport Inventory from \"./components/inventory/Inventory\";\nimport UserDashboard from \"./user/UserDashboard\";\nimport UserStocktake from \"./user/UserStocktake\";\nimport QrScan from \"./components/stocktaking/QrScan\";\nimport QRGen from \"./helpers/qrCodeGen\";\nimport ViewEdit from \"./components/stocktaking/ViewEdit\";\nimport StockTakeLists from \"./components/stocktaking/StocktakeLists\";\ntoast.configure();\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  async function isAuth() {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {}, []);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => !isAuthenticated ? /*#__PURE__*/React.createElement(Landing, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Dashboard, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/team\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(TeamManagement, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/count/:id/:stocktakeid\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Count, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/viewedit/:id\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(ViewEdit, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/inventory\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Inventory, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/stocktakelists\",\n    render: props => isAuthenticated ? /*#__PURE__*/React.createElement(StockTakeLists, Object.assign({}, props, {\n      setAuth: setAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/qrscan\",\n    render: () => /*#__PURE__*/React.createElement(QrScan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 55\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/qrgen\",\n    render: () => /*#__PURE__*/React.createElement(QRGen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Switch","Route","Redirect","toast","Dashboard","Login","Landing","Stocktaking","TeamManagement","Count","Inventory","UserDashboard","UserStocktake","QrScan","QRGen","ViewEdit","StockTakeLists","configure","App","isAuthenticated","setIsAuthenticated","isAuth","response","fetch","method","headers","token","localStorage","parseRes","json","err","console","error","message","setAuth","boolean","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//components\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport Landing from \"./components/Landing\";\nimport Stocktaking from \"./components/stocktaking/Stocktaking\";\nimport TeamManagement from \"./components/team_management/TeamManagement\";\nimport Count from \"./components/stocktaking/Count\";\nimport Inventory from \"./components/inventory/Inventory\";\nimport UserDashboard from \"./user/UserDashboard\";\nimport UserStocktake from \"./user/UserStocktake\";\nimport QrScan from \"./components/stocktaking/QrScan\";\nimport QRGen from \"./helpers/qrCodeGen\";\nimport ViewEdit from \"./components/stocktaking/ViewEdit\";\nimport StockTakeLists from \"./components/stocktaking/StocktakeLists\";\n\ntoast.configure();\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  async function isAuth() {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n\n      const parseRes = await response.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {}, []);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  };\n\n  return (\n    <Fragment>\n      <Router>\n        <div>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) =>\n                !isAuthenticated ? (\n                  <Landing {...props} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Redirect to=\"/dashboard\" />\n                ) : (\n                  <Login {...props} setAuth={setAuth} />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/dashboard\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Dashboard {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/team\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <TeamManagement {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/count/:id/:stocktakeid\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Count {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/viewedit/:id\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <ViewEdit {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/inventory\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <Inventory {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/stocktakelists\"\n              render={(props) =>\n                isAuthenticated ? (\n                  <StockTakeLists {...props} setAuth={setAuth} />\n                ) : (\n                  <Redirect to=\"/dashboard\" />\n                )\n              }\n            />\n\n            <Route exact path=\"/qrscan\" render={() => <QrScan />} />\n            <Route exact path=\"/qrgen\" render={() => <QRGen />} />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}