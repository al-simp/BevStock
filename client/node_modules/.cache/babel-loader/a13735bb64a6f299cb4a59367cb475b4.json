{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\InventoryBreakdown.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\n\nconst InventoryBreakdown = ({\n  product_id,\n  id\n}) => {\n  const [breakdown, setBreakdown] = useState([]);\n  const product = product_id;\n\n  const getInventoryBreakdown = async () => {\n    try {\n      const body = {\n        id,\n        product\n      };\n      const response = await fetch(\"http://localhost:5000/inventory/breakdown\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      setBreakdown(parseRes);\n      console.log(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getInventoryBreakdown();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": `#id${product_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"View Breakdown\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    id: `id${product_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, product_id)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Quantity\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, breakdown.map(list => /*#__PURE__*/React.createElement(\"tr\", {\n    key: list.stocklist_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, list.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, list.sum))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Close\"))))));\n};\n\nexport default InventoryBreakdown;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/inventory/InventoryBreakdown.js"],"names":["React","Fragment","useState","useEffect","InventoryBreakdown","product_id","id","breakdown","setBreakdown","product","getInventoryBreakdown","body","response","fetch","method","headers","JSON","stringify","parseRes","json","console","log","error","message","map","list","stocklist_name","sum"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nconst InventoryBreakdown = ({ product_id, id }) => {\r\n    const [breakdown, setBreakdown] = useState([]);\r\n  const product = product_id;\r\n\r\n  const getInventoryBreakdown = async () => {\r\n    try {\r\n      const body = { id, product };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/inventory/breakdown\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setBreakdown(parseRes);\r\n      console.log(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInventoryBreakdown();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-info\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${product_id}`}\r\n      >\r\n        View Breakdown\r\n      </button>\r\n      <div className=\"modal\" id={`id${product_id}`}>\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">{product_id}</h4>\r\n            </div>\r\n            <div className=\"modal-body\"></div>\r\n            <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Area</th>\r\n                    <th>Quantity</th>\r\n                </tr>\r\n            </thead>\r\n    <tbody>\r\n        {breakdown.map((list) => (\r\n            <tr key={list.stocklist_name}>\r\n            <td>{list.stocklist_name}</td>\r\n            <td>{list.sum}</td>\r\n            </tr>\r\n        ))}\r\n    </tbody>\r\n    </table>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-success\" data-dismiss=\"modal\">\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InventoryBreakdown;\r\n"]},"metadata":{},"sourceType":"module"}