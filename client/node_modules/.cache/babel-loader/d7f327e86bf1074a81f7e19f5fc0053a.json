{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import _ from\"lodash\";import CountModal from\"./CountModal\";var Bottle=function Bottle(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),bottle=_useState2[0],setBottle=_useState2[1];var result=props.result,hasScanned=props.hasScanned,hasResult=props.hasResult,setPairBool=props.setPairBool,setProductsChange=props.setProductsChange,setQuantity=props.setQuantity;var stocktake=localStorage.getItem(\"stocktake\");var getBottle=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var body,response,parseData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(result!==null&&!hasResult&&!hasScanned)){_context.next=21;break;}console.log(\"result\",result,\"scanned\",hasScanned,\"hasResult\",hasResult);setPairBool(\"hasScanned\",true);_context.prev=3;body={result:result,stocktake:stocktake};_context.next=7;return fetch(\"/stocktake/productfromid\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(body)});case 7:response=_context.sent;_context.next=10;return response.json();case 10:parseData=_context.sent;console.log(parseData.length);setBottle(parseData[0]);console.log(parseData);setPairBool(\"hasResult\",true);_context.next=21;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](3);console.error(_context.t0.message);setPairBool(\"hasScanned\",false);case 21:case\"end\":return _context.stop();}}},_callee,null,[[3,17]]);}));return function getBottle(){return _ref.apply(this,arguments);};}();useEffect(function(){if(!hasResult){getBottle();}},[result,bottle]);return!_.isEmpty(bottle)?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CountModal,{product:bottle,stocktakeid:stocktake,setProductsChange:setProductsChange,setQuantity:setQuantity})):/*#__PURE__*/React.createElement(\"h1\",null,\"No bottle found\");};export default Bottle;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/Bottle.js"],"names":["React","useEffect","useState","_","CountModal","Bottle","props","bottle","setBottle","result","hasScanned","hasResult","setPairBool","setProductsChange","setQuantity","stocktake","localStorage","getItem","getBottle","console","log","body","fetch","method","headers","JSON","stringify","response","json","parseData","length","error","message","isEmpty"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,eACIJ,QAAQ,CAAC,EAAD,CADZ,wCACjBK,MADiB,eACTC,SADS,kBAItBC,CAAAA,MAJsB,CAUpBH,KAVoB,CAItBG,MAJsB,CAKtBC,UALsB,CAUpBJ,KAVoB,CAKtBI,UALsB,CAMtBC,SANsB,CAUpBL,KAVoB,CAMtBK,SANsB,CAOtBC,WAPsB,CAUpBN,KAVoB,CAOtBM,WAPsB,CAQtBC,iBARsB,CAUpBP,KAVoB,CAQtBO,iBARsB,CAStBC,WATsB,CAUpBR,KAVoB,CAStBQ,WATsB,CAWxB,GAAMC,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB,CAEA,GAAMC,CAAAA,SAAS,0FAAG,oKACZT,MAAM,GAAK,IAAX,EAAmB,CAACE,SAApB,EAAiC,CAACD,UADtB,2BAEdS,OAAO,CAACC,GAAR,CACE,QADF,CAEEX,MAFF,CAGE,SAHF,CAIEC,UAJF,CAKE,WALF,CAMEC,SANF,EAQAC,WAAW,CAAC,YAAD,CAAe,IAAf,CAAX,CAVc,gBAYNS,IAZM,CAYC,CAAEZ,MAAM,CAANA,MAAF,CAAUM,SAAS,CAATA,SAAV,CAZD,uBAaWO,CAAAA,KAAK,CAC1B,0BAD0B,CAE1B,CACEC,MAAM,CAAE,MADV,CAEEC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFX,CAGEH,IAAI,CAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAHR,CAF0B,CAbhB,QAaNM,QAbM,sCAsBYA,CAAAA,QAAQ,CAACC,IAAT,EAtBZ,SAsBNC,SAtBM,eAwBZV,OAAO,CAACC,GAAR,CAAYS,SAAS,CAACC,MAAtB,EACAtB,SAAS,CAACqB,SAAS,CAAC,CAAD,CAAV,CAAT,CACAV,OAAO,CAACC,GAAR,CAAYS,SAAZ,EACAjB,WAAW,CAAC,WAAD,CAAc,IAAd,CAAX,CA3BY,iFA6BZO,OAAO,CAACY,KAAR,CAAc,YAAIC,OAAlB,EACApB,WAAW,CAAC,YAAD,CAAe,KAAf,CAAX,CA9BY,qEAAH,kBAATM,CAAAA,SAAS,0CAAf,CAmCAjB,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,SAAL,CAAgB,CACdO,SAAS,GACV,CACF,CAJQ,CAIN,CAACT,MAAD,CAASF,MAAT,CAJM,CAAT,CAMA,MAAO,CAACJ,CAAC,CAAC8B,OAAF,CAAU1B,MAAV,CAAD,cACL,4CACE,oBAAC,UAAD,EACE,OAAO,CAAEA,MADX,CAEE,WAAW,CAAEQ,SAFf,CAGE,iBAAiB,CAAEF,iBAHrB,CAIE,WAAW,CAAEC,WAJf,EADF,CADK,cAUL,gDAVF,CAYD,CAlED,CAoEA,cAAeT,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport CountModal from \"./CountModal\";\r\n\r\nconst Bottle = (props) => {\r\n  const [bottle, setBottle] = useState({});\r\n\r\n  const {\r\n    result,\r\n    hasScanned,\r\n    hasResult,\r\n    setPairBool,\r\n    setProductsChange,\r\n    setQuantity,\r\n  } = props;\r\n  const stocktake = localStorage.getItem(\"stocktake\");\r\n\r\n  const getBottle = async () => {\r\n    if (result !== null && !hasResult && !hasScanned) {\r\n      console.log(\r\n        \"result\",\r\n        result,\r\n        \"scanned\",\r\n        hasScanned,\r\n        \"hasResult\",\r\n        hasResult\r\n      );\r\n      setPairBool(\"hasScanned\", true);\r\n      try {\r\n        const body = { result, stocktake };\r\n        const response = await fetch(\r\n          \"/stocktake/productfromid\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n          }\r\n        );\r\n\r\n        const parseData = await response.json();\r\n\r\n        console.log(parseData.length);\r\n        setBottle(parseData[0]);\r\n        console.log(parseData);\r\n        setPairBool(\"hasResult\", true);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setPairBool(\"hasScanned\", false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!hasResult) {\r\n      getBottle();\r\n    }\r\n  }, [result, bottle]);\r\n\r\n  return !_.isEmpty(bottle) ? (\r\n    <div>\r\n      <CountModal\r\n        product={bottle}\r\n        stocktakeid={stocktake}\r\n        setProductsChange={setProductsChange}\r\n        setQuantity={setQuantity}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <h1>No bottle found</h1>\r\n  );\r\n};\r\n\r\nexport default Bottle;\r\n"]},"metadata":{},"sourceType":"module"}