{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Moment from\"react-moment\";import{toast}from\"react-toastify\";//components\nimport ShowLists from\"./ShowLists\";var StocktakeLists=function StocktakeLists(_ref){var setAuth=_ref.setAuth;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stocktake=_useState2[0],setStocktake=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),allLists=_useState4[0],setLists=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),listsChange=_useState6[0],setListsChange=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),products=_useState8[0],setProducts=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),allCounted=_useState10[0],setAllCounted=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),distinctProducts=_useState12[0],setDistinctProducts=_useState12[1];var currentStocktake=localStorage.getItem(\"laststocktake\");var dateString=Date().toString();var stocktake_id=localStorage.getItem(\"stocktake\");var checkStocktake=function checkStocktake(){if(stocktake_id!==null){setStocktake(true);}};var getProducts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var productsResponse,productsResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"/stocktake/\",{method:\"GET\",headers:{token:localStorage.token}});case 3:productsResponse=_context.sent;_context.next=6;return productsResponse.json();case 6:productsResult=_context.sent;setProducts(productsResult.rows);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function getProducts(_x){return _ref2.apply(this,arguments);};}();//create a new record for the product passed in as params.\nvar createRecord=function createRecord(id){try{var stockId=localStorage.getItem(\"stocktake\");var body={id:id,stockId:stockId};fetch(\"/stocktake/generate\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});}catch(error){console.error(error.message);}};//Creates a new record in the stocktake table, and new stocktake records for each product.\nvar newStocktake=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!stocktake&&stocktake_id===null)){_context2.next=17;break;}_context2.prev=1;_context2.next=4;return fetch(\"/stocktake/new\",{method:\"POST\",headers:{token:localStorage.token}});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:result=_context2.sent;//set stocktake and stocktakedate in local storage\nlocalStorage.setItem(\"stocktake\",result.rows[0].stocktake_id);localStorage.setItem(\"stocktakedate\",result.rows[0].stocktake_date);//create a new record for each product\nproducts.forEach(function(product){createRecord(product.product_stocklist_id);});_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0.message);case 16://set stocktake boolean to true\nsetStocktake(true);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[1,13]]);}));return function newStocktake(){return _ref3.apply(this,arguments);};}();var getLists=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,parseData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"/stocklists/\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:parseData=_context3.sent;setLists(parseData);_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0.message);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function getLists(){return _ref4.apply(this,arguments);};}();var checkAllCounted=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response,parseData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"/stocklists/inprogress\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:parseData=_context4.sent;if(parseData.length>0){setAllCounted(false);}else{setAllCounted(true);}_context4.next=12;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function checkAllCounted(){return _ref5.apply(this,arguments);};}();//CALCULATING AND WRITING SALES TO THE DATABASE AFTER STOCKTAKE HAS ENDED \n//get a list of distinct products for caluculating sales\nvar getDistinctProducts=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var response,parseRes;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"/products/get/distinct\",{method:\"GET\",headers:{token:localStorage.token}});case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:parseRes=_context5.sent;setDistinctProducts(parseRes);_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);console.error(_context5.t0.message);case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[0,10]]);}));return function getDistinctProducts(){return _ref6.apply(this,arguments);};}();//get the sales data, wait for promise to resolve then write to the database in sales_record table\nvar getAndWriteSalesNumbers=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(products){var promises;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:promises=products.map(function(product){return getSalesData(product.product_id,Number(currentStocktake),Number(currentStocktake)+1);});promises.forEach(function(promise){promise.then(function(result){writeSales(result.product_id,result.sales,stocktake_id);});});case 2:case\"end\":return _context6.stop();}}},_callee6);}));return function getAndWriteSalesNumbers(_x2){return _ref7.apply(this,arguments);};}();//write the sales numbers into the db\nvar writeSales=function writeSales(product_id,sales,stocktake){try{var body={product_id:product_id,sales:sales,stocktake:stocktake};fetch(\"/inventory/writesales\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(body)});}catch(error){console.error(error.message);}};//get sales data\nvar getSalesData=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(product,prevStocktake,currentStocktake){var body,response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;body={prevStocktake:prevStocktake,currentStocktake:currentStocktake,product:product};_context7.next=4;return fetch(\"/inventory/sales\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(body)});case 4:response=_context7.sent;_context7.next=7;return response.json();case 7:return _context7.abrupt(\"return\",_context7.sent);case 10:_context7.prev=10;_context7.t0=_context7[\"catch\"](0);console.error(_context7.t0.message);case 13:case\"end\":return _context7.stop();}}},_callee7,null,[[0,10]]);}));return function getSalesData(_x3,_x4,_x5){return _ref8.apply(this,arguments);};}();//onclick for end stocktake button\nvar endStocktake=function endStocktake(e){setListsChange(true);if(allCounted){e.preventDefault();setStocktakeInactive();localStorage.setItem(\"laststocktake\",localStorage.getItem(\"stocktake\"));localStorage.removeItem(\"stocktake\");localStorage.removeItem(\"stocktakedate\");setStocktake(false);toast.success(\"Stocktake ended\");getAndWriteSalesNumbers(distinctProducts);}else{toast.warning(\"Not all counts have been completed\");}};//set stocktake as inactive in db\nvar setStocktakeInactive=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var body,response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;body={stocktake_id:stocktake_id};_context8.next=4;return fetch(\"/stocktake/inactive\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});case 4:response=_context8.sent;_context8.next=7;return response.json();case 7:_context8.next=12;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);console.error(_context8.t0.message);case 12:case\"end\":return _context8.stop();}}},_callee8,null,[[0,9]]);}));return function setStocktakeInactive(){return _ref9.apply(this,arguments);};}();//logout onclick\nvar logout=function logout(e){e.preventDefault();localStorage.removeItem(\"token\");setAuth(false);toast.success(\"Logged out succsessfully!\");};useEffect(function(){getDistinctProducts();checkAllCounted();getProducts();checkStocktake();getLists();setListsChange(false);if(products.length>0){console.log(products);}},[listsChange]);return!stocktake_id?/*#__PURE__*/React.createElement(\"main\",{role:\"main\",className:\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary float-right\",onClick:function onClick(e){return logout(e);}},\"Logout\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"display-3\"},\"Stocktake\"),/*#__PURE__*/React.createElement(\"h4\",null,\"Create a new stocktaking record for \",dateString,\"?\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-info\",onClick:newStocktake},\"Start Stocktake\")))):/*#__PURE__*/React.createElement(\"main\",{role:\"main\",className:\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"jumbotron\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger float-right\",onClick:function onClick(e){return endStocktake(e);}},\"End Stocktake\"),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"display-3\"},\"Stocktake\"),/*#__PURE__*/React.createElement(\"h4\",null,\"Stocktake in progress :\",\" \",/*#__PURE__*/React.createElement(Moment,{date:localStorage.getItem(\"stocktakedate\"),format:\"DD/MM/YYYY HH:mm\"})))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ShowLists,{allLists:allLists,setListsChange:setListsChange,stocktake:stocktake,stocktake_id:stocktake_id})));};export default StocktakeLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/StocktakeLists.js"],"names":["React","useState","useEffect","Moment","toast","ShowLists","StocktakeLists","setAuth","stocktake","setStocktake","allLists","setLists","listsChange","setListsChange","products","setProducts","allCounted","setAllCounted","distinctProducts","setDistinctProducts","currentStocktake","localStorage","getItem","dateString","Date","toString","stocktake_id","checkStocktake","getProducts","id","fetch","method","headers","token","productsResponse","json","productsResult","rows","console","error","message","createRecord","stockId","body","JSON","stringify","newStocktake","response","result","setItem","stocktake_date","forEach","product","product_stocklist_id","log","getLists","parseData","checkAllCounted","length","getDistinctProducts","parseRes","getAndWriteSalesNumbers","promises","map","getSalesData","product_id","Number","promise","then","writeSales","sales","prevStocktake","endStocktake","e","preventDefault","setStocktakeInactive","removeItem","success","warning","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [allCounted, setAllCounted] = useState(false);\r\n  const [distinctProducts, setDistinctProducts] = useState([]);\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const dateString = Date().toString();\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const productsResponse = await fetch(\"/stocktake/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const productsResult = await productsResponse.json();\r\n      setProducts(productsResult.rows);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //create a new record for the product passed in as params.\r\n  const createRecord = (id) => {\r\n    try {\r\n      const stockId = localStorage.getItem(\"stocktake\");\r\n      const body = { id, stockId };\r\n\r\n      fetch(\"/stocktake/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //Creates a new record in the stocktake table, and new stocktake records for each product.\r\n  const newStocktake = async () => {\r\n    //check a stocktake is not already in progress\r\n    if (!stocktake && stocktake_id === null) {\r\n      try {\r\n        //insert new record into stocktake table\r\n        const response = await fetch(\"/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        //set stocktake and stocktakedate in local storage\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        //create a new record for each product\r\n        products.forEach((product) => {\r\n          createRecord(product.product_stocklist_id);\r\n        });\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      //set stocktake boolean to true\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const checkAllCounted = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"/stocklists/inprogress\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n\r\n      const parseData = await response.json();\r\n\r\n      if (parseData.length > 0) {\r\n        setAllCounted(false);\r\n      } else {\r\n        setAllCounted(true);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n\r\n  //CALCULATING AND WRITING SALES TO THE DATABASE AFTER STOCKTAKE HAS ENDED \r\n\r\n    //get a list of distinct products for caluculating sales\r\n    const getDistinctProducts = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"/products/get/distinct\",\r\n          {\r\n            method: \"GET\",\r\n            headers: { token: localStorage.token },\r\n          }\r\n        );\r\n        const parseRes = await response.json();\r\n        setDistinctProducts(parseRes);\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n\r\n    //get the sales data, wait for promise to resolve then write to the database in sales_record table\r\n    const getAndWriteSalesNumbers = async (products) => {\r\n      var promises = products.map((product) => {\r\n        return getSalesData(product.product_id, Number(currentStocktake), Number(currentStocktake)+1);\r\n      });\r\n      promises.forEach((promise) => {\r\n        promise.then((result) => {\r\n          writeSales(result.product_id, result.sales, stocktake_id);\r\n        });\r\n      });\r\n    };\r\n\r\n  //write the sales numbers into the db\r\n  const writeSales = (product_id, sales, stocktake) => {\r\n    try {\r\n      const body = { product_id, sales, stocktake };\r\n      fetch(\"/inventory/writesales\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //get sales data\r\n  const getSalesData = async (product, prevStocktake, currentStocktake) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //onclick for end stocktake button\r\n  const endStocktake = (e) => {\r\n    setListsChange(true);\r\n    if (allCounted) {\r\n      e.preventDefault();\r\n      setStocktakeInactive();\r\n      localStorage.setItem(\"laststocktake\", localStorage.getItem(\"stocktake\"));\r\n      localStorage.removeItem(\"stocktake\");\r\n      localStorage.removeItem(\"stocktakedate\");\r\n      setStocktake(false);\r\n      toast.success(\"Stocktake ended\");\r\n      getAndWriteSalesNumbers(distinctProducts);\r\n    } else {\r\n      toast.warning(\"Not all counts have been completed\");\r\n    }\r\n  };\r\n\r\n  //set stocktake as inactive in db\r\n  const setStocktakeInactive = async () => {\r\n    try {\r\n      const body = { stocktake_id };\r\n      const response = await fetch(\"/stocktake/inactive\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      await response.json();\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  //logout onclick\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDistinctProducts();\r\n    checkAllCounted();\r\n    getProducts();\r\n    checkStocktake();\r\n    getLists();\r\n    setListsChange(false);\r\n    if (products.length > 0) {\r\n      console.log(products);\r\n    }\r\n  }, [listsChange]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={newStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>\r\n            Stocktake in progress :{\" \"}\r\n            <Moment\r\n              date={localStorage.getItem(\"stocktakedate\")}\r\n              format=\"DD/MM/YYYY HH:mm\"\r\n            />\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n          stocktake_id={stocktake_id}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n"]},"metadata":{},"sourceType":"module"}