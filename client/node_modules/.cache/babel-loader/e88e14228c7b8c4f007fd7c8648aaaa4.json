{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\StocktakeLists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\"; //components\n\nimport ShowLists from \"./ShowLists\";\n\nconst StocktakeLists = ({\n  setAuth\n}) => {\n  const [stocktake, setStocktake] = useState(false);\n  const [allLists, setLists] = useState([]);\n  const [listsChange, setListsChange] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [generated, setGenerated] = useState(false);\n  const dateString = Date().toString();\n  const stocktake_id = localStorage.getItem(\"stocktake\");\n\n  const checkStocktake = () => {\n    if (stocktake_id !== null) {\n      console.log(\"stocktake in progress\");\n      setStocktake(true);\n    }\n  };\n\n  const createStocktake = () => {\n    setStocktake(window.confirm(\"Sure?\"));\n  };\n\n  const generateRecords = async id => {\n    try {\n      const stockId = Number(localStorage.getItem(\"stocktake\"));\n      const body = {\n        id,\n        stockId\n      };\n      console.log(JSON.stringify(body));\n      const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\n        method: \"POST\",\n        headers: {\n          token: localStorage.token\n        },\n        body: JSON.stringify(body)\n      });\n      const genParseRes = await response.json();\n      console.log(genParseRes);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const newStocktake = async () => {\n    if (stocktake && stocktake_id === null) {\n      console.log(\"hello\");\n\n      try {\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\n          method: \"POST\",\n          headers: {\n            token: localStorage.token\n          }\n        });\n        const result = await response.json();\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\n\n        try {\n          const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\n            method: \"GET\",\n            headers: {\n              token: localStorage.token\n            }\n          });\n          const productsResult = await productsResponse.json();\n          setProducts(productsResult);\n          setGenerated(true);\n          console.log(products);\n        } catch (error) {\n          console.error(error.message);\n        }\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  };\n\n  const getLists = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await response.json();\n      setLists(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const endStocktake = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"stocktake\");\n    localStorage.removeItem(\"stocktakedate\");\n    setStocktake(false);\n    toast.success(\"Stocktake ended\");\n  };\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setAuth(false);\n    toast.success(\"Logged out succsessfully!\");\n  };\n\n  useEffect(() => {\n    getLists();\n    newStocktake();\n    setListsChange(false);\n    checkStocktake();\n\n    if (products.length < 0) {\n      console.log(products);\n      products.forEach(product => {\n        generateRecords(product.product_stocklist_id);\n      });\n    }\n  }, [listsChange, stocktake, generated]);\n  return !stocktake_id ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: e => logout(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Create a new stocktaking record for \", dateString, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: createStocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Start Stocktake\")))) : /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger float-right\",\n    onClick: e => endStocktake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"End Stocktake\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Stocktake in progress : \", localStorage.getItem(\"stocktakedate\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowLists, {\n    allLists: allLists,\n    setListsChange: setListsChange,\n    stocktake: stocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StocktakeLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/StocktakeLists.js"],"names":["React","useState","useEffect","toast","ShowLists","StocktakeLists","setAuth","stocktake","setStocktake","allLists","setLists","listsChange","setListsChange","products","setProducts","generated","setGenerated","dateString","Date","toString","stocktake_id","localStorage","getItem","checkStocktake","console","log","createStocktake","window","confirm","generateRecords","id","stockId","Number","body","JSON","stringify","response","fetch","method","headers","token","genParseRes","json","error","message","newStocktake","result","setItem","rows","stocktake_date","productsResponse","productsResult","err","getLists","parseData","endStocktake","e","preventDefault","removeItem","success","logout","length","forEach","product","product_stocklist_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  const dateString = Date().toString();\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      console.log(\"stocktake in progress\");\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const createStocktake = () => {\r\n    setStocktake(window.confirm(\"Sure?\"));\r\n  };\r\n\r\n  const generateRecords = async (id) => {\r\n    try {\r\n      const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n      const body = { id, stockId };\r\n\r\n      console.log(JSON.stringify(body));\r\n\r\n      const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\",\r\n        headers: { token: localStorage.token },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const genParseRes = await response.json();\r\n      console.log(genParseRes);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const newStocktake = async () => {\r\n    if (stocktake && stocktake_id === null) {\r\n      console.log(\"hello\");\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        try {\r\n          const productsResponse = await fetch(\r\n            \"http://localhost:5000/stocktake/\",\r\n            {\r\n              method: \"GET\",\r\n              headers: { token: localStorage.token },\r\n            }\r\n          );\r\n          const productsResult = await productsResponse.json();\r\n          setProducts(productsResult);\r\n          setGenerated(true);\r\n          console.log(products);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const endStocktake = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"stocktake\");\r\n    localStorage.removeItem(\"stocktakedate\");\r\n    setStocktake(false);\r\n    toast.success(\"Stocktake ended\");\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n    newStocktake();\r\n    setListsChange(false);\r\n    checkStocktake();\r\n    if (products.length < 0 ){\r\n      console.log(products);\r\n      products.forEach(product => {\r\n        generateRecords(product.product_stocklist_id);\r\n      });\r\n    }\r\n  }, [listsChange, stocktake, generated]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={createStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>\r\n            Stocktake in progress : {localStorage.getItem(\"stocktakedate\")}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n"]},"metadata":{},"sourceType":"module"}