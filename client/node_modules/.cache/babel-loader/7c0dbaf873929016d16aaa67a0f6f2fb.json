{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\Bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\ShowLists.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Count from \"./Count\";\n\nconst ShowLists = ({\n  allLists,\n  setListsChange\n}) => {\n  const [lists, setLists] = useState([]); //assigned to an empty array\n\n  const [countConfirm, setCountConfirm] = useState();\n  const [listId, setListId] = useState(); //delete list function\n\n  const deleteList = async id => {\n    try {\n      await fetch(`http://localhost:5000/stocklists/delete/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      setLists(lists.filter(stocklist => stocklist.stocklist_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    setListsChange(true);\n  };\n\n  const stocktake = (id, name) => {\n    window.confirm(`Start stocktake for ${name}?`) ? setCountConfirm(true) && setListId(id) : setCountConfirm(false);\n  };\n\n  useEffect(() => {\n    setLists(allLists);\n  }, [allLists, countConfirm]);\n  return countConfirm ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Count, {\n    id: listId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }), \" \") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Count\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, allLists.map(stocklist => /*#__PURE__*/React.createElement(\"tr\", {\n    key: stocklist.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, stocklist.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => stocktake(stocklist.stocklist_id, stocklist.stocklist_name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Stocktake\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteList(stocklist.stocklist_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Delete\")))))));\n};\n\nexport default ShowLists;","map":{"version":3,"sources":["C:/Users/alans/Bevstock/client/src/components/stocktaking/ShowLists.js"],"names":["React","Fragment","useState","useEffect","Link","Redirect","Count","ShowLists","allLists","setListsChange","lists","setLists","countConfirm","setCountConfirm","listId","setListId","deleteList","id","fetch","method","headers","token","localStorage","filter","stocklist","stocklist_id","err","console","error","message","stocktake","name","window","confirm","map","stocklist_name"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Count from \"./Count\";\r\n\r\nconst ShowLists = ({ allLists, setListsChange }) => {\r\n  const [lists, setLists] = useState([]); //assigned to an empty array\r\n  const [countConfirm, setCountConfirm] = useState();\r\n  const [listId, setListId] = useState();\r\n\r\n  //delete list function\r\n  const deleteList = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/stocklists/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      setLists(lists.filter((stocklist) => stocklist.stocklist_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setListsChange(true);\r\n  };\r\n\r\n  const stocktake = (id, name) => {\r\n    window.confirm(`Start stocktake for ${name}?`)\r\n      ? setCountConfirm(true) && setListId(id)\r\n      : setCountConfirm(false)\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLists(allLists);\r\n  }, [allLists, countConfirm]);\r\n\r\n  return countConfirm ? (\r\n    <h1> <Count id={listId}/> </h1>\r\n  ) : (\r\n    <Fragment>\r\n      <table className=\"table text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Stock Area</th>\r\n            <th>Count</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allLists.map((stocklist) => (\r\n            <tr key={stocklist.stocklist_id}>\r\n              <td>{stocklist.stocklist_name}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-success\"\r\n                  onClick={() => stocktake(stocklist.stocklist_id, stocklist.stocklist_name)}\r\n                >\r\n                  Stocktake\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteList(stocklist.stocklist_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowLists;\r\n"]},"metadata":{},"sourceType":"module"}