{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\StocktakeLists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\"; //components\n\nimport ShowLists from \"./ShowLists\";\n\nconst StocktakeLists = ({\n  setAuth\n}) => {\n  const [stocktake, setStocktake] = useState(false);\n  const [allLists, setLists] = useState([]);\n  const [listsChange, setListsChange] = useState(false);\n  const [products, setProducts] = useState([]);\n  const dateString = Date().toString();\n  const stocktake_id = localStorage.getItem(\"stocktake\");\n\n  const checkStocktake = () => {\n    if (stocktake_id !== null) {\n      console.log(\"stocktake in progress\");\n      setStocktake(true);\n    }\n  };\n\n  const getProducts = async id => {\n    try {\n      const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const productsResult = await productsResponse.json();\n      console.log(productsResult);\n      setProducts(productsResult.rows);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const createRecord = async id => {\n    try {\n      const stockId = 4300;\n      const body = {\n        id,\n        stockId\n      };\n      console.log(JSON.stringify(body));\n      const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const newStocktake = async () => {\n    /*if (!stocktake && stocktake_id === null) {\r\n      console.log(\"hello\");\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        console.log(products);\r\n        products.forEach(product => {\r\n          createRecord(product.product_stocklist_id);\r\n        });\r\n          //kind of a temporary fix as i don't understand the nature of the issue but this fixes it. \r\n            \r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setStocktake(true);\r\n    }\r\n    */\n    products.forEach(product => {\n      createRecord(product.product_stocklist_id);\n    });\n  };\n\n  const getLists = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await response.json();\n      setLists(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const endStocktake = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"stocktake\");\n    localStorage.removeItem(\"stocktakedate\");\n    setStocktake(false);\n    toast.success(\"Stocktake ended\");\n  };\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setAuth(false);\n    toast.success(\"Logged out succsessfully!\");\n  };\n\n  useEffect(() => {\n    getProducts();\n    checkStocktake();\n    getLists();\n    setListsChange(false);\n\n    if (products.length > 0) {\n      console.log(products);\n    }\n  }, [listsChange]);\n  return !stocktake_id ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: e => logout(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Create a new stocktaking record for \", dateString, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: newStocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Start Stocktake\")))) : /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger float-right\",\n    onClick: e => endStocktake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"End Stocktake\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Stocktake in progress : \", localStorage.getItem(\"stocktakedate\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowLists, {\n    allLists: allLists,\n    setListsChange: setListsChange,\n    stocktake: stocktake,\n    stocktake_id: stocktake_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StocktakeLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/StocktakeLists.js"],"names":["React","useState","useEffect","toast","ShowLists","StocktakeLists","setAuth","stocktake","setStocktake","allLists","setLists","listsChange","setListsChange","products","setProducts","dateString","Date","toString","stocktake_id","localStorage","getItem","checkStocktake","console","log","getProducts","id","productsResponse","fetch","method","headers","token","productsResult","json","rows","error","message","createRecord","stockId","body","JSON","stringify","response","newStocktake","forEach","product","product_stocklist_id","getLists","parseData","err","endStocktake","e","preventDefault","removeItem","success","logout","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const dateString = Date().toString();\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      console.log(\"stocktake in progress\");\r\n      setStocktake(true);\r\n    }\r\n  };\r\n\r\n  const getProducts = async (id) => {\r\n    try {\r\n      const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n      const productsResult = await productsResponse.json();\r\n      console.log(productsResult);\r\n      setProducts(productsResult.rows);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const createRecord = async (id) => {\r\n    try {\r\n      const stockId = 4300;\r\n      const body = {id, stockId}\r\n      \r\n      console.log(JSON.stringify(body))\r\n\r\n      const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n\r\n  const newStocktake = async () => {\r\n    /*if (!stocktake && stocktake_id === null) {\r\n      console.log(\"hello\");\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        console.log(products);\r\n        products.forEach(product => {\r\n          createRecord(product.product_stocklist_id);\r\n        });\r\n\r\n        //kind of a temporary fix as i don't understand the nature of the issue but this fixes it. \r\n  \r\n        \r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n      setStocktake(true);\r\n    }\r\n    */\r\n   products.forEach(product => {\r\n     createRecord(product.product_stocklist_id);\r\n   })\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const endStocktake = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"stocktake\");\r\n    localStorage.removeItem(\"stocktakedate\");\r\n    setStocktake(false);\r\n    toast.success(\"Stocktake ended\");\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n    checkStocktake();\r\n    getLists();\r\n    setListsChange(false);\r\n    if (products.length > 0) {\r\n      console.log(products);\r\n    }\r\n  }, [listsChange]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={newStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>\r\n            Stocktake in progress : {localStorage.getItem(\"stocktakedate\")}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n          stocktake_id={stocktake_id}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n"]},"metadata":{},"sourceType":"module"}