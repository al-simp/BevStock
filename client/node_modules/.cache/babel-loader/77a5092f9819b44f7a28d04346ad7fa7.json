{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\Test.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst Test = () => {\n  const array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const [products, setProducts] = useState([]);\n  const [productsLoaded, setProductsLoaded] = useState(false);\n  const [salesLoaded, setSalesLoaded] = useState(false);\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\n  const [sales, setSales] = useState([]);\n  const [dataAndLabels, setDataAndLabels] = useState(false);\n  const [graphData, setGraphData] = useState(false);\n  const [data, setData] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [salesSorted, setSalesSorted] = useState([]);\n  const [salesShortened, setSalesShortened] = useState([]);\n\n  async function getProducts() {\n    try {\n      const response = await fetch(\"http://localhost:5000/products/get/distinct\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      setProductsLoaded(true);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        currentStocktake,\n        product\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      sales.push(parseRes);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const sortSales = sales => {\n    console.log(\"run once\");\n    setSalesSorted(sales.sort((a, b) => {\n      if (Number(a.sales) < Number(a.sales)) {\n        return 1;\n      } else if (Number(a.sales) > Number(a.sales)) {\n        return -1;\n      } else {\n        return 0;\n      }\n    }));\n    setDataAndLabels(true);\n  };\n\n  const shortenSalesArray = salesSorted => {};\n\n  useEffect(() => {\n    if (!productsLoaded) {\n      getProducts();\n    } else if (productsLoaded && !salesLoaded) {\n      products.forEach(product => {\n        getSalesData(product.product_id);\n      });\n      setSalesLoaded(true);\n    } else if (salesLoaded && !dataAndLabels) {\n      sortSales(sales);\n    } else if (dataAndLabels && !graphData) {\n      shortenSalesArray(salesSorted);\n      setGraphData(true);\n    }\n  });\n  return !graphData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Loading\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    className: \"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, console.log(_.slice(salesSorted, 0, 2)), \"Products loaded\"))));\n};\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/Test.js"],"names":["React","useEffect","useState","_","Test","array","products","setProducts","productsLoaded","setProductsLoaded","salesLoaded","setSalesLoaded","prevStocktake","localStorage","getItem","currentStocktake","sales","setSales","dataAndLabels","setDataAndLabels","graphData","setGraphData","data","setData","labels","setLabels","salesSorted","setSalesSorted","salesShortened","setSalesShortened","getProducts","response","fetch","method","headers","token","parseRes","json","error","console","message","getSalesData","product","body","JSON","stringify","push","sortSales","log","sort","a","b","Number","shortenSalesArray","forEach","product_id","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Test = () => {\r\n  const array = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  const [products, setProducts] = useState([]);\r\n  const [productsLoaded, setProductsLoaded] = useState(false);\r\n  const [salesLoaded, setSalesLoaded] = useState(false);\r\n  const prevStocktake = localStorage.getItem(\"secondlaststocktake\");\r\n  const currentStocktake = localStorage.getItem(\"laststocktake\");\r\n  const [sales, setSales] = useState([]);\r\n\r\n  const [dataAndLabels, setDataAndLabels] = useState(false);\r\n\r\n  const [graphData, setGraphData] = useState(false);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [labels, setLabels] = useState([]);\r\n\r\n  const [salesSorted, setSalesSorted] = useState([]);\r\n\r\n  const [salesShortened, setSalesShortened] = useState([]);\r\n\r\n  async function getProducts() {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/products/get/distinct\",\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      setProducts(parseRes);\r\n      setProductsLoaded(true);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n      const body = { prevStocktake, currentStocktake, product };\r\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n      const parseRes = await response.json();\r\n      sales.push(parseRes);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const sortSales = (sales) => {\r\n    console.log(\"run once\");\r\n    setSalesSorted(\r\n      sales.sort((a, b) => {\r\n        if (Number(a.sales) < Number(a.sales)) {\r\n          return 1;\r\n        } else if (Number(a.sales) > Number(a.sales)) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      })\r\n    );\r\n    setDataAndLabels(true);\r\n  };\r\n\r\n  const shortenSalesArray = (salesSorted) => {\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!productsLoaded) {\r\n      getProducts();\r\n    } else if (productsLoaded && !salesLoaded) {\r\n      products.forEach((product) => {\r\n        getSalesData(product.product_id);\r\n      });\r\n\r\n      setSalesLoaded(true);\r\n    } else if (salesLoaded && !dataAndLabels) {\r\n      sortSales(sales);\r\n    } else if (dataAndLabels && !graphData) {\r\n        shortenSalesArray(salesSorted);\r\n        setGraphData(true);\r\n    }\r\n  });\r\n\r\n  return !graphData ? (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n          <h1>Loading</h1>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\r\n          <h1>{console.log(_.slice(salesSorted, 0, 2))}Products loaded</h1>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}