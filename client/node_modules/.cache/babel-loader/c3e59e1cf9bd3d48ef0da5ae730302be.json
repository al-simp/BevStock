{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\TopSellerChart.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst TopSellerChart = ({\n  products,\n  currentStocktake,\n  prevStocktake\n}) => {\n  const [topSellers, setTopSellers] = useState([]);\n  const [sales, setSales] = useState([]);\n\n  const getSales = async () => {\n    setSales(products.map(product => {\n      return getSalesData(product.product_id);\n    }));\n  };\n\n  const getSalesData = async product => {\n    try {\n      const body = {\n        prevStocktake,\n        latestInventoryId,\n        currentStocktake\n      };\n      const response = await fetch(`http://localhost:5000/inventory/sales`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      return parseRes;\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (products.length > 0) {\n      getSales();\n    }\n  }, [products]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Top Seller Chart\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, currentStocktake), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, prevStocktake), products.map(product => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, product.product_id)));\n};\n\nexport default TopSellerChart;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/TopSellerChart.js"],"names":["React","useEffect","useState","Bar","TopSellerChart","products","currentStocktake","prevStocktake","topSellers","setTopSellers","sales","setSales","getSales","map","product","getSalesData","product_id","body","latestInventoryId","response","fetch","method","headers","JSON","stringify","parseRes","json","error","console","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,gBAAZ;AAA8BC,EAAAA;AAA9B,CAAD,KAAmD;AACxE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMU,QAAQ,GAAG,YAAY;AAC3BD,IAAAA,QAAQ,CAACN,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAAI;AAC7B,aAAOC,YAAY,CAACD,OAAO,CAACE,UAAT,CAAnB;AACH,KAFQ,CAAD,CAAR;AAGD,GAJD;;AAMA,QAAMD,YAAY,GAAG,MAAOD,OAAP,IAAmB;AACtC,QAAI;AACA,YAAMG,IAAI,GAAG;AAAEV,QAAAA,aAAF;AAAiBW,QAAAA,iBAAjB;AAAoCZ,QAAAA;AAApC,OAAb;AACA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CACzB,uCADyB,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEL,QAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHR,OAF0B,CAA5B;AASA,YAAMQ,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACA,aAAOD,QAAP;AACD,KAbH,CAaI,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACD;AACJ,GAjBD;;AAmBA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,CAACyB,MAAT,GAAkB,CAAtB,EAAyB;AACvBlB,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACP,QAAD,CAJM,CAAT;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,gBAAL,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,aAAL,CAHF,EAIGF,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACE,UAAb,CADD,CAJH,CADF;AAUD,CA7CD;;AA+CA,eAAeZ,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst TopSellerChart = ({ products, currentStocktake, prevStocktake }) => {\r\n  const [topSellers, setTopSellers] = useState([]);\r\n  const [sales, setSales] = useState([]);\r\n\r\n  const getSales = async () => {\r\n    setSales(products.map(product => {\r\n        return getSalesData(product.product_id)\r\n    }))\r\n  };\r\n\r\n  const getSalesData = async (product) => {\r\n    try {\r\n        const body = { prevStocktake, latestInventoryId, currentStocktake};\r\n        const response = await fetch(\r\n          `http://localhost:5000/inventory/sales`,\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body),\r\n          }\r\n          \r\n        );\r\n        const parseRes = await response.json();\r\n        return parseRes;\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      getSales();\r\n    }\r\n  }, [products]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Top Seller Chart</h1>\r\n      <h1>{currentStocktake}</h1>\r\n      <h1>{prevStocktake}</h1>\r\n      {products.map((product) => (\r\n        <h1>{product.product_id}</h1>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSellerChart;\r\n"]},"metadata":{},"sourceType":"module"}