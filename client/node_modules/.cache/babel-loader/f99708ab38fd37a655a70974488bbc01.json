{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\StocktakeLists.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\"; //components\n\nimport ShowLists from \"./ShowLists\";\n\nconst StocktakeLists = ({\n  setAuth\n}) => {\n  const [stocktake, setStocktake] = useState(false);\n  const [allLists, setLists] = useState([]);\n  const [listsChange, setListsChange] = useState(false);\n  const dateString = Date().toString();\n  const stocktake_id = localStorage.getItem(\"stocktake\");\n\n  const checkStocktake = () => {\n    if (stocktake_id !== null) {\n      console.log(\"stocktake in progress\");\n      setStocktake(true);\n    }\n  };\n\n  const createStocktake = () => {\n    setStocktake(window.confirm(\"Sure?\"));\n  };\n\n  const generateRecords = async id => {\n    try {\n      const stockId = Number(localStorage.getItem(\"stocktake\"));\n      const body = {\n        id,\n        stockId\n      };\n      console.log(JSON.stringify(body));\n      /* const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\", \r\n        headers: { token: localStorage.token },\r\n        body: JSON.stringify(body),\r\n      });\r\n        const genParseRes = await response.json();\r\n      console.log(genParseRes); */\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const newStocktake = async () => {\n    if (stocktake && stocktake_id === null) {\n      console.log(\"hello\");\n\n      try {\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\n          method: \"POST\",\n          headers: {\n            token: localStorage.token\n          }\n        });\n        const result = await response.json();\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\n\n        try {\n          const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\n            method: \"GET\",\n            headers: {\n              token: localStorage.token\n            }\n          });\n          const productsResult = await productsResponse.json();\n          console.log(productsResult);\n          productsResult.rows.forEach(product => {\n            generateRecords(product.product_stocklist_id);\n          });\n        } catch (error) {\n          console.error(error.message);\n        }\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  };\n\n  const getLists = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseData = await response.json();\n      setLists(parseData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const endStocktake = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"stocktake\");\n    localStorage.removeItem(\"stocktakedate\");\n    setStocktake(false);\n    toast.success(\"Stocktake ended\");\n  };\n\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setAuth(false);\n    toast.success(\"Logged out succsessfully!\");\n  };\n\n  useEffect(() => {\n    getLists();\n    newStocktake();\n    setListsChange(false);\n    checkStocktake();\n  }, [listsChange, stocktake]);\n  return !stocktake_id ? /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onClick: e => logout(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Create a new stocktaking record for \", dateString, \"?\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-info\",\n    onClick: createStocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Start Stocktake\")))) : /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger float-right\",\n    onClick: e => endStocktake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"End Stocktake\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Stocktake\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Stocktake in progress : \", localStorage.getItem(\"stocktakedate\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ShowLists, {\n    allLists: allLists,\n    setListsChange: setListsChange,\n    stocktake: stocktake,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default StocktakeLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/StocktakeLists.js"],"names":["React","useState","useEffect","toast","ShowLists","StocktakeLists","setAuth","stocktake","setStocktake","allLists","setLists","listsChange","setListsChange","dateString","Date","toString","stocktake_id","localStorage","getItem","checkStocktake","console","log","createStocktake","window","confirm","generateRecords","id","stockId","Number","body","JSON","stringify","error","message","newStocktake","response","fetch","method","headers","token","result","json","setItem","rows","stocktake_date","productsResponse","productsResult","forEach","product","product_stocklist_id","err","getLists","parseData","endStocktake","e","preventDefault","removeItem","success","logout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n//components\r\nimport ShowLists from \"./ShowLists\";\r\n\r\nconst StocktakeLists = ({ setAuth }) => {\r\n  const [stocktake, setStocktake] = useState(false);\r\n  const [allLists, setLists] = useState([]);\r\n  const [listsChange, setListsChange] = useState(false);\r\n\r\n  const dateString = Date().toString();\r\n\r\n\r\n  const stocktake_id = localStorage.getItem(\"stocktake\");\r\n\r\n  const checkStocktake = () => {\r\n    if (stocktake_id !== null) {\r\n      console.log(\"stocktake in progress\")\r\n      setStocktake(true);\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  const createStocktake = () => {\r\n    setStocktake(window.confirm(\"Sure?\"));\r\n  };\r\n\r\n  const generateRecords = async (id) => {\r\n    try {\r\n      const stockId = Number(localStorage.getItem(\"stocktake\"));\r\n      const body = { id, stockId };\r\n\r\n      console.log(JSON.stringify(body));\r\n\r\n      /* const response = await fetch(\"http://localhost:5000/stocktake/generate\", {\r\n        method: \"POST\", \r\n        headers: { token: localStorage.token },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const genParseRes = await response.json();\r\n      console.log(genParseRes); */\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }\r\n\r\n  const newStocktake = async () => {\r\n    if (stocktake && (stocktake_id === null)) {\r\n      console.log(\"hello\");\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/stocktake/new\", {\r\n          method: \"POST\",\r\n          headers: { token: localStorage.token },\r\n        });\r\n        const result = await response.json();\r\n        localStorage.setItem(\"stocktake\", result.rows[0].stocktake_id);\r\n        localStorage.setItem(\"stocktakedate\", result.rows[0].stocktake_date);\r\n        try {\r\n          const productsResponse = await fetch(\"http://localhost:5000/stocktake/\", {\r\n            method: \"GET\",\r\n            headers: { token: localStorage.token },\r\n          });\r\n          const productsResult = await productsResponse.json();\r\n          console.log(productsResult);\r\n          productsResult.rows.forEach(product => {\r\n            generateRecords(product.product_stocklist_id);\r\n          });\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getLists = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/stocklists/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseData = await response.json();\r\n      setLists(parseData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const endStocktake = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"stocktake\");\r\n    localStorage.removeItem(\"stocktakedate\");\r\n    setStocktake(false);\r\n    toast.success(\"Stocktake ended\");\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out succsessfully!\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getLists();\r\n    newStocktake();\r\n    setListsChange(false);\r\n    checkStocktake();\r\n  }, [listsChange, stocktake]);\r\n\r\n  return !stocktake_id ? (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-primary float-right\"\r\n          onClick={(e) => logout(e)}\r\n        >\r\n          Logout\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Create a new stocktaking record for {dateString}?</h4>\r\n          <button className=\"btn btn-info\" onClick={createStocktake}>\r\n            Start Stocktake\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  ) : (\r\n    <main role=\"main\">\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          className=\"btn btn-danger float-right\"\r\n          onClick={(e) => endStocktake(e)}\r\n        >\r\n          End Stocktake\r\n        </button>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Stocktake</h1>\r\n          <h4>Stocktake in progress : {localStorage.getItem(\"stocktakedate\")}</h4>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ShowLists\r\n          allLists={allLists}\r\n          setListsChange={setListsChange}\r\n          stocktake={stocktake}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default StocktakeLists;\r\n"]},"metadata":{},"sourceType":"module"}