{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\user\\\\UserShowLists.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserShowLists = ({\n  allLists,\n  setListsChange,\n  stocktake,\n  stocktake_id\n}) => {\n  const [assignedLists, setAssignedLists] = useState([]);\n  const [stocktakeInstance, setStocktakeInstance] = useState([]); //get the lists that have been assigned to the user\n\n  async function checkAssignedDuties() {\n    try {\n      const stocktake_id = localStorage.getItem(\"stocktake\");\n      const id = localStorage.getItem(\"user\");\n      const body = {\n        id,\n        stocktake_id\n      };\n      console.log(body);\n      const response = await fetch(\"http://localhost:5000/stocklists/userassignedlists\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      console.log(parseRes);\n      setAssignedLists(parseRes);\n\n      if (parseRes.length > 0) {\n        setAssignedLists(parseRes);\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  async function markComplete(id) {\n    const message = document.getElementById(`${id}`).value;\n\n    try {\n      const body = {\n        id,\n        stocktakeInstance,\n        message\n      };\n      const response = await fetch(\"http://localhost:5000/stocktake/markascomplete\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      await response.json();\n      setListsChange(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    setStocktakeInstance(stocktake_id);\n    setListsChange(false);\n    checkAssignedDuties();\n  }, [allLists]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Your Assigned Stock Areas\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Stock Area\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Count\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Manager Message\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Your Message\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, console.log(assignedLists), assignedLists.map(list => /*#__PURE__*/React.createElement(\"tr\", {\n    key: list.stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, list.stocklist_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `count/${list.stocklist_id}/${stocktakeInstance}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Count\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, list.user_message), list.completed ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, list.completed_message), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, \"Complete\")) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    id: `${list.stocklist_id}`,\n    cols: \"40\",\n    rows: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: e => {\n      markComplete(list.stocklist_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Mark as complete\"))))))))));\n};\n\nexport default UserShowLists;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/user/UserShowLists.js"],"names":["React","useState","useEffect","Fragment","Link","UserShowLists","allLists","setListsChange","stocktake","stocktake_id","assignedLists","setAssignedLists","stocktakeInstance","setStocktakeInstance","checkAssignedDuties","localStorage","getItem","id","body","console","log","response","fetch","method","headers","JSON","stringify","parseRes","json","length","error","message","markComplete","document","getElementById","value","err","map","list","stocklist_id","stocklist_name","user_message","completed","completed_message","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserShowLists = ({\r\n  allLists,\r\n  setListsChange,\r\n  stocktake,\r\n  stocktake_id,\r\n}) => {\r\n  const [assignedLists, setAssignedLists] = useState([]);\r\n  const [stocktakeInstance, setStocktakeInstance] = useState([]);\r\n\r\n  //get the lists that have been assigned to the user\r\n  async function checkAssignedDuties() {\r\n    try {\r\n      const stocktake_id = localStorage.getItem(\"stocktake\");\r\n      const id = localStorage.getItem(\"user\");\r\n      const body = { id, stocktake_id };\r\n      console.log(body);\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocklists/userassignedlists\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n      console.log(parseRes);\r\n      setAssignedLists(parseRes);\r\n      if (parseRes.length > 0) {\r\n        setAssignedLists(parseRes);\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  async function markComplete(id) {\r\n    const message = document.getElementById(`${id}`).value;\r\n    try {\r\n      const body = { id, stocktakeInstance, message };\r\n      const response = await fetch(\r\n        \"http://localhost:5000/stocktake/markascomplete\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      await response.json();\r\n      setListsChange(true);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setStocktakeInstance(stocktake_id);\r\n    setListsChange(false);\r\n    checkAssignedDuties();\r\n  }, [allLists]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Your Assigned Stock Areas</h4>\r\n          <table className=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>Stock Area</th>\r\n                <th>Count</th>\r\n                <th>Manager Message</th>\r\n                <th>Your Message</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {console.log(assignedLists)}\r\n              {assignedLists.map((list) => (\r\n                <tr key={list.stocklist_id}>\r\n                  <td>{list.stocklist_name}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`count/${list.stocklist_id}/${stocktakeInstance}`}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Count\r\n                    </Link>\r\n                  </td>\r\n                  <td>{list.user_message}</td>\r\n                  {list.completed ? (\r\n                    <Fragment>\r\n                      <td>{list.completed_message}</td>\r\n                      <td>Complete</td>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <td>\r\n                        <textarea\r\n                          id={`${list.stocklist_id}`}\r\n                          cols=\"40\"\r\n                          rows=\"2\"\r\n                        ></textarea>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          onClick={(e) => {\r\n                            markComplete(list.stocklist_id);\r\n                          }}\r\n                        >\r\n                          Mark as complete\r\n                        </button>\r\n                      </td>\r\n                    </Fragment>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserShowLists;\r\n"]},"metadata":{},"sourceType":"module"}