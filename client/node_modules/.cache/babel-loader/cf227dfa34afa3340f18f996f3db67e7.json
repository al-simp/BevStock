{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\DndTest.js\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState, useRef } from \"react\";\nimport Product from \"./Product\";\nimport \"../../../src/App.css\";\nimport { toast } from \"react-toastify\";\n\nconst DndTest = () => {\n  const [products, setProducts] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [originalIndex, setOriginalIndex] = useState(\"\");\n  const dragItem = useRef();\n  const dragNode = useRef(); //get products on list\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/stocklists/list/44`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setProducts(parseRes);\n      console.log(parseRes);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const handleDragStart = (e, params) => {\n    console.log(\"drag start\", params);\n    dragItem.current = params;\n    dragNode.current = e.target;\n    setOriginalIndex(params);\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, params) => {\n    const currentItem = dragItem.current;\n\n    if (originalIndex.productI !== params.productI) {\n      console.log(\"Target is not the same\");\n      setProducts(oldProducts => {\n        let newList = JSON.parse(JSON.stringify(oldProducts));\n        newList.splice(params.productI, 0, newList.splice(currentItem.productI, 1)[0]);\n        dragItem.current = params;\n        return newList;\n      });\n      products.map((product, productI) => {\n        console.log(product.product_stocklist_id, productI);\n      });\n    }\n  };\n\n  const handleDragEnd = () => {\n    console.log(\"Ending Drag\");\n    setDragging(false);\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\n    dragItem.current = null;\n    dragNode.current = null;\n  };\n\n  async function setPosition(id, productI) {\n    try {\n      const body = {\n        id,\n        productI\n      };\n      const response = await fetch(`http://localhost:5000/stocklists/savepositions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json;\n    } catch (error) {}\n  }\n\n  async function setPositions() {\n    products.map((product, productI) => {\n      setPosition(product.product_stocklist_id, productI);\n    });\n    toast.success(\"Updated succesfully\");\n  }\n\n  const getStyles = params => {\n    const currentItem = dragItem.current;\n\n    if (currentItem.productI === params) {\n      return \"current dnd-item\";\n    }\n\n    return \"dnd-item\";\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"TEST\"), /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"saveButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setPositions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Save List Positions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"drag-n-drop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dnd-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, products.map((product, productI) => /*#__PURE__*/React.createElement(\"div\", {\n    draggable: true,\n    onDragStart: e => {\n      handleDragStart(e, {\n        productI\n      });\n    },\n    onDragEnter: dragging ? e => {\n      handleDragEnter(e, {\n        productI\n      });\n    } : null,\n    key: product.product_stocklist_id,\n    className: dragging ? getStyles(productI) : \"dnd-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Product, {\n    dragging: dragging,\n    key: product.product_stocklist_id,\n    name: product.product_name,\n    id: product.product_stocklist_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default DndTest;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/DndTest.js"],"names":["React","useEffect","useState","useRef","Product","toast","DndTest","products","setProducts","dragging","setDragging","originalIndex","setOriginalIndex","dragItem","dragNode","getProducts","response","fetch","method","headers","token","localStorage","parseRes","json","console","log","err","error","message","handleDragStart","e","params","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","currentItem","productI","oldProducts","newList","JSON","parse","stringify","splice","map","product","product_stocklist_id","removeEventListener","setPosition","id","body","setPositions","success","getStyles","product_name"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState, useRef } from \"react\";\r\nimport Product from \"./Product\";\r\nimport \"../../../src/App.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst DndTest = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [dragging, setDragging] = useState(false);\r\n  const [originalIndex, setOriginalIndex] = useState(\"\");\r\n  const dragItem = useRef();\r\n  const dragNode = useRef();\r\n\r\n  //get products on list\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/stocklists/list/44`, {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n\r\n      setProducts(parseRes);\r\n      console.log(parseRes);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const handleDragStart = (e, params) => {\r\n    console.log(\"drag start\", params);\r\n    dragItem.current = params;\r\n    dragNode.current = e.target;\r\n    setOriginalIndex(params);\r\n    dragNode.current.addEventListener(\"dragend\", handleDragEnd);\r\n    setTimeout(() => {\r\n      setDragging(true);\r\n    }, 0);\r\n  };\r\n\r\n  const handleDragEnter = (e, params) => {\r\n    const currentItem = dragItem.current;\r\n    if (originalIndex.productI !== params.productI) {\r\n      console.log(\"Target is not the same\");\r\n      setProducts((oldProducts) => {\r\n        let newList = JSON.parse(JSON.stringify(oldProducts));\r\n        newList.splice(\r\n          params.productI,\r\n          0,\r\n          newList.splice(currentItem.productI, 1)[0]\r\n        );\r\n        dragItem.current = params;\r\n        return newList;\r\n      });\r\n      products.map((product, productI) => {\r\n        console.log(product.product_stocklist_id, productI);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDragEnd = () => {\r\n    console.log(\"Ending Drag\");\r\n    setDragging(false);\r\n    dragNode.current.removeEventListener(\"dragend\", handleDragEnd);\r\n    dragItem.current = null;\r\n    dragNode.current = null;\r\n  };\r\n\r\n  async function setPosition(id, productI) {\r\n    try {\r\n      const body = { id, productI };\r\n      const response = await fetch(\r\n        `http://localhost:5000/stocklists/savepositions`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-type\": \"application/json\" },\r\n          body: JSON.stringify(body),\r\n        }\r\n      );\r\n      const parseRes = await response.json;\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function setPositions() {\r\n    products.map((product, productI) => {\r\n      setPosition(product.product_stocklist_id, productI);\r\n    });\r\n    toast.success(\"Updated succesfully\");\r\n  }\r\n\r\n  const getStyles = (params) => {\r\n    const currentItem = dragItem.current;\r\n    if (currentItem.productI === params) {\r\n      return \"current dnd-item\";\r\n    }\r\n    return \"dnd-item\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>TEST</h1>\r\n      <header>\r\n        <div className=\"saveButton\">\r\n          <button onClick={setPositions}>Save List Positions</button>\r\n        </div>\r\n        <div className=\"drag-n-drop\">\r\n          <div className=\"dnd-group\">\r\n            {products.map((product, productI) => (\r\n              <div\r\n                draggable\r\n                onDragStart={(e) => {\r\n                  handleDragStart(e, { productI });\r\n                }}\r\n                onDragEnter={\r\n                  dragging\r\n                    ? (e) => {\r\n                        handleDragEnter(e, { productI });\r\n                      }\r\n                    : null\r\n                }\r\n                key={product.product_stocklist_id}\r\n                className={dragging ? getStyles(productI) : \"dnd-item\"}\r\n              >\r\n                <Product\r\n                  dragging={dragging}\r\n                  key={product.product_stocklist_id}\r\n                  name={product.product_name}\r\n                  id={product.product_stocklist_id}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DndTest;\r\n"]},"metadata":{},"sourceType":"module"}