{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\Bevstock\\\\client\\\\src\\\\components\\\\Stocktaking.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport EditQuantity from \"./EditQuantity\";\n\nconst Stocklists = props => {\n  const [lists] = useState([]); //delete product function\n\n  const deleteProduct = async id => {\n    try {\n      const deleteProduct = await fetch(`http://localhost:5000/products/${id}`, {\n        method: \"DELETE\"\n      });\n      setProducts(products.filter(product => product.product_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/products\");\n      const jsonData = await response.json();\n      setProducts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Product List\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.product_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, product.product_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, product.quantity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EditQuantity, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteProduct(products.product_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Delete\")))))));\n};\n\nexport default Stocklists;","map":{"version":3,"sources":["C:/Users/alans/Bevstock/client/src/components/Stocktaking.js"],"names":["React","Fragment","useState","useEffect","EditQuantity","Stocklists","props","lists","deleteProduct","id","fetch","method","setProducts","products","filter","product","product_id","err","console","error","message","getProducts","response","jsonData","json","map","product_name","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAM,CAACC,KAAD,IAAUL,QAAQ,CAAC,EAAD,CAAxB,CAF4B,CAI5B;;AACA,QAAMM,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClC,QAAI;AACF,YAAMD,aAAa,GAAG,MAAME,KAAK,CAC9B,kCAAiCD,EAAG,EADN,EAE/B;AACEE,QAAAA,MAAM,EAAE;AADV,OAF+B,CAAjC;AAOAC,MAAAA,WAAW,CAACC,QAAQ,CAACC,MAAT,CAAiBC,OAAD,IAAaA,OAAO,CAACC,UAAR,KAAuBP,EAApD,CAAD,CAAX;AACD,KATD,CASE,OAAOQ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GAbD;;AAeA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAAC,gCAAD,CAA5B;AACA,YAAMa,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAZ,MAAAA,WAAW,CAACW,QAAD,CAAX;AACD,KALD,CAKE,OAAON,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GATD;;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,QAAQ,CAACY,GAAT,CAAcV,OAAD,iBACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,OAAO,CAACW,YAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,OAAO,CAACY,QAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEZ,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,OAAO,EAAE,MAAMP,aAAa,CAACK,QAAQ,CAACG,UAAV,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,CADD,CANH,CATF,CAFF,CADF;AAuCD,CA1ED;;AA4EA,eAAeX,UAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport EditQuantity from \"./EditQuantity\";\r\n\r\nconst Stocklists = (props) => {\r\n  \r\n  const [lists] = useState([]);\r\n\r\n  //delete product function\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      const deleteProduct = await fetch(\r\n        `http://localhost:5000/products/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n\r\n      setProducts(products.filter((product) => product.product_id !== id));\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/products\");\r\n      const jsonData = await response.json();\r\n\r\n      setProducts(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"text-center mt-5\">Product List</h1>\r\n      <table className=\"table mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Update</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/*<tr>\r\n                        <td>John</td>\r\n                        <td>Doe</td>\r\n                        <td>john@example.com</td>\r\n                    </tr>*/}\r\n          {products.map((product) => (\r\n            <tr key={product.product_id}>\r\n              <td>{product.product_name}</td>\r\n              <td>{product.quantity}</td>\r\n              <td>\r\n                <EditQuantity product={product} />\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteProduct(products.product_id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Stocklists;\r\n"]},"metadata":{},"sourceType":"module"}