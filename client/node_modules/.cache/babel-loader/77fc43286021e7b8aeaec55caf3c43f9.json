{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\Bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\Inventory.js\";\nimport React, { Fragment, useState, useEffect } from \"react\"; //components\n\nimport InventoryList from \"./InventoryList\";\n\nconst Inventory = () => {\n  const [products, setProducts] = useState([]);\n  const [productsChange, setProductsChange] = useState(false);\n  const [setProductQuantities, productQuantities] = useState([]);\n\n  const getProducts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/products\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const jsonData = await response.json();\n      setProducts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProductQuantities = () => {\n    const getTotal = async product => {\n      let productId = product.product_id;\n      let productName = product.product_name;\n      let productQuantity = \"\";\n\n      try {\n        const response = await fetch(`http://localhost:5000/inventory/${productId}`, {\n          method: \"GET\",\n          headers: {\n            token: localStorage.token\n          }\n        });\n        productQuantity = await response.json();\n      } catch (err) {\n        console.error(err.message);\n      }\n\n      setProductsChange(true);\n      var productInventory = {\n        name: productName,\n        quantity: productQuantity\n      };\n      productQuantities.push(productInventory);\n    };\n\n    products.forEach(getTotal);\n    setProductQuantities(productQuantities);\n  };\n\n  useEffect(() => {\n    getProductQuantities();\n    getProducts();\n    setProductsChange(false);\n  }, [productsChange]);\n  console.log(productQuantities);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    role: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Inventory;","map":{"version":3,"sources":["C:/Users/alans/Bevstock/client/src/components/inventory/Inventory.js"],"names":["React","Fragment","useState","useEffect","InventoryList","Inventory","products","setProducts","productsChange","setProductsChange","setProductQuantities","productQuantities","getProducts","response","fetch","method","headers","token","localStorage","jsonData","json","err","console","error","message","getProductQuantities","getTotal","product","productId","product_id","productName","product_name","productQuantity","productInventory","name","quantity","push","forEach","log"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\n//components\r\nimport InventoryList from \"./InventoryList\";\r\n\r\nconst Inventory = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [productsChange, setProductsChange] = useState(false);\r\n  const [setProductQuantities, productQuantities] = useState([]);\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/products\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token },\r\n      });\r\n\r\n      const jsonData = await response.json();\r\n      setProducts(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getProductQuantities = () => {\r\n    \r\n    const getTotal = async (product) => {\r\n      let productId = product.product_id;\r\n      let productName = product.product_name;\r\n      let productQuantity = \"\";\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/inventory/${productId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { token: localStorage.token },\r\n          }\r\n        );\r\n        productQuantity = await response.json();\r\n      } catch (err) {\r\n        console.error(err.message);\r\n      }\r\n\r\n      setProductsChange(true);\r\n\r\n      var productInventory = { name: productName, quantity: productQuantity };\r\n\r\n      productQuantities.push(productInventory);\r\n    };\r\n\r\n    products.forEach(getTotal);\r\n\r\n    setProductQuantities(productQuantities);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductQuantities();\r\n    getProducts();\r\n    setProductsChange(false);\r\n  }, [productsChange]);\r\n\r\n\r\n  console.log(productQuantities);\r\n\r\n  return (\r\n    <Fragment>\r\n      <main role=\"main\">\r\n        <div className=\"jumbotron\">\r\n          <div className=\"container\">\r\n            <h1 className=\"display-3\">Inventory</h1>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n        <div></div>\r\n      </main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n"]},"metadata":{},"sourceType":"module"}