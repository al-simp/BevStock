{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\bevstock\\\\client\\\\src\\\\components\\\\stocktaking\\\\Bottle.js\";\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport CountModal from \"./CountModal\";\n\nconst Bottle = props => {\n  const [bottle, setBottle] = useState({});\n  const {\n    result,\n    hasScanned,\n    hasResult,\n    setPairBool\n  } = props;\n  const stocktake = localStorage.getItem(\"stocktake\");\n\n  const getBottle = async () => {\n    if (result !== null && !hasResult && !hasScanned) {\n      console.log(\"result\", result, \"scanned\", hasScanned, \"hasResult\", hasResult);\n      setPairBool(\"hasScanned\", true);\n\n      try {\n        const body = {\n          result,\n          stocktake\n        };\n        const response = await fetch(\"http://localhost:5000/stocktake/productfromid\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        const parseData = await response.json();\n        console.log(parseData.length);\n        setBottle(parseData);\n        console.log(parseData);\n        setPairBool(\"hasResult\", true);\n        console.log(bottle);\n      } catch (err) {\n        console.error(err.message);\n        setPairBool(\"hasScanned\", false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!hasResult) {\n      getBottle();\n    }\n  }, [result, bottle]);\n  return !_.isEmpty(bottle) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 36\n    }\n  }, bottle[0].product_stocklist_id)) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 86\n    }\n  }, \"No bottle found\");\n};\n\nexport default Bottle;","map":{"version":3,"sources":["C:/Users/alans/bevstock/client/src/components/stocktaking/Bottle.js"],"names":["React","useEffect","useState","_","CountModal","Bottle","props","bottle","setBottle","result","hasScanned","hasResult","setPairBool","stocktake","localStorage","getItem","getBottle","console","log","body","response","fetch","method","headers","JSON","stringify","parseData","json","length","err","error","message","isEmpty","product_stocklist_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM;AAAEO,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA;AAAjC,MAAiDN,KAAvD;AACA,QAAMO,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AAGA,QAAMC,SAAS,GAAG,YAAY;AAE5B,QAAIP,MAAM,KAAK,IAAX,IAAmB,CAACE,SAApB,IAAiC,CAACD,UAAtC,EAAkD;AAChDO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,MAAtB,EAA8B,SAA9B,EAAyCC,UAAzC,EAAqD,WAArD,EAAkEC,SAAlE;AACEC,MAAAA,WAAW,CAAC,YAAD,EAAe,IAAf,CAAX;;AACF,UAAI;AACF,cAAMO,IAAI,GAAG;AAAEV,UAAAA,MAAF;AAAUI,UAAAA;AAAV,SAAb;AACA,cAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+CAD0B,EAE1B;AACEC,UAAAA,MAAM,EAAE,MADV;AAEEC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFX;AAGEJ,UAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHR,SAF0B,CAA5B;AASA,cAAMO,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAxB;AAEAV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACE,MAAtB;AACApB,QAAAA,SAAS,CAACkB,SAAD,CAAT;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ;AACAd,QAAAA,WAAW,CAAC,WAAD,EAAc,IAAd,CAAX;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACD,OAlBD,CAkBE,OAAOsB,GAAP,EAAY;AACZZ,QAAAA,OAAO,CAACa,KAAR,CAAcD,GAAG,CAACE,OAAlB;AACAnB,QAAAA,WAAW,CAAC,YAAD,EAAe,KAAf,CAAX;AACD;AACF;AACF,GA5BD;;AA8BAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,SAAL,EAAgB;AAClBK,MAAAA,SAAS;AACN;AACJ,GAJQ,EAIN,CAACP,MAAD,EAASF,MAAT,CAJM,CAAT;AAMA,SAAO,CAACJ,CAAC,CAAC6B,OAAF,CAAUzB,MAAV,CAAD,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAAC,CAAD,CAAN,CAAU0B,oBAAf,CAAL,CAArB,gBAA4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAnF;AACD,CA5CD;;AA8CA,eAAe5B,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport CountModal from \"./CountModal\";\r\n\r\nconst Bottle = (props) => {\r\n  const [bottle, setBottle] = useState({});\r\n\r\n  const { result, hasScanned, hasResult, setPairBool } = props;\r\n  const stocktake = localStorage.getItem(\"stocktake\");\r\n  \r\n\r\n  const getBottle = async () => {\r\n    \r\n    if (result !== null && !hasResult && !hasScanned) {\r\n      console.log(\"result\", result, \"scanned\", hasScanned, \"hasResult\", hasResult)\r\n        setPairBool(\"hasScanned\", true);\r\n      try {\r\n        const body = { result, stocktake };\r\n        const response = await fetch(\r\n          \"http://localhost:5000/stocktake/productfromid\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-type\": \"application/json\" },\r\n            body: JSON.stringify(body)\r\n          }\r\n        );\r\n\r\n        const parseData = await response.json();\r\n        \r\n        console.log(parseData.length);\r\n        setBottle(parseData);\r\n        console.log(parseData);\r\n        setPairBool(\"hasResult\", true);\r\n        console.log(bottle);\r\n      } catch (err) {\r\n        console.error(err.message);\r\n        setPairBool(\"hasScanned\", false);\r\n      }\r\n    } \r\n  };\r\n\r\n  useEffect(() => {\r\n      if (!hasResult) {\r\n    getBottle();\r\n      }\r\n  }, [result, bottle]);\r\n\r\n  return !_.isEmpty(bottle) ? <div><h1>{bottle[0].product_stocklist_id}</h1></div> : <h1>No bottle found</h1>\r\n};\r\n\r\nexport default Bottle;\r\n"]},"metadata":{},"sourceType":"module"}