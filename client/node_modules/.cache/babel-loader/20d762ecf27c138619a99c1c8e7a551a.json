{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alans\\\\Bevstock\\\\client\\\\src\\\\components\\\\inventory\\\\InventoryList.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\n\nconst InventoryList = ({\n  products,\n  setProductsChange\n}) => {\n  const [productQuantities, setProductQuantities] = useState([]); //get total inventory function\n\n  const getTotal = async product => {\n    let productId = product.product_id;\n    let productName = product.product_name;\n    let productQuantity = \"\";\n\n    try {\n      const response = await fetch(`http://localhost:5000/inventory/${productId}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      productQuantity = await response.json();\n    } catch (err) {\n      console.error(err.message);\n    }\n\n    setProductsChange(true);\n    var productInventory = {\n      name: productName,\n      quantity: productQuantity\n    };\n    productQuantities.push(productInventory);\n  };\n\n  products.forEach(getTotal);\n  useEffect(() => {\n    setProductQuantities(productQuantities);\n  }, [productQuantities]);\n  console.log(productQuantities);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default InventoryList;","map":{"version":3,"sources":["C:/Users/alans/Bevstock/client/src/components/inventory/InventoryList.js"],"names":["React","useState","useEffect","Fragment","InventoryList","products","setProductsChange","productQuantities","setProductQuantities","getTotal","product","productId","product_id","productName","product_name","productQuantity","response","fetch","method","headers","token","localStorage","json","err","console","error","message","productInventory","name","quantity","push","forEach","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAqC;AACzD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D,CADyD,CAGzD;;AACA,QAAMQ,QAAQ,GAAG,MAAOC,OAAP,IAAmB;AAClC,QAAIC,SAAS,GAAGD,OAAO,CAACE,UAAxB;AACA,QAAIC,WAAW,GAAGH,OAAO,CAACI,YAA1B;AACA,QAAIC,eAAe,GAAG,EAAtB;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCN,SAAU,EADnB,EAE1B;AACEO,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAFX,OAF0B,CAA5B;AAOAL,MAAAA,eAAe,GAAG,MAAMC,QAAQ,CAACM,IAAT,EAAxB;AAED,KAVD,CAUE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;;AAEDpB,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEA,QAAIqB,gBAAgB,GAAG;AAAEC,MAAAA,IAAI,EAAEf,WAAR;AAAqBgB,MAAAA,QAAQ,EAAEd;AAA/B,KAAvB;AAEAR,IAAAA,iBAAiB,CAACuB,IAAlB,CAAuBH,gBAAvB;AACD,GAvBD;;AAyBAtB,EAAAA,QAAQ,CAAC0B,OAAT,CAAiBtB,QAAjB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACH,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIAiB,EAAAA,OAAO,CAACQ,GAAR,CAAYzB,iBAAZ;AAEA,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAtCD;;AAwCA,eAAeH,aAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\n\r\nconst InventoryList = ({ products, setProductsChange }) => {\r\n  const [productQuantities, setProductQuantities] = useState([]);\r\n\r\n  //get total inventory function\r\n  const getTotal = async (product) => {\r\n    let productId = product.product_id;\r\n    let productName = product.product_name;\r\n    let productQuantity = \"\";\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/inventory/${productId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: { token: localStorage.token },\r\n        }\r\n      );\r\n      productQuantity = await response.json();\r\n\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n\r\n    setProductsChange(true);\r\n\r\n    var productInventory = { name: productName, quantity: productQuantity };\r\n\r\n    productQuantities.push(productInventory);\r\n  };\r\n\r\n  products.forEach(getTotal);\r\n\r\n  useEffect(() => {\r\n      setProductQuantities(productQuantities);\r\n  }, [productQuantities])\r\n\r\n  console.log(productQuantities);\r\n\r\n  return <Fragment></Fragment>;\r\n};\r\n\r\nexport default InventoryList;\r\n"]},"metadata":{},"sourceType":"module"}